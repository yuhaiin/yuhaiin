name: Go

on:
  push:
    branches: [main]
    tags: [v*]
  pull_request:
    branches: [main]

jobs:
  package:
    needs: []
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: "0"
          fetch-tags: "true"

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          flavor: latest=true
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          check-latest: true
          go-version-file: "go.mod"

      - name: update dep
        run: |
          go get -v -u github.com/yuhaiin/kitte@$(curl -H "Accept: application/vnd.github.VERSION.sha" "https://api.github.com/repos/yuhaiin/kitte/commits/main")
          go get -v -u github.com/yuhaiin/yuhaiin.github.io@$(curl -H "Accept: application/vnd.github.VERSION.sha" "https://api.github.com/repos/yuhaiin/yuhaiin.github.io/commits/main")

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - # Add support for more platforms with QEMU (optional)
        # https://github.com/docker/setup-qemu-action
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          file: cmd/yuhaiin/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  android:
    needs: []
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: "0"
          fetch-tags: "true"

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          check-latest: true
          go-version-file: "go.mod"

      - name: set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: build yuhaiin aar
        run: |
          go get -v -u github.com/yuhaiin/kitte@$(curl -H "Accept: application/vnd.github.VERSION.sha" "https://api.github.com/repos/yuhaiin/kitte/commits/main")
          go get -v -u github.com/yuhaiin/yuhaiin.github.io@$(curl -H "Accept: application/vnd.github.VERSION.sha" "https://api.github.com/repos/yuhaiin/yuhaiin.github.io/commits/main")
          go install golang.org/x/mobile/cmd/gomobile@latest
          gomobile init
          make yuhaiin_android_aar

      - name: upload_android_aar
        uses: actions/upload-artifact@v4
        with:
          name: yuhaiin.aar
          path: yuhaiin.aar

  build:
    needs: []
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        env:
          [
            [linux, "amd64"],
            [linux, "amd64v3"],
            [linux, "arm64"],
            [linux, "mipsle"],
            [android, "arm64"],
            [darwin, "amd64"],
            [darwin, "amd64v3"],
            [darwin, "arm64"],
            [freebsd, "amd64"],
            [freebsd, "amd64v3"],
            [freebsd, "arm64"],
            [openbsd, "amd64"],
            [openbsd, "amd64v3"],
            [openbsd, "arm64"],
            [windows, "amd64"],
            [windows, "amd64v3"],
            [windows, "arm64"],
          ]
        cmd: [yuhaiin]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: "0"
          fetch-tags: "true"

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          check-latest: true
          go-version-file: "go.mod"

      # - name: Set up Upx
      #   run: |
      #     sudo apt update
      #     sudo apt install -y upx

      # if [ ${{ matrix.os[0] }} != "darwin" ]; then
      # upx --lzma --best ${{ matrix.cmd }}_${{ matrix.os[0] }}_${{ matrix.arch }}${{ matrix.os[1] }}
      # fi
      - name: Build
        env:
          GOOS: ${{ matrix.env[0] }}
          GOARCH: ${{ matrix.env[1] == 'amd64v3' && 'amd64' || matrix.env[1] }}
          GOAMD64: ${{ matrix.env[1] == 'amd64v3' && 'v3' || '' }}
          GOMIPS: ${{ matrix.env[1] == 'mipsle' && 'softfloat' || '' }}
        run: |
          go get -v -u github.com/yuhaiin/kitte@$(curl -H "Accept: application/vnd.github.VERSION.sha" "https://api.github.com/repos/yuhaiin/kitte/commits/main")
          go get -v -u github.com/yuhaiin/yuhaiin.github.io@$(curl -H "Accept: application/vnd.github.VERSION.sha" "https://api.github.com/repos/yuhaiin/yuhaiin.github.io/commits/main")
          make ${{ matrix.cmd }}

      - name: upload_${{ matrix.cmd }}_${{ matrix.env[0] }}_${{ matrix.env[1] }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.cmd }}_${{ matrix.env[0] }}_${{ matrix.env[1] }}
          path: |
            ${{ matrix.cmd == 'yuhaiin_lite' && 'yuhaiin' || matrix.cmd }}${{ matrix.env[0] == 'windows' && '.exe' || '' }}
