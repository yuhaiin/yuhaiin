name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  rule:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        check-latest: true
        go-version-file: 'go.mod'
    
    - name: download rule
      run: |
        cd internal/statics
        curl https://raw.githubusercontent.com/yuhaiin/yuhaiin/ACL/yuhaiin/yuhaiin.conf -o bypass.conf
        go run generate.go
        echo ${PWD}
        ls

    - name: Cache Rule
      id: cache-rule
      uses: actions/cache@v3
      with:
        path: internal/statics/bypass.gz
        key: cache-rule-${{ github.run_id }}-${{ github.run_attempt }}

  web:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        check-latest: true
        go-version-file: 'go.mod'

    - name: clone
      run: |
        cd internal/http
        git clone -b main --depth=1 https://github.com/yuhaiin/yuhaiin.github.io.git out
        cd out && git branch -v && cd ..
        rm -rf out/.git out/.nojekyll
        go run compress.go
        echo ${PWD}
        ls

    - name: Cache Front Out
      id: cache-front-out
      uses: actions/cache@v3
      with:
        path: internal/http/out
        key: cache-front-out-${{ github.run_id }}-${{ github.run_attempt }}

  build:
    needs: [web,rule]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [amd64, amd64v3]
        os: [[linux, ""], [linux_lite, ""], [darwin, ""], [windows, ".exe"]]
        cmd: [yuhaiin]

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: '0'
        fetch-tags: 'true'

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '>=1.21.0'

    - name: Cache Front Out
      id: cache-front-out
      uses: actions/cache@v3
      with:
        path: internal/http/out
        key: cache-front-out-${{ github.run_id }}-${{ github.run_attempt }}
    
    - name: Cache Rule
      id: cache-rule
      uses: actions/cache@v3
      with:
        path: internal/statics/bypass.gz
        key: cache-rule-${{ github.run_id }}-${{ github.run_attempt }}

    # - name: Set up Upx
    #   run: |
    #     sudo apt update
    #     sudo apt install -y upx

        # if [ ${{ matrix.os[0] }} != "darwin" ]; then
          # upx --lzma --best ${{ matrix.cmd }}_${{ matrix.os[0] }}_${{ matrix.arch }}${{ matrix.os[1] }}
        # fi
    - name: Build
      run: |
        make ${{ matrix.cmd }}_${{ matrix.os[0] }}

    - name: upload_${{ matrix.cmd }}_${{ matrix.os[0] }}_${{ matrix.arch }}
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.cmd }}_${{ matrix.os[0] }}_${{ matrix.arch }}
        path: |
          ${{ matrix.cmd }}_${{ matrix.os[0] }}_${{ matrix.arch }}${{ matrix.os[1] }}
