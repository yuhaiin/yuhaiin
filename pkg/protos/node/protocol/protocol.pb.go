// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.2
// source: node/protocol/protocol.proto

package protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Protocol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Protocol:
	//
	//	*Protocol_Shadowsocks
	//	*Protocol_Shadowsocksr
	//	*Protocol_Vmess
	//	*Protocol_Websocket
	//	*Protocol_Quic
	//	*Protocol_ObfsHttp
	//	*Protocol_Trojan
	//	*Protocol_Simple
	//	*Protocol_None
	//	*Protocol_Socks5
	//	*Protocol_Http
	//	*Protocol_Direct
	//	*Protocol_Reject
	//	*Protocol_Yuubinsya
	//	*Protocol_Grpc
	//	*Protocol_Http2
	//	*Protocol_Reality
	//	*Protocol_Tls
	//	*Protocol_Wireguard
	//	*Protocol_Mux
	//	*Protocol_Drop
	//	*Protocol_Vless
	Protocol isProtocol_Protocol `protobuf_oneof:"protocol"`
}

func (x *Protocol) Reset() {
	*x = Protocol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_protocol_protocol_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Protocol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Protocol) ProtoMessage() {}

func (x *Protocol) ProtoReflect() protoreflect.Message {
	mi := &file_node_protocol_protocol_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Protocol.ProtoReflect.Descriptor instead.
func (*Protocol) Descriptor() ([]byte, []int) {
	return file_node_protocol_protocol_proto_rawDescGZIP(), []int{0}
}

func (m *Protocol) GetProtocol() isProtocol_Protocol {
	if m != nil {
		return m.Protocol
	}
	return nil
}

func (x *Protocol) GetShadowsocks() *Shadowsocks {
	if x, ok := x.GetProtocol().(*Protocol_Shadowsocks); ok {
		return x.Shadowsocks
	}
	return nil
}

func (x *Protocol) GetShadowsocksr() *Shadowsocksr {
	if x, ok := x.GetProtocol().(*Protocol_Shadowsocksr); ok {
		return x.Shadowsocksr
	}
	return nil
}

func (x *Protocol) GetVmess() *Vmess {
	if x, ok := x.GetProtocol().(*Protocol_Vmess); ok {
		return x.Vmess
	}
	return nil
}

func (x *Protocol) GetWebsocket() *Websocket {
	if x, ok := x.GetProtocol().(*Protocol_Websocket); ok {
		return x.Websocket
	}
	return nil
}

func (x *Protocol) GetQuic() *Quic {
	if x, ok := x.GetProtocol().(*Protocol_Quic); ok {
		return x.Quic
	}
	return nil
}

func (x *Protocol) GetObfsHttp() *ObfsHttp {
	if x, ok := x.GetProtocol().(*Protocol_ObfsHttp); ok {
		return x.ObfsHttp
	}
	return nil
}

func (x *Protocol) GetTrojan() *Trojan {
	if x, ok := x.GetProtocol().(*Protocol_Trojan); ok {
		return x.Trojan
	}
	return nil
}

func (x *Protocol) GetSimple() *Simple {
	if x, ok := x.GetProtocol().(*Protocol_Simple); ok {
		return x.Simple
	}
	return nil
}

func (x *Protocol) GetNone() *None {
	if x, ok := x.GetProtocol().(*Protocol_None); ok {
		return x.None
	}
	return nil
}

func (x *Protocol) GetSocks5() *Socks5 {
	if x, ok := x.GetProtocol().(*Protocol_Socks5); ok {
		return x.Socks5
	}
	return nil
}

func (x *Protocol) GetHttp() *Http {
	if x, ok := x.GetProtocol().(*Protocol_Http); ok {
		return x.Http
	}
	return nil
}

func (x *Protocol) GetDirect() *Direct {
	if x, ok := x.GetProtocol().(*Protocol_Direct); ok {
		return x.Direct
	}
	return nil
}

func (x *Protocol) GetReject() *Reject {
	if x, ok := x.GetProtocol().(*Protocol_Reject); ok {
		return x.Reject
	}
	return nil
}

func (x *Protocol) GetYuubinsya() *Yuubinsya {
	if x, ok := x.GetProtocol().(*Protocol_Yuubinsya); ok {
		return x.Yuubinsya
	}
	return nil
}

func (x *Protocol) GetGrpc() *Grpc {
	if x, ok := x.GetProtocol().(*Protocol_Grpc); ok {
		return x.Grpc
	}
	return nil
}

func (x *Protocol) GetHttp2() *Http2 {
	if x, ok := x.GetProtocol().(*Protocol_Http2); ok {
		return x.Http2
	}
	return nil
}

func (x *Protocol) GetReality() *Reality {
	if x, ok := x.GetProtocol().(*Protocol_Reality); ok {
		return x.Reality
	}
	return nil
}

func (x *Protocol) GetTls() *TlsConfig {
	if x, ok := x.GetProtocol().(*Protocol_Tls); ok {
		return x.Tls
	}
	return nil
}

func (x *Protocol) GetWireguard() *Wireguard {
	if x, ok := x.GetProtocol().(*Protocol_Wireguard); ok {
		return x.Wireguard
	}
	return nil
}

func (x *Protocol) GetMux() *Mux {
	if x, ok := x.GetProtocol().(*Protocol_Mux); ok {
		return x.Mux
	}
	return nil
}

func (x *Protocol) GetDrop() *Drop {
	if x, ok := x.GetProtocol().(*Protocol_Drop); ok {
		return x.Drop
	}
	return nil
}

func (x *Protocol) GetVless() *Vless {
	if x, ok := x.GetProtocol().(*Protocol_Vless); ok {
		return x.Vless
	}
	return nil
}

type isProtocol_Protocol interface {
	isProtocol_Protocol()
}

type Protocol_Shadowsocks struct {
	Shadowsocks *Shadowsocks `protobuf:"bytes,1,opt,name=shadowsocks,proto3,oneof"`
}

type Protocol_Shadowsocksr struct {
	Shadowsocksr *Shadowsocksr `protobuf:"bytes,2,opt,name=shadowsocksr,proto3,oneof"`
}

type Protocol_Vmess struct {
	Vmess *Vmess `protobuf:"bytes,3,opt,name=vmess,proto3,oneof"`
}

type Protocol_Websocket struct {
	Websocket *Websocket `protobuf:"bytes,4,opt,name=websocket,proto3,oneof"`
}

type Protocol_Quic struct {
	Quic *Quic `protobuf:"bytes,5,opt,name=quic,proto3,oneof"`
}

type Protocol_ObfsHttp struct {
	ObfsHttp *ObfsHttp `protobuf:"bytes,6,opt,name=obfs_http,proto3,oneof"`
}

type Protocol_Trojan struct {
	Trojan *Trojan `protobuf:"bytes,7,opt,name=trojan,proto3,oneof"`
}

type Protocol_Simple struct {
	Simple *Simple `protobuf:"bytes,8,opt,name=simple,proto3,oneof"`
}

type Protocol_None struct {
	None *None `protobuf:"bytes,9,opt,name=none,proto3,oneof"`
}

type Protocol_Socks5 struct {
	Socks5 *Socks5 `protobuf:"bytes,10,opt,name=socks5,proto3,oneof"`
}

type Protocol_Http struct {
	Http *Http `protobuf:"bytes,11,opt,name=http,proto3,oneof"`
}

type Protocol_Direct struct {
	Direct *Direct `protobuf:"bytes,12,opt,name=direct,proto3,oneof"`
}

type Protocol_Reject struct {
	Reject *Reject `protobuf:"bytes,13,opt,name=reject,proto3,oneof"`
}

type Protocol_Yuubinsya struct {
	Yuubinsya *Yuubinsya `protobuf:"bytes,14,opt,name=yuubinsya,proto3,oneof"`
}

type Protocol_Grpc struct {
	Grpc *Grpc `protobuf:"bytes,15,opt,name=grpc,proto3,oneof"`
}

type Protocol_Http2 struct {
	Http2 *Http2 `protobuf:"bytes,16,opt,name=http2,proto3,oneof"`
}

type Protocol_Reality struct {
	Reality *Reality `protobuf:"bytes,17,opt,name=reality,proto3,oneof"`
}

type Protocol_Tls struct {
	Tls *TlsConfig `protobuf:"bytes,18,opt,name=tls,proto3,oneof"`
}

type Protocol_Wireguard struct {
	Wireguard *Wireguard `protobuf:"bytes,19,opt,name=wireguard,proto3,oneof"`
}

type Protocol_Mux struct {
	Mux *Mux `protobuf:"bytes,20,opt,name=mux,proto3,oneof"`
}

type Protocol_Drop struct {
	Drop *Drop `protobuf:"bytes,21,opt,name=drop,proto3,oneof"`
}

type Protocol_Vless struct {
	Vless *Vless `protobuf:"bytes,22,opt,name=vless,proto3,oneof"`
}

func (*Protocol_Shadowsocks) isProtocol_Protocol() {}

func (*Protocol_Shadowsocksr) isProtocol_Protocol() {}

func (*Protocol_Vmess) isProtocol_Protocol() {}

func (*Protocol_Websocket) isProtocol_Protocol() {}

func (*Protocol_Quic) isProtocol_Protocol() {}

func (*Protocol_ObfsHttp) isProtocol_Protocol() {}

func (*Protocol_Trojan) isProtocol_Protocol() {}

func (*Protocol_Simple) isProtocol_Protocol() {}

func (*Protocol_None) isProtocol_Protocol() {}

func (*Protocol_Socks5) isProtocol_Protocol() {}

func (*Protocol_Http) isProtocol_Protocol() {}

func (*Protocol_Direct) isProtocol_Protocol() {}

func (*Protocol_Reject) isProtocol_Protocol() {}

func (*Protocol_Yuubinsya) isProtocol_Protocol() {}

func (*Protocol_Grpc) isProtocol_Protocol() {}

func (*Protocol_Http2) isProtocol_Protocol() {}

func (*Protocol_Reality) isProtocol_Protocol() {}

func (*Protocol_Tls) isProtocol_Protocol() {}

func (*Protocol_Wireguard) isProtocol_Protocol() {}

func (*Protocol_Mux) isProtocol_Protocol() {}

func (*Protocol_Drop) isProtocol_Protocol() {}

func (*Protocol_Vless) isProtocol_Protocol() {}

type Socks5 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// eg: 127.0.0.1
	Hostname string `protobuf:"bytes,3,opt,name=hostname,proto3" json:"hostname,omitempty"`
	User     string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	// TODO: add override hostname options
	OverridePort uint32 `protobuf:"varint,4,opt,name=override_port,proto3" json:"override_port,omitempty"`
}

func (x *Socks5) Reset() {
	*x = Socks5{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_protocol_protocol_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Socks5) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Socks5) ProtoMessage() {}

func (x *Socks5) ProtoReflect() protoreflect.Message {
	mi := &file_node_protocol_protocol_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Socks5.ProtoReflect.Descriptor instead.
func (*Socks5) Descriptor() ([]byte, []int) {
	return file_node_protocol_protocol_proto_rawDescGZIP(), []int{1}
}

func (x *Socks5) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *Socks5) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *Socks5) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Socks5) GetOverridePort() uint32 {
	if x != nil {
		return x.OverridePort
	}
	return 0
}

type Http struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User     string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *Http) Reset() {
	*x = Http{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_protocol_protocol_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Http) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Http) ProtoMessage() {}

func (x *Http) ProtoReflect() protoreflect.Message {
	mi := &file_node_protocol_protocol_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Http.ProtoReflect.Descriptor instead.
func (*Http) Descriptor() ([]byte, []int) {
	return file_node_protocol_protocol_proto_rawDescGZIP(), []int{2}
}

func (x *Http) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *Http) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type Shadowsocks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method   string `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *Shadowsocks) Reset() {
	*x = Shadowsocks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_protocol_protocol_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Shadowsocks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Shadowsocks) ProtoMessage() {}

func (x *Shadowsocks) ProtoReflect() protoreflect.Message {
	mi := &file_node_protocol_protocol_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Shadowsocks.ProtoReflect.Descriptor instead.
func (*Shadowsocks) Descriptor() ([]byte, []int) {
	return file_node_protocol_protocol_proto_rawDescGZIP(), []int{3}
}

func (x *Shadowsocks) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Shadowsocks) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type Shadowsocksr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server     string `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
	Port       string `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
	Method     string `protobuf:"bytes,3,opt,name=method,proto3" json:"method,omitempty"`
	Password   string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	Obfs       string `protobuf:"bytes,5,opt,name=obfs,proto3" json:"obfs,omitempty"`
	Obfsparam  string `protobuf:"bytes,6,opt,name=obfsparam,proto3" json:"obfsparam,omitempty"`
	Protocol   string `protobuf:"bytes,7,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Protoparam string `protobuf:"bytes,8,opt,name=protoparam,proto3" json:"protoparam,omitempty"`
}

func (x *Shadowsocksr) Reset() {
	*x = Shadowsocksr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_protocol_protocol_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Shadowsocksr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Shadowsocksr) ProtoMessage() {}

func (x *Shadowsocksr) ProtoReflect() protoreflect.Message {
	mi := &file_node_protocol_protocol_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Shadowsocksr.ProtoReflect.Descriptor instead.
func (*Shadowsocksr) Descriptor() ([]byte, []int) {
	return file_node_protocol_protocol_proto_rawDescGZIP(), []int{4}
}

func (x *Shadowsocksr) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

func (x *Shadowsocksr) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *Shadowsocksr) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Shadowsocksr) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Shadowsocksr) GetObfs() string {
	if x != nil {
		return x.Obfs
	}
	return ""
}

func (x *Shadowsocksr) GetObfsparam() string {
	if x != nil {
		return x.Obfsparam
	}
	return ""
}

func (x *Shadowsocksr) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *Shadowsocksr) GetProtoparam() string {
	if x != nil {
		return x.Protoparam
	}
	return ""
}

type Http2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Concurrency int32 `protobuf:"varint,1,opt,name=concurrency,proto3" json:"concurrency,omitempty"`
}

func (x *Http2) Reset() {
	*x = Http2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_protocol_protocol_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Http2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Http2) ProtoMessage() {}

func (x *Http2) ProtoReflect() protoreflect.Message {
	mi := &file_node_protocol_protocol_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Http2.ProtoReflect.Descriptor instead.
func (*Http2) Descriptor() ([]byte, []int) {
	return file_node_protocol_protocol_proto_rawDescGZIP(), []int{5}
}

func (x *Http2) GetConcurrency() int32 {
	if x != nil {
		return x.Concurrency
	}
	return 0
}

type Vmess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// uuid
	Uuid string `protobuf:"bytes,1,opt,name=uuid,json=id,proto3" json:"uuid,omitempty"`
	// alter id
	AlterId  string `protobuf:"bytes,2,opt,name=alter_id,json=aid,proto3" json:"alter_id,omitempty"`
	Security string `protobuf:"bytes,3,opt,name=security,proto3" json:"security,omitempty"`
}

func (x *Vmess) Reset() {
	*x = Vmess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_protocol_protocol_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vmess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vmess) ProtoMessage() {}

func (x *Vmess) ProtoReflect() protoreflect.Message {
	mi := &file_node_protocol_protocol_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vmess.ProtoReflect.Descriptor instead.
func (*Vmess) Descriptor() ([]byte, []int) {
	return file_node_protocol_protocol_proto_rawDescGZIP(), []int{6}
}

func (x *Vmess) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Vmess) GetAlterId() string {
	if x != nil {
		return x.AlterId
	}
	return ""
}

func (x *Vmess) GetSecurity() string {
	if x != nil {
		return x.Security
	}
	return ""
}

type Vless struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *Vless) Reset() {
	*x = Vless{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_protocol_protocol_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vless) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vless) ProtoMessage() {}

func (x *Vless) ProtoReflect() protoreflect.Message {
	mi := &file_node_protocol_protocol_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vless.ProtoReflect.Descriptor instead.
func (*Vless) Descriptor() ([]byte, []int) {
	return file_node_protocol_protocol_proto_rawDescGZIP(), []int{7}
}

func (x *Vless) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type Trojan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Password string `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
	Peer     string `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
}

func (x *Trojan) Reset() {
	*x = Trojan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_protocol_protocol_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trojan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trojan) ProtoMessage() {}

func (x *Trojan) ProtoReflect() protoreflect.Message {
	mi := &file_node_protocol_protocol_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trojan.ProtoReflect.Descriptor instead.
func (*Trojan) Descriptor() ([]byte, []int) {
	return file_node_protocol_protocol_proto_rawDescGZIP(), []int{8}
}

func (x *Trojan) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Trojan) GetPeer() string {
	if x != nil {
		return x.Peer
	}
	return ""
}

type Yuubinsya struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Password      string `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
	TcpEncrypt    bool   `protobuf:"varint,4,opt,name=tcp_encrypt,proto3" json:"tcp_encrypt,omitempty"`
	UdpEncrypt    bool   `protobuf:"varint,5,opt,name=udp_encrypt,proto3" json:"udp_encrypt,omitempty"`
	UdpOverStream bool   `protobuf:"varint,3,opt,name=udp_over_stream,proto3" json:"udp_over_stream,omitempty"`
}

func (x *Yuubinsya) Reset() {
	*x = Yuubinsya{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_protocol_protocol_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Yuubinsya) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Yuubinsya) ProtoMessage() {}

func (x *Yuubinsya) ProtoReflect() protoreflect.Message {
	mi := &file_node_protocol_protocol_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Yuubinsya.ProtoReflect.Descriptor instead.
func (*Yuubinsya) Descriptor() ([]byte, []int) {
	return file_node_protocol_protocol_proto_rawDescGZIP(), []int{9}
}

func (x *Yuubinsya) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Yuubinsya) GetTcpEncrypt() bool {
	if x != nil {
		return x.TcpEncrypt
	}
	return false
}

func (x *Yuubinsya) GetUdpEncrypt() bool {
	if x != nil {
		return x.UdpEncrypt
	}
	return false
}

func (x *Yuubinsya) GetUdpOverStream() bool {
	if x != nil {
		return x.UdpOverStream
	}
	return false
}

type Websocket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *Websocket) Reset() {
	*x = Websocket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_protocol_protocol_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Websocket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Websocket) ProtoMessage() {}

func (x *Websocket) ProtoReflect() protoreflect.Message {
	mi := &file_node_protocol_protocol_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Websocket.ProtoReflect.Descriptor instead.
func (*Websocket) Descriptor() ([]byte, []int) {
	return file_node_protocol_protocol_proto_rawDescGZIP(), []int{10}
}

func (x *Websocket) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Websocket) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type Grpc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tls *TlsConfig `protobuf:"bytes,1,opt,name=tls,proto3" json:"tls,omitempty"`
}

func (x *Grpc) Reset() {
	*x = Grpc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_protocol_protocol_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Grpc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Grpc) ProtoMessage() {}

func (x *Grpc) ProtoReflect() protoreflect.Message {
	mi := &file_node_protocol_protocol_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Grpc.ProtoReflect.Descriptor instead.
func (*Grpc) Descriptor() ([]byte, []int) {
	return file_node_protocol_protocol_proto_rawDescGZIP(), []int{11}
}

func (x *Grpc) GetTls() *TlsConfig {
	if x != nil {
		return x.Tls
	}
	return nil
}

type Quic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host string     `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Tls  *TlsConfig `protobuf:"bytes,1,opt,name=tls,proto3" json:"tls,omitempty"`
}

func (x *Quic) Reset() {
	*x = Quic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_protocol_protocol_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Quic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Quic) ProtoMessage() {}

func (x *Quic) ProtoReflect() protoreflect.Message {
	mi := &file_node_protocol_protocol_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Quic.ProtoReflect.Descriptor instead.
func (*Quic) Descriptor() ([]byte, []int) {
	return file_node_protocol_protocol_proto_rawDescGZIP(), []int{12}
}

func (x *Quic) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Quic) GetTls() *TlsConfig {
	if x != nil {
		return x.Tls
	}
	return nil
}

type Reality struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerName string `protobuf:"bytes,1,opt,name=server_name,proto3" json:"server_name,omitempty"`
	PublicKey  string `protobuf:"bytes,2,opt,name=public_key,proto3" json:"public_key,omitempty"`
	ShortId    string `protobuf:"bytes,3,opt,name=short_id,proto3" json:"short_id,omitempty"`
	Debug      bool   `protobuf:"varint,4,opt,name=debug,proto3" json:"debug,omitempty"`
}

func (x *Reality) Reset() {
	*x = Reality{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_protocol_protocol_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reality) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reality) ProtoMessage() {}

func (x *Reality) ProtoReflect() protoreflect.Message {
	mi := &file_node_protocol_protocol_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reality.ProtoReflect.Descriptor instead.
func (*Reality) Descriptor() ([]byte, []int) {
	return file_node_protocol_protocol_proto_rawDescGZIP(), []int{13}
}

func (x *Reality) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *Reality) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *Reality) GetShortId() string {
	if x != nil {
		return x.ShortId
	}
	return ""
}

func (x *Reality) GetDebug() bool {
	if x != nil {
		return x.Debug
	}
	return false
}

type ObfsHttp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port string `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *ObfsHttp) Reset() {
	*x = ObfsHttp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_protocol_protocol_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObfsHttp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObfsHttp) ProtoMessage() {}

func (x *ObfsHttp) ProtoReflect() protoreflect.Message {
	mi := &file_node_protocol_protocol_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObfsHttp.ProtoReflect.Descriptor instead.
func (*ObfsHttp) Descriptor() ([]byte, []int) {
	return file_node_protocol_protocol_proto_rawDescGZIP(), []int{14}
}

func (x *ObfsHttp) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *ObfsHttp) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

type None struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *None) Reset() {
	*x = None{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_protocol_protocol_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *None) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*None) ProtoMessage() {}

func (x *None) ProtoReflect() protoreflect.Message {
	mi := &file_node_protocol_protocol_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use None.ProtoReflect.Descriptor instead.
func (*None) Descriptor() ([]byte, []int) {
	return file_node_protocol_protocol_proto_rawDescGZIP(), []int{15}
}

type Simple struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host          string  `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port          int32   `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	AlternateHost []*Host `protobuf:"bytes,5,rep,name=alternate_host,proto3" json:"alternate_host,omitempty"`
}

func (x *Simple) Reset() {
	*x = Simple{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_protocol_protocol_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Simple) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Simple) ProtoMessage() {}

func (x *Simple) ProtoReflect() protoreflect.Message {
	mi := &file_node_protocol_protocol_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Simple.ProtoReflect.Descriptor instead.
func (*Simple) Descriptor() ([]byte, []int) {
	return file_node_protocol_protocol_proto_rawDescGZIP(), []int{16}
}

func (x *Simple) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Simple) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Simple) GetAlternateHost() []*Host {
	if x != nil {
		return x.AlternateHost
	}
	return nil
}

type TlsConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enable             bool     `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	ServerNames        []string `protobuf:"bytes,6,rep,name=server_names,json=servernames,proto3" json:"server_names,omitempty"`
	CaCert             [][]byte `protobuf:"bytes,3,rep,name=ca_cert,proto3" json:"ca_cert,omitempty"`
	InsecureSkipVerify bool     `protobuf:"varint,4,opt,name=insecure_skip_verify,proto3" json:"insecure_skip_verify,omitempty"`
	// next_protos ALPN Next Protocol
	// eg: h2, http/1.1
	NextProtos []string `protobuf:"bytes,5,rep,name=next_protos,proto3" json:"next_protos,omitempty"`
	EchConfig  []byte   `protobuf:"bytes,7,opt,name=ech_config,proto3" json:"ech_config,omitempty"`
}

func (x *TlsConfig) Reset() {
	*x = TlsConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_protocol_protocol_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TlsConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TlsConfig) ProtoMessage() {}

func (x *TlsConfig) ProtoReflect() protoreflect.Message {
	mi := &file_node_protocol_protocol_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TlsConfig.ProtoReflect.Descriptor instead.
func (*TlsConfig) Descriptor() ([]byte, []int) {
	return file_node_protocol_protocol_proto_rawDescGZIP(), []int{17}
}

func (x *TlsConfig) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *TlsConfig) GetServerNames() []string {
	if x != nil {
		return x.ServerNames
	}
	return nil
}

func (x *TlsConfig) GetCaCert() [][]byte {
	if x != nil {
		return x.CaCert
	}
	return nil
}

func (x *TlsConfig) GetInsecureSkipVerify() bool {
	if x != nil {
		return x.InsecureSkipVerify
	}
	return false
}

func (x *TlsConfig) GetNextProtos() []string {
	if x != nil {
		return x.NextProtos
	}
	return nil
}

func (x *TlsConfig) GetEchConfig() []byte {
	if x != nil {
		return x.EchConfig
	}
	return nil
}

type Direct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Direct) Reset() {
	*x = Direct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_protocol_protocol_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Direct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Direct) ProtoMessage() {}

func (x *Direct) ProtoReflect() protoreflect.Message {
	mi := &file_node_protocol_protocol_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Direct.ProtoReflect.Descriptor instead.
func (*Direct) Descriptor() ([]byte, []int) {
	return file_node_protocol_protocol_proto_rawDescGZIP(), []int{18}
}

type Reject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Reject) Reset() {
	*x = Reject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_protocol_protocol_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reject) ProtoMessage() {}

func (x *Reject) ProtoReflect() protoreflect.Message {
	mi := &file_node_protocol_protocol_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reject.ProtoReflect.Descriptor instead.
func (*Reject) Descriptor() ([]byte, []int) {
	return file_node_protocol_protocol_proto_rawDescGZIP(), []int{19}
}

type Drop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Drop) Reset() {
	*x = Drop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_protocol_protocol_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Drop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Drop) ProtoMessage() {}

func (x *Drop) ProtoReflect() protoreflect.Message {
	mi := &file_node_protocol_protocol_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Drop.ProtoReflect.Descriptor instead.
func (*Drop) Descriptor() ([]byte, []int) {
	return file_node_protocol_protocol_proto_rawDescGZIP(), []int{20}
}

type Host struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port int32  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *Host) Reset() {
	*x = Host{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_protocol_protocol_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Host) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Host) ProtoMessage() {}

func (x *Host) ProtoReflect() protoreflect.Message {
	mi := &file_node_protocol_protocol_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Host.ProtoReflect.Descriptor instead.
func (*Host) Descriptor() ([]byte, []int) {
	return file_node_protocol_protocol_proto_rawDescGZIP(), []int{21}
}

func (x *Host) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Host) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type WireguardPeerConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey    string   `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	PreSharedKey string   `protobuf:"bytes,2,opt,name=pre_shared_key,json=preSharedKey,proto3" json:"pre_shared_key,omitempty"`
	Endpoint     string   `protobuf:"bytes,3,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	KeepAlive    int32    `protobuf:"varint,4,opt,name=keep_alive,json=keepAlive,proto3" json:"keep_alive,omitempty"`
	AllowedIps   []string `protobuf:"bytes,5,rep,name=allowed_ips,json=allowedIps,proto3" json:"allowed_ips,omitempty"`
}

func (x *WireguardPeerConfig) Reset() {
	*x = WireguardPeerConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_protocol_protocol_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WireguardPeerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WireguardPeerConfig) ProtoMessage() {}

func (x *WireguardPeerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_node_protocol_protocol_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WireguardPeerConfig.ProtoReflect.Descriptor instead.
func (*WireguardPeerConfig) Descriptor() ([]byte, []int) {
	return file_node_protocol_protocol_proto_rawDescGZIP(), []int{22}
}

func (x *WireguardPeerConfig) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *WireguardPeerConfig) GetPreSharedKey() string {
	if x != nil {
		return x.PreSharedKey
	}
	return ""
}

func (x *WireguardPeerConfig) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *WireguardPeerConfig) GetKeepAlive() int32 {
	if x != nil {
		return x.KeepAlive
	}
	return 0
}

func (x *WireguardPeerConfig) GetAllowedIps() []string {
	if x != nil {
		return x.AllowedIps
	}
	return nil
}

type Wireguard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecretKey   string                 `protobuf:"bytes,1,opt,name=secret_key,json=secretKey,proto3" json:"secret_key,omitempty"`
	Endpoint    []string               `protobuf:"bytes,2,rep,name=endpoint,proto3" json:"endpoint,omitempty"`
	Peers       []*WireguardPeerConfig `protobuf:"bytes,3,rep,name=peers,proto3" json:"peers,omitempty"`
	Mtu         int32                  `protobuf:"varint,4,opt,name=mtu,proto3" json:"mtu,omitempty"`
	Reserved    []byte                 `protobuf:"bytes,6,opt,name=reserved,proto3" json:"reserved,omitempty"`
	IdleTimeout int32                  `protobuf:"varint,7,opt,name=idle_timeout,json=idleTimeout,proto3" json:"idle_timeout,omitempty"`
}

func (x *Wireguard) Reset() {
	*x = Wireguard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_protocol_protocol_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Wireguard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Wireguard) ProtoMessage() {}

func (x *Wireguard) ProtoReflect() protoreflect.Message {
	mi := &file_node_protocol_protocol_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Wireguard.ProtoReflect.Descriptor instead.
func (*Wireguard) Descriptor() ([]byte, []int) {
	return file_node_protocol_protocol_proto_rawDescGZIP(), []int{23}
}

func (x *Wireguard) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

func (x *Wireguard) GetEndpoint() []string {
	if x != nil {
		return x.Endpoint
	}
	return nil
}

func (x *Wireguard) GetPeers() []*WireguardPeerConfig {
	if x != nil {
		return x.Peers
	}
	return nil
}

func (x *Wireguard) GetMtu() int32 {
	if x != nil {
		return x.Mtu
	}
	return 0
}

func (x *Wireguard) GetReserved() []byte {
	if x != nil {
		return x.Reserved
	}
	return nil
}

func (x *Wireguard) GetIdleTimeout() int32 {
	if x != nil {
		return x.IdleTimeout
	}
	return 0
}

type Mux struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Concurrency int32 `protobuf:"varint,1,opt,name=concurrency,proto3" json:"concurrency,omitempty"`
}

func (x *Mux) Reset() {
	*x = Mux{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_protocol_protocol_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mux) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mux) ProtoMessage() {}

func (x *Mux) ProtoReflect() protoreflect.Message {
	mi := &file_node_protocol_protocol_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mux.ProtoReflect.Descriptor instead.
func (*Mux) Descriptor() ([]byte, []int) {
	return file_node_protocol_protocol_proto_rawDescGZIP(), []int{24}
}

func (x *Mux) GetConcurrency() int32 {
	if x != nil {
		return x.Concurrency
	}
	return 0
}

var File_node_protocol_protocol_proto protoreflect.FileDescriptor

var file_node_protocol_protocol_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10,
	0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x22, 0xa4, 0x09, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x41, 0x0a,
	0x0b, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x73, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x73, 0x6f, 0x63, 0x6b,
	0x73, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x73, 0x6f, 0x63, 0x6b, 0x73,
	0x12, 0x44, 0x0a, 0x0c, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x73, 0x6f, 0x63, 0x6b, 0x73, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77,
	0x73, 0x6f, 0x63, 0x6b, 0x73, 0x72, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77,
	0x73, 0x6f, 0x63, 0x6b, 0x73, 0x72, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x6d, 0x65, 0x73, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x6d, 0x65, 0x73, 0x73, 0x48, 0x00,
	0x52, 0x05, 0x76, 0x6d, 0x65, 0x73, 0x73, 0x12, 0x3b, 0x0a, 0x09, 0x77, 0x65, 0x62, 0x73, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x79, 0x75, 0x68,
	0x61, 0x69, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x77, 0x65,
	0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x00, 0x52, 0x09, 0x77, 0x65, 0x62, 0x73, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x71, 0x75, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x71, 0x75, 0x69, 0x63, 0x48, 0x00, 0x52, 0x04, 0x71, 0x75,
	0x69, 0x63, 0x12, 0x3b, 0x0a, 0x09, 0x6f, 0x62, 0x66, 0x73, 0x5f, 0x68, 0x74, 0x74, 0x70, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x6f, 0x62, 0x66, 0x73, 0x5f, 0x68, 0x74,
	0x74, 0x70, 0x48, 0x00, 0x52, 0x09, 0x6f, 0x62, 0x66, 0x73, 0x5f, 0x68, 0x74, 0x74, 0x70, 0x12,
	0x32, 0x0a, 0x06, 0x74, 0x72, 0x6f, 0x6a, 0x61, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x74, 0x72, 0x6f, 0x6a, 0x61, 0x6e, 0x48, 0x00, 0x52, 0x06, 0x74, 0x72, 0x6f,
	0x6a, 0x61, 0x6e, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x48, 0x00, 0x52,
	0x06, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x6e, 0x6f, 0x6e, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x6e, 0x6f, 0x6e, 0x65, 0x48, 0x00, 0x52,
	0x04, 0x6e, 0x6f, 0x6e, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x6f, 0x63, 0x6b, 0x73, 0x35, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x73, 0x6f, 0x63, 0x6b, 0x73, 0x35, 0x48,
	0x00, 0x52, 0x06, 0x73, 0x6f, 0x63, 0x6b, 0x73, 0x35, 0x12, 0x2c, 0x0a, 0x04, 0x68, 0x74, 0x74,
	0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x48,
	0x00, 0x52, 0x04, 0x68, 0x74, 0x74, 0x70, 0x12, 0x32, 0x0a, 0x06, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x48, 0x00, 0x52, 0x06, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x72,
	0x65, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79, 0x75,
	0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x72,
	0x65, 0x6a, 0x65, 0x63, 0x74, 0x48, 0x00, 0x52, 0x06, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x3b, 0x0a, 0x09, 0x79, 0x75, 0x75, 0x62, 0x69, 0x6e, 0x73, 0x79, 0x61, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x79, 0x75, 0x75, 0x62, 0x69, 0x6e, 0x73, 0x79, 0x61, 0x48,
	0x00, 0x52, 0x09, 0x79, 0x75, 0x75, 0x62, 0x69, 0x6e, 0x73, 0x79, 0x61, 0x12, 0x2c, 0x0a, 0x04,
	0x67, 0x72, 0x70, 0x63, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x79, 0x75, 0x68,
	0x61, 0x69, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x48, 0x00, 0x52, 0x04, 0x67, 0x72, 0x70, 0x63, 0x12, 0x2f, 0x0a, 0x05, 0x68, 0x74,
	0x74, 0x70, 0x32, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x79, 0x75, 0x68, 0x61,
	0x69, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x68, 0x74, 0x74,
	0x70, 0x32, 0x48, 0x00, 0x52, 0x05, 0x68, 0x74, 0x74, 0x70, 0x32, 0x12, 0x35, 0x0a, 0x07, 0x72,
	0x65, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x79,
	0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x72, 0x65, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x48, 0x00, 0x52, 0x07, 0x72, 0x65, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x12, 0x30, 0x0a, 0x03, 0x74, 0x6c, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x74, 0x6c, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52,
	0x03, 0x74, 0x6c, 0x73, 0x12, 0x3b, 0x0a, 0x09, 0x77, 0x69, 0x72, 0x65, 0x67, 0x75, 0x61, 0x72,
	0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x77, 0x69, 0x72, 0x65, 0x67,
	0x75, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x09, 0x77, 0x69, 0x72, 0x65, 0x67, 0x75, 0x61, 0x72,
	0x64, 0x12, 0x29, 0x0a, 0x03, 0x6d, 0x75, 0x78, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x6d, 0x75, 0x78, 0x48, 0x00, 0x52, 0x03, 0x6d, 0x75, 0x78, 0x12, 0x2c, 0x0a, 0x04,
	0x64, 0x72, 0x6f, 0x70, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x79, 0x75, 0x68,
	0x61, 0x69, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x64, 0x72,
	0x6f, 0x70, 0x48, 0x00, 0x52, 0x04, 0x64, 0x72, 0x6f, 0x70, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x6c,
	0x65, 0x73, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x79, 0x75, 0x68, 0x61,
	0x69, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x6c, 0x65,
	0x73, 0x73, 0x48, 0x00, 0x52, 0x05, 0x76, 0x6c, 0x65, 0x73, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x22, 0x7a, 0x0a, 0x06, 0x73, 0x6f, 0x63, 0x6b, 0x73,
	0x35, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x24, 0x0a,
	0x0d, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x70,
	0x6f, 0x72, 0x74, 0x22, 0x36, 0x0a, 0x04, 0x68, 0x74, 0x74, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x41, 0x0a, 0x0b, 0x73,
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x73, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xdc,
	0x01, 0x0a, 0x0c, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x73, 0x6f, 0x63, 0x6b, 0x73, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6f, 0x62, 0x66, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f,
	0x62, 0x66, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x62, 0x66, 0x73, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x62, 0x66, 0x73, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x29, 0x0a,
	0x05, 0x68, 0x74, 0x74, 0x70, 0x32, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x4c, 0x0a, 0x05, 0x76, 0x6d, 0x65, 0x73,
	0x73, 0x12, 0x10, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x08, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x22, 0x1b, 0x0a, 0x05, 0x76, 0x6c, 0x65, 0x73, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x22, 0x38, 0x0a, 0x06, 0x74, 0x72, 0x6f, 0x6a, 0x61, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x65, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x65, 0x65, 0x72, 0x22, 0xa6, 0x01,
	0x0a, 0x09, 0x79, 0x75, 0x75, 0x62, 0x69, 0x6e, 0x73, 0x79, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x63, 0x70, 0x5f, 0x65,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x74, 0x63,
	0x70, 0x5f, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x64, 0x70,
	0x5f, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x75, 0x64, 0x70, 0x5f, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x75,
	0x64, 0x70, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x75, 0x64, 0x70, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x52, 0x09, 0x65, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x22, 0x46, 0x0a, 0x09, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63,
	0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x4a, 0x04, 0x08, 0x04, 0x10,
	0x05, 0x52, 0x0b, 0x74, 0x6c, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x36,
	0x0a, 0x04, 0x67, 0x72, 0x70, 0x63, 0x12, 0x2e, 0x0a, 0x03, 0x74, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x74, 0x6c, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x03, 0x74, 0x6c, 0x73, 0x22, 0x4a, 0x0a, 0x04, 0x71, 0x75, 0x69, 0x63, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f,
	0x73, 0x74, 0x12, 0x2e, 0x0a, 0x03, 0x74, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x74, 0x6c, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x03, 0x74,
	0x6c, 0x73, 0x22, 0x7d, 0x0a, 0x07, 0x72, 0x65, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x20, 0x0a,
	0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x64,
	0x65, 0x62, 0x75, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x64, 0x65, 0x62, 0x75,
	0x67, 0x22, 0x33, 0x0a, 0x09, 0x6f, 0x62, 0x66, 0x73, 0x5f, 0x68, 0x74, 0x74, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x06, 0x0a, 0x04, 0x6e, 0x6f, 0x6e, 0x65, 0x22, 0xa4,
	0x01, 0x0a, 0x06, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x3e, 0x0a, 0x0e, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x65, 0x5f, 0x68,
	0x6f, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x79, 0x75, 0x68, 0x61,
	0x69, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x68, 0x6f, 0x73,
	0x74, 0x52, 0x0e, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x65, 0x5f, 0x68, 0x6f, 0x73,
	0x74, 0x4a, 0x04, 0x08, 0x04, 0x10, 0x05, 0x4a, 0x04, 0x08, 0x06, 0x10, 0x07, 0x4a, 0x04, 0x08,
	0x03, 0x10, 0x04, 0x52, 0x03, 0x74, 0x6c, 0x73, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x52, 0x12, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x22, 0xd7, 0x01, 0x0a, 0x0a, 0x74, 0x6c, 0x73, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x61, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c,
	0x52, 0x07, 0x63, 0x61, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x69, 0x6e, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x65, 0x5f, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x69, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72,
	0x65, 0x5f, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x20, 0x0a,
	0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x65, 0x63, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0a, 0x65, 0x63, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22,
	0x17, 0x0a, 0x06, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x52,
	0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x6a, 0x65,
	0x63, 0x74, 0x22, 0x06, 0x0a, 0x04, 0x64, 0x72, 0x6f, 0x70, 0x22, 0x2e, 0x0a, 0x04, 0x68, 0x6f,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0xb8, 0x01, 0x0a, 0x15, 0x77,
	0x69, 0x72, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x5f, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x65,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6b, 0x65, 0x65, 0x70, 0x5f, 0x61, 0x6c,
	0x69, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6b, 0x65, 0x65, 0x70, 0x41,
	0x6c, 0x69, 0x76, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f,
	0x69, 0x70, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x64, 0x49, 0x70, 0x73, 0x22, 0xd6, 0x01, 0x0a, 0x09, 0x77, 0x69, 0x72, 0x65, 0x67, 0x75,
	0x61, 0x72, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b,
	0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x3d,
	0x0a, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x77, 0x69, 0x72, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x5f, 0x70, 0x65, 0x65, 0x72, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x74, 0x75, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6d, 0x74, 0x75, 0x12,
	0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x08, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69,
	0x64, 0x6c, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x69, 0x64, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x27,
	0x0a, 0x03, 0x6d, 0x75, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x41, 0x73, 0x75, 0x74, 0x6f, 0x72, 0x75, 0x66, 0x61, 0x2f,
	0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_node_protocol_protocol_proto_rawDescOnce sync.Once
	file_node_protocol_protocol_proto_rawDescData = file_node_protocol_protocol_proto_rawDesc
)

func file_node_protocol_protocol_proto_rawDescGZIP() []byte {
	file_node_protocol_protocol_proto_rawDescOnce.Do(func() {
		file_node_protocol_protocol_proto_rawDescData = protoimpl.X.CompressGZIP(file_node_protocol_protocol_proto_rawDescData)
	})
	return file_node_protocol_protocol_proto_rawDescData
}

var file_node_protocol_protocol_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_node_protocol_protocol_proto_goTypes = []any{
	(*Protocol)(nil),            // 0: yuhaiin.protocol.protocol
	(*Socks5)(nil),              // 1: yuhaiin.protocol.socks5
	(*Http)(nil),                // 2: yuhaiin.protocol.http
	(*Shadowsocks)(nil),         // 3: yuhaiin.protocol.shadowsocks
	(*Shadowsocksr)(nil),        // 4: yuhaiin.protocol.shadowsocksr
	(*Http2)(nil),               // 5: yuhaiin.protocol.http2
	(*Vmess)(nil),               // 6: yuhaiin.protocol.vmess
	(*Vless)(nil),               // 7: yuhaiin.protocol.vless
	(*Trojan)(nil),              // 8: yuhaiin.protocol.trojan
	(*Yuubinsya)(nil),           // 9: yuhaiin.protocol.yuubinsya
	(*Websocket)(nil),           // 10: yuhaiin.protocol.websocket
	(*Grpc)(nil),                // 11: yuhaiin.protocol.grpc
	(*Quic)(nil),                // 12: yuhaiin.protocol.quic
	(*Reality)(nil),             // 13: yuhaiin.protocol.reality
	(*ObfsHttp)(nil),            // 14: yuhaiin.protocol.obfs_http
	(*None)(nil),                // 15: yuhaiin.protocol.none
	(*Simple)(nil),              // 16: yuhaiin.protocol.simple
	(*TlsConfig)(nil),           // 17: yuhaiin.protocol.tls_config
	(*Direct)(nil),              // 18: yuhaiin.protocol.direct
	(*Reject)(nil),              // 19: yuhaiin.protocol.reject
	(*Drop)(nil),                // 20: yuhaiin.protocol.drop
	(*Host)(nil),                // 21: yuhaiin.protocol.host
	(*WireguardPeerConfig)(nil), // 22: yuhaiin.protocol.wireguard_peer_config
	(*Wireguard)(nil),           // 23: yuhaiin.protocol.wireguard
	(*Mux)(nil),                 // 24: yuhaiin.protocol.mux
}
var file_node_protocol_protocol_proto_depIdxs = []int32{
	3,  // 0: yuhaiin.protocol.protocol.shadowsocks:type_name -> yuhaiin.protocol.shadowsocks
	4,  // 1: yuhaiin.protocol.protocol.shadowsocksr:type_name -> yuhaiin.protocol.shadowsocksr
	6,  // 2: yuhaiin.protocol.protocol.vmess:type_name -> yuhaiin.protocol.vmess
	10, // 3: yuhaiin.protocol.protocol.websocket:type_name -> yuhaiin.protocol.websocket
	12, // 4: yuhaiin.protocol.protocol.quic:type_name -> yuhaiin.protocol.quic
	14, // 5: yuhaiin.protocol.protocol.obfs_http:type_name -> yuhaiin.protocol.obfs_http
	8,  // 6: yuhaiin.protocol.protocol.trojan:type_name -> yuhaiin.protocol.trojan
	16, // 7: yuhaiin.protocol.protocol.simple:type_name -> yuhaiin.protocol.simple
	15, // 8: yuhaiin.protocol.protocol.none:type_name -> yuhaiin.protocol.none
	1,  // 9: yuhaiin.protocol.protocol.socks5:type_name -> yuhaiin.protocol.socks5
	2,  // 10: yuhaiin.protocol.protocol.http:type_name -> yuhaiin.protocol.http
	18, // 11: yuhaiin.protocol.protocol.direct:type_name -> yuhaiin.protocol.direct
	19, // 12: yuhaiin.protocol.protocol.reject:type_name -> yuhaiin.protocol.reject
	9,  // 13: yuhaiin.protocol.protocol.yuubinsya:type_name -> yuhaiin.protocol.yuubinsya
	11, // 14: yuhaiin.protocol.protocol.grpc:type_name -> yuhaiin.protocol.grpc
	5,  // 15: yuhaiin.protocol.protocol.http2:type_name -> yuhaiin.protocol.http2
	13, // 16: yuhaiin.protocol.protocol.reality:type_name -> yuhaiin.protocol.reality
	17, // 17: yuhaiin.protocol.protocol.tls:type_name -> yuhaiin.protocol.tls_config
	23, // 18: yuhaiin.protocol.protocol.wireguard:type_name -> yuhaiin.protocol.wireguard
	24, // 19: yuhaiin.protocol.protocol.mux:type_name -> yuhaiin.protocol.mux
	20, // 20: yuhaiin.protocol.protocol.drop:type_name -> yuhaiin.protocol.drop
	7,  // 21: yuhaiin.protocol.protocol.vless:type_name -> yuhaiin.protocol.vless
	17, // 22: yuhaiin.protocol.grpc.tls:type_name -> yuhaiin.protocol.tls_config
	17, // 23: yuhaiin.protocol.quic.tls:type_name -> yuhaiin.protocol.tls_config
	21, // 24: yuhaiin.protocol.simple.alternate_host:type_name -> yuhaiin.protocol.host
	22, // 25: yuhaiin.protocol.wireguard.peers:type_name -> yuhaiin.protocol.wireguard_peer_config
	26, // [26:26] is the sub-list for method output_type
	26, // [26:26] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_node_protocol_protocol_proto_init() }
func file_node_protocol_protocol_proto_init() {
	if File_node_protocol_protocol_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_node_protocol_protocol_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Protocol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_protocol_protocol_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Socks5); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_protocol_protocol_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Http); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_protocol_protocol_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Shadowsocks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_protocol_protocol_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Shadowsocksr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_protocol_protocol_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Http2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_protocol_protocol_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*Vmess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_protocol_protocol_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*Vless); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_protocol_protocol_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*Trojan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_protocol_protocol_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*Yuubinsya); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_protocol_protocol_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*Websocket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_protocol_protocol_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*Grpc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_protocol_protocol_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*Quic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_protocol_protocol_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*Reality); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_protocol_protocol_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*ObfsHttp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_protocol_protocol_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*None); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_protocol_protocol_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*Simple); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_protocol_protocol_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*TlsConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_protocol_protocol_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*Direct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_protocol_protocol_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*Reject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_protocol_protocol_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*Drop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_protocol_protocol_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*Host); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_protocol_protocol_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*WireguardPeerConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_protocol_protocol_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*Wireguard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_protocol_protocol_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*Mux); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_node_protocol_protocol_proto_msgTypes[0].OneofWrappers = []any{
		(*Protocol_Shadowsocks)(nil),
		(*Protocol_Shadowsocksr)(nil),
		(*Protocol_Vmess)(nil),
		(*Protocol_Websocket)(nil),
		(*Protocol_Quic)(nil),
		(*Protocol_ObfsHttp)(nil),
		(*Protocol_Trojan)(nil),
		(*Protocol_Simple)(nil),
		(*Protocol_None)(nil),
		(*Protocol_Socks5)(nil),
		(*Protocol_Http)(nil),
		(*Protocol_Direct)(nil),
		(*Protocol_Reject)(nil),
		(*Protocol_Yuubinsya)(nil),
		(*Protocol_Grpc)(nil),
		(*Protocol_Http2)(nil),
		(*Protocol_Reality)(nil),
		(*Protocol_Tls)(nil),
		(*Protocol_Wireguard)(nil),
		(*Protocol_Mux)(nil),
		(*Protocol_Drop)(nil),
		(*Protocol_Vless)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_node_protocol_protocol_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_node_protocol_protocol_proto_goTypes,
		DependencyIndexes: file_node_protocol_protocol_proto_depIdxs,
		MessageInfos:      file_node_protocol_protocol_proto_msgTypes,
	}.Build()
	File_node_protocol_protocol_proto = out.File
	file_node_protocol_protocol_proto_rawDesc = nil
	file_node_protocol_protocol_proto_goTypes = nil
	file_node_protocol_protocol_proto_depIdxs = nil
}
