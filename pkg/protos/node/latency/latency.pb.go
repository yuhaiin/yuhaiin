// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.0
// source: node/latency/latency.proto

package latency

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NatType int32

const (
	NatType_NAT_UNKNOWN                    NatType = 0
	NatType_NAT_NO_RESULT                  NatType = 1
	NatType_NAT_EndpointIndependentNoNAT   NatType = 2
	NatType_NAT_EndpointIndependent        NatType = 3
	NatType_NAT_AddressDependent           NatType = 4
	NatType_NAT_AddressAndPortDependent    NatType = 5
	NatType_NAT_ServerNotSupportChangePort NatType = 6
)

// Enum value maps for NatType.
var (
	NatType_name = map[int32]string{
		0: "NAT_UNKNOWN",
		1: "NAT_NO_RESULT",
		2: "NAT_EndpointIndependentNoNAT",
		3: "NAT_EndpointIndependent",
		4: "NAT_AddressDependent",
		5: "NAT_AddressAndPortDependent",
		6: "NAT_ServerNotSupportChangePort",
	}
	NatType_value = map[string]int32{
		"NAT_UNKNOWN":                    0,
		"NAT_NO_RESULT":                  1,
		"NAT_EndpointIndependentNoNAT":   2,
		"NAT_EndpointIndependent":        3,
		"NAT_AddressDependent":           4,
		"NAT_AddressAndPortDependent":    5,
		"NAT_ServerNotSupportChangePort": 6,
	}
)

func (x NatType) Enum() *NatType {
	p := new(NatType)
	*p = x
	return p
}

func (x NatType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NatType) Descriptor() protoreflect.EnumDescriptor {
	return file_node_latency_latency_proto_enumTypes[0].Descriptor()
}

func (NatType) Type() protoreflect.EnumType {
	return &file_node_latency_latency_proto_enumTypes[0]
}

func (x NatType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type Http struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Url         *string                `protobuf:"bytes,1,opt,name=url"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Http) Reset() {
	*x = Http{}
	mi := &file_node_latency_latency_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Http) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Http) ProtoMessage() {}

func (x *Http) ProtoReflect() protoreflect.Message {
	mi := &file_node_latency_latency_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Http) GetUrl() string {
	if x != nil {
		if x.xxx_hidden_Url != nil {
			return *x.xxx_hidden_Url
		}
		return ""
	}
	return ""
}

func (x *Http) SetUrl(v string) {
	x.xxx_hidden_Url = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *Http) HasUrl() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Http) ClearUrl() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Url = nil
}

type Http_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Url *string
}

func (b0 Http_builder) Build() *Http {
	m0 := &Http{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Url != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Url = b.Url
	}
	return m0
}

type Dns struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Host         *string                `protobuf:"bytes,1,opt,name=host"`
	xxx_hidden_TargetDomain *string                `protobuf:"bytes,2,opt,name=target_domain,json=target_name"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *Dns) Reset() {
	*x = Dns{}
	mi := &file_node_latency_latency_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dns) ProtoMessage() {}

func (x *Dns) ProtoReflect() protoreflect.Message {
	mi := &file_node_latency_latency_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Dns) GetHost() string {
	if x != nil {
		if x.xxx_hidden_Host != nil {
			return *x.xxx_hidden_Host
		}
		return ""
	}
	return ""
}

func (x *Dns) GetTargetDomain() string {
	if x != nil {
		if x.xxx_hidden_TargetDomain != nil {
			return *x.xxx_hidden_TargetDomain
		}
		return ""
	}
	return ""
}

func (x *Dns) SetHost(v string) {
	x.xxx_hidden_Host = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *Dns) SetTargetDomain(v string) {
	x.xxx_hidden_TargetDomain = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *Dns) HasHost() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Dns) HasTargetDomain() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Dns) ClearHost() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Host = nil
}

func (x *Dns) ClearTargetDomain() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_TargetDomain = nil
}

type Dns_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Host         *string
	TargetDomain *string
}

func (b0 Dns_builder) Build() *Dns {
	m0 := &Dns{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Host != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Host = b.Host
	}
	if b.TargetDomain != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_TargetDomain = b.TargetDomain
	}
	return m0
}

type DnsOverQuic struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Host         *string                `protobuf:"bytes,1,opt,name=host"`
	xxx_hidden_TargetDomain *string                `protobuf:"bytes,2,opt,name=target_domain,json=target_name"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *DnsOverQuic) Reset() {
	*x = DnsOverQuic{}
	mi := &file_node_latency_latency_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DnsOverQuic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DnsOverQuic) ProtoMessage() {}

func (x *DnsOverQuic) ProtoReflect() protoreflect.Message {
	mi := &file_node_latency_latency_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DnsOverQuic) GetHost() string {
	if x != nil {
		if x.xxx_hidden_Host != nil {
			return *x.xxx_hidden_Host
		}
		return ""
	}
	return ""
}

func (x *DnsOverQuic) GetTargetDomain() string {
	if x != nil {
		if x.xxx_hidden_TargetDomain != nil {
			return *x.xxx_hidden_TargetDomain
		}
		return ""
	}
	return ""
}

func (x *DnsOverQuic) SetHost(v string) {
	x.xxx_hidden_Host = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *DnsOverQuic) SetTargetDomain(v string) {
	x.xxx_hidden_TargetDomain = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *DnsOverQuic) HasHost() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DnsOverQuic) HasTargetDomain() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DnsOverQuic) ClearHost() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Host = nil
}

func (x *DnsOverQuic) ClearTargetDomain() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_TargetDomain = nil
}

type DnsOverQuic_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Host         *string
	TargetDomain *string
}

func (b0 DnsOverQuic_builder) Build() *DnsOverQuic {
	m0 := &DnsOverQuic{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Host != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Host = b.Host
	}
	if b.TargetDomain != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_TargetDomain = b.TargetDomain
	}
	return m0
}

type Ip struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Url         *string                `protobuf:"bytes,1,opt,name=url"`
	xxx_hidden_UserAgent   *string                `protobuf:"bytes,2,opt,name=user_agent"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Ip) Reset() {
	*x = Ip{}
	mi := &file_node_latency_latency_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ip) ProtoMessage() {}

func (x *Ip) ProtoReflect() protoreflect.Message {
	mi := &file_node_latency_latency_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Ip) GetUrl() string {
	if x != nil {
		if x.xxx_hidden_Url != nil {
			return *x.xxx_hidden_Url
		}
		return ""
	}
	return ""
}

func (x *Ip) GetUserAgent() string {
	if x != nil {
		if x.xxx_hidden_UserAgent != nil {
			return *x.xxx_hidden_UserAgent
		}
		return ""
	}
	return ""
}

func (x *Ip) SetUrl(v string) {
	x.xxx_hidden_Url = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *Ip) SetUserAgent(v string) {
	x.xxx_hidden_UserAgent = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *Ip) HasUrl() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Ip) HasUserAgent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Ip) ClearUrl() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Url = nil
}

func (x *Ip) ClearUserAgent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_UserAgent = nil
}

type Ip_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Url       *string
	UserAgent *string
}

func (b0 Ip_builder) Build() *Ip {
	m0 := &Ip{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Url != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Url = b.Url
	}
	if b.UserAgent != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_UserAgent = b.UserAgent
	}
	return m0
}

type IpResponse struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Ipv4        *string                `protobuf:"bytes,1,opt,name=ipv4"`
	xxx_hidden_Ipv6        *string                `protobuf:"bytes,2,opt,name=ipv6"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *IpResponse) Reset() {
	*x = IpResponse{}
	mi := &file_node_latency_latency_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IpResponse) ProtoMessage() {}

func (x *IpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_latency_latency_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *IpResponse) GetIpv4() string {
	if x != nil {
		if x.xxx_hidden_Ipv4 != nil {
			return *x.xxx_hidden_Ipv4
		}
		return ""
	}
	return ""
}

func (x *IpResponse) GetIpv6() string {
	if x != nil {
		if x.xxx_hidden_Ipv6 != nil {
			return *x.xxx_hidden_Ipv6
		}
		return ""
	}
	return ""
}

func (x *IpResponse) SetIpv4(v string) {
	x.xxx_hidden_Ipv4 = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *IpResponse) SetIpv6(v string) {
	x.xxx_hidden_Ipv6 = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *IpResponse) HasIpv4() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *IpResponse) HasIpv6() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *IpResponse) ClearIpv4() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Ipv4 = nil
}

func (x *IpResponse) ClearIpv6() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Ipv6 = nil
}

type IpResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Ipv4 *string
	Ipv6 *string
}

func (b0 IpResponse_builder) Build() *IpResponse {
	m0 := &IpResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Ipv4 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Ipv4 = b.Ipv4
	}
	if b.Ipv6 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Ipv6 = b.Ipv6
	}
	return m0
}

type Error struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Msg         *string                `protobuf:"bytes,1,opt,name=msg"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Error) Reset() {
	*x = Error{}
	mi := &file_node_latency_latency_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_node_latency_latency_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Error) GetMsg() string {
	if x != nil {
		if x.xxx_hidden_Msg != nil {
			return *x.xxx_hidden_Msg
		}
		return ""
	}
	return ""
}

func (x *Error) SetMsg(v string) {
	x.xxx_hidden_Msg = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *Error) HasMsg() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Error) ClearMsg() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Msg = nil
}

type Error_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Msg *string
}

func (b0 Error_builder) Build() *Error {
	m0 := &Error{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Msg != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Msg = b.Msg
	}
	return m0
}

type Stun struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Host        *string                `protobuf:"bytes,1,opt,name=host"`
	xxx_hidden_Tcp         bool                   `protobuf:"varint,2,opt,name=tcp"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Stun) Reset() {
	*x = Stun{}
	mi := &file_node_latency_latency_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Stun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stun) ProtoMessage() {}

func (x *Stun) ProtoReflect() protoreflect.Message {
	mi := &file_node_latency_latency_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Stun) GetHost() string {
	if x != nil {
		if x.xxx_hidden_Host != nil {
			return *x.xxx_hidden_Host
		}
		return ""
	}
	return ""
}

func (x *Stun) GetTcp() bool {
	if x != nil {
		return x.xxx_hidden_Tcp
	}
	return false
}

func (x *Stun) SetHost(v string) {
	x.xxx_hidden_Host = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *Stun) SetTcp(v bool) {
	x.xxx_hidden_Tcp = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *Stun) HasHost() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Stun) HasTcp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Stun) ClearHost() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Host = nil
}

func (x *Stun) ClearTcp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Tcp = false
}

type Stun_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Host *string
	Tcp  *bool
}

func (b0 Stun_builder) Build() *Stun {
	m0 := &Stun{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Host != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Host = b.Host
	}
	if b.Tcp != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Tcp = *b.Tcp
	}
	return m0
}

type StunResponse struct {
	state                            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_XorMappedAddress      *string                `protobuf:"bytes,1,opt,name=xor_mapped_address"`
	xxx_hidden_MappedAddress         *string                `protobuf:"bytes,2,opt,name=mapped_address"`
	xxx_hidden_OtherAddress          *string                `protobuf:"bytes,3,opt,name=other_address"`
	xxx_hidden_ResponseOriginAddress *string                `protobuf:"bytes,4,opt,name=response_origin_address"`
	xxx_hidden_Software              *string                `protobuf:"bytes,5,opt,name=Software"`
	xxx_hidden_Mapping               NatType                `protobuf:"varint,6,opt,name=Mapping,json=mapping,enum=yuhaiin.latency.NatType"`
	xxx_hidden_Filtering             NatType                `protobuf:"varint,7,opt,name=Filtering,json=filtering,enum=yuhaiin.latency.NatType"`
	XXX_raceDetectHookData           protoimpl.RaceDetectHookData
	XXX_presence                     [1]uint32
	unknownFields                    protoimpl.UnknownFields
	sizeCache                        protoimpl.SizeCache
}

func (x *StunResponse) Reset() {
	*x = StunResponse{}
	mi := &file_node_latency_latency_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StunResponse) ProtoMessage() {}

func (x *StunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_latency_latency_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StunResponse) GetXorMappedAddress() string {
	if x != nil {
		if x.xxx_hidden_XorMappedAddress != nil {
			return *x.xxx_hidden_XorMappedAddress
		}
		return ""
	}
	return ""
}

func (x *StunResponse) GetMappedAddress() string {
	if x != nil {
		if x.xxx_hidden_MappedAddress != nil {
			return *x.xxx_hidden_MappedAddress
		}
		return ""
	}
	return ""
}

func (x *StunResponse) GetOtherAddress() string {
	if x != nil {
		if x.xxx_hidden_OtherAddress != nil {
			return *x.xxx_hidden_OtherAddress
		}
		return ""
	}
	return ""
}

func (x *StunResponse) GetResponseOriginAddress() string {
	if x != nil {
		if x.xxx_hidden_ResponseOriginAddress != nil {
			return *x.xxx_hidden_ResponseOriginAddress
		}
		return ""
	}
	return ""
}

func (x *StunResponse) GetSoftware() string {
	if x != nil {
		if x.xxx_hidden_Software != nil {
			return *x.xxx_hidden_Software
		}
		return ""
	}
	return ""
}

func (x *StunResponse) GetMapping() NatType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 5) {
			return x.xxx_hidden_Mapping
		}
	}
	return NatType_NAT_UNKNOWN
}

func (x *StunResponse) GetFiltering() NatType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 6) {
			return x.xxx_hidden_Filtering
		}
	}
	return NatType_NAT_UNKNOWN
}

func (x *StunResponse) SetXorMappedAddress(v string) {
	x.xxx_hidden_XorMappedAddress = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *StunResponse) SetMappedAddress(v string) {
	x.xxx_hidden_MappedAddress = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *StunResponse) SetOtherAddress(v string) {
	x.xxx_hidden_OtherAddress = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *StunResponse) SetResponseOriginAddress(v string) {
	x.xxx_hidden_ResponseOriginAddress = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *StunResponse) SetSoftware(v string) {
	x.xxx_hidden_Software = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *StunResponse) SetMapping(v NatType) {
	x.xxx_hidden_Mapping = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 7)
}

func (x *StunResponse) SetFiltering(v NatType) {
	x.xxx_hidden_Filtering = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 7)
}

func (x *StunResponse) HasXorMappedAddress() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *StunResponse) HasMappedAddress() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *StunResponse) HasOtherAddress() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *StunResponse) HasResponseOriginAddress() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *StunResponse) HasSoftware() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *StunResponse) HasMapping() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *StunResponse) HasFiltering() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *StunResponse) ClearXorMappedAddress() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_XorMappedAddress = nil
}

func (x *StunResponse) ClearMappedAddress() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_MappedAddress = nil
}

func (x *StunResponse) ClearOtherAddress() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_OtherAddress = nil
}

func (x *StunResponse) ClearResponseOriginAddress() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ResponseOriginAddress = nil
}

func (x *StunResponse) ClearSoftware() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Software = nil
}

func (x *StunResponse) ClearMapping() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Mapping = NatType_NAT_UNKNOWN
}

func (x *StunResponse) ClearFiltering() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_Filtering = NatType_NAT_UNKNOWN
}

type StunResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	XorMappedAddress      *string
	MappedAddress         *string
	OtherAddress          *string
	ResponseOriginAddress *string
	Software              *string
	Mapping               *NatType
	Filtering             *NatType
}

func (b0 StunResponse_builder) Build() *StunResponse {
	m0 := &StunResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.XorMappedAddress != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_XorMappedAddress = b.XorMappedAddress
	}
	if b.MappedAddress != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_MappedAddress = b.MappedAddress
	}
	if b.OtherAddress != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_OtherAddress = b.OtherAddress
	}
	if b.ResponseOriginAddress != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_ResponseOriginAddress = b.ResponseOriginAddress
	}
	if b.Software != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_Software = b.Software
	}
	if b.Mapping != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 7)
		x.xxx_hidden_Mapping = *b.Mapping
	}
	if b.Filtering != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 7)
		x.xxx_hidden_Filtering = *b.Filtering
	}
	return m0
}

type Protocol struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Protocol isProtocol_Protocol    `protobuf_oneof:"protocol"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Protocol) Reset() {
	*x = Protocol{}
	mi := &file_node_latency_latency_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Protocol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Protocol) ProtoMessage() {}

func (x *Protocol) ProtoReflect() protoreflect.Message {
	mi := &file_node_latency_latency_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Protocol) GetHttp() *Http {
	if x != nil {
		if x, ok := x.xxx_hidden_Protocol.(*protocol_Http); ok {
			return x.Http
		}
	}
	return nil
}

func (x *Protocol) GetDns() *Dns {
	if x != nil {
		if x, ok := x.xxx_hidden_Protocol.(*protocol_Dns); ok {
			return x.Dns
		}
	}
	return nil
}

func (x *Protocol) GetDnsOverQuic() *DnsOverQuic {
	if x != nil {
		if x, ok := x.xxx_hidden_Protocol.(*protocol_DnsOverQuic); ok {
			return x.DnsOverQuic
		}
	}
	return nil
}

func (x *Protocol) GetIp() *Ip {
	if x != nil {
		if x, ok := x.xxx_hidden_Protocol.(*protocol_Ip); ok {
			return x.Ip
		}
	}
	return nil
}

func (x *Protocol) GetStun() *Stun {
	if x != nil {
		if x, ok := x.xxx_hidden_Protocol.(*protocol_Stun); ok {
			return x.Stun
		}
	}
	return nil
}

func (x *Protocol) SetHttp(v *Http) {
	if v == nil {
		x.xxx_hidden_Protocol = nil
		return
	}
	x.xxx_hidden_Protocol = &protocol_Http{v}
}

func (x *Protocol) SetDns(v *Dns) {
	if v == nil {
		x.xxx_hidden_Protocol = nil
		return
	}
	x.xxx_hidden_Protocol = &protocol_Dns{v}
}

func (x *Protocol) SetDnsOverQuic(v *DnsOverQuic) {
	if v == nil {
		x.xxx_hidden_Protocol = nil
		return
	}
	x.xxx_hidden_Protocol = &protocol_DnsOverQuic{v}
}

func (x *Protocol) SetIp(v *Ip) {
	if v == nil {
		x.xxx_hidden_Protocol = nil
		return
	}
	x.xxx_hidden_Protocol = &protocol_Ip{v}
}

func (x *Protocol) SetStun(v *Stun) {
	if v == nil {
		x.xxx_hidden_Protocol = nil
		return
	}
	x.xxx_hidden_Protocol = &protocol_Stun{v}
}

func (x *Protocol) HasProtocol() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Protocol != nil
}

func (x *Protocol) HasHttp() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Protocol.(*protocol_Http)
	return ok
}

func (x *Protocol) HasDns() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Protocol.(*protocol_Dns)
	return ok
}

func (x *Protocol) HasDnsOverQuic() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Protocol.(*protocol_DnsOverQuic)
	return ok
}

func (x *Protocol) HasIp() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Protocol.(*protocol_Ip)
	return ok
}

func (x *Protocol) HasStun() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Protocol.(*protocol_Stun)
	return ok
}

func (x *Protocol) ClearProtocol() {
	x.xxx_hidden_Protocol = nil
}

func (x *Protocol) ClearHttp() {
	if _, ok := x.xxx_hidden_Protocol.(*protocol_Http); ok {
		x.xxx_hidden_Protocol = nil
	}
}

func (x *Protocol) ClearDns() {
	if _, ok := x.xxx_hidden_Protocol.(*protocol_Dns); ok {
		x.xxx_hidden_Protocol = nil
	}
}

func (x *Protocol) ClearDnsOverQuic() {
	if _, ok := x.xxx_hidden_Protocol.(*protocol_DnsOverQuic); ok {
		x.xxx_hidden_Protocol = nil
	}
}

func (x *Protocol) ClearIp() {
	if _, ok := x.xxx_hidden_Protocol.(*protocol_Ip); ok {
		x.xxx_hidden_Protocol = nil
	}
}

func (x *Protocol) ClearStun() {
	if _, ok := x.xxx_hidden_Protocol.(*protocol_Stun); ok {
		x.xxx_hidden_Protocol = nil
	}
}

const Protocol_Protocol_not_set_case case_Protocol_Protocol = 0
const Protocol_Http_case case_Protocol_Protocol = 1
const Protocol_Dns_case case_Protocol_Protocol = 2
const Protocol_DnsOverQuic_case case_Protocol_Protocol = 3
const Protocol_Ip_case case_Protocol_Protocol = 4
const Protocol_Stun_case case_Protocol_Protocol = 5

func (x *Protocol) WhichProtocol() case_Protocol_Protocol {
	if x == nil {
		return Protocol_Protocol_not_set_case
	}
	switch x.xxx_hidden_Protocol.(type) {
	case *protocol_Http:
		return Protocol_Http_case
	case *protocol_Dns:
		return Protocol_Dns_case
	case *protocol_DnsOverQuic:
		return Protocol_DnsOverQuic_case
	case *protocol_Ip:
		return Protocol_Ip_case
	case *protocol_Stun:
		return Protocol_Stun_case
	default:
		return Protocol_Protocol_not_set_case
	}
}

type Protocol_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof xxx_hidden_Protocol:
	Http        *Http
	Dns         *Dns
	DnsOverQuic *DnsOverQuic
	Ip          *Ip
	Stun        *Stun
	// -- end of xxx_hidden_Protocol
}

func (b0 Protocol_builder) Build() *Protocol {
	m0 := &Protocol{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Http != nil {
		x.xxx_hidden_Protocol = &protocol_Http{b.Http}
	}
	if b.Dns != nil {
		x.xxx_hidden_Protocol = &protocol_Dns{b.Dns}
	}
	if b.DnsOverQuic != nil {
		x.xxx_hidden_Protocol = &protocol_DnsOverQuic{b.DnsOverQuic}
	}
	if b.Ip != nil {
		x.xxx_hidden_Protocol = &protocol_Ip{b.Ip}
	}
	if b.Stun != nil {
		x.xxx_hidden_Protocol = &protocol_Stun{b.Stun}
	}
	return m0
}

type case_Protocol_Protocol protoreflect.FieldNumber

func (x case_Protocol_Protocol) String() string {
	md := file_node_latency_latency_proto_msgTypes[8].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isProtocol_Protocol interface {
	isProtocol_Protocol()
}

type protocol_Http struct {
	Http *Http `protobuf:"bytes,1,opt,name=http,oneof"`
}

type protocol_Dns struct {
	Dns *Dns `protobuf:"bytes,2,opt,name=dns,oneof"`
}

type protocol_DnsOverQuic struct {
	DnsOverQuic *DnsOverQuic `protobuf:"bytes,3,opt,name=dns_over_quic,oneof"`
}

type protocol_Ip struct {
	Ip *Ip `protobuf:"bytes,4,opt,name=ip,oneof"`
}

type protocol_Stun struct {
	Stun *Stun `protobuf:"bytes,5,opt,name=stun,oneof"`
}

func (*protocol_Http) isProtocol_Protocol() {}

func (*protocol_Dns) isProtocol_Protocol() {}

func (*protocol_DnsOverQuic) isProtocol_Protocol() {}

func (*protocol_Ip) isProtocol_Protocol() {}

func (*protocol_Stun) isProtocol_Protocol() {}

type Request struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,3,opt,name=id"`
	xxx_hidden_Hash        *string                `protobuf:"bytes,1,opt,name=hash"`
	xxx_hidden_Ipv6        bool                   `protobuf:"varint,4,opt,name=ipv6"`
	xxx_hidden_Protocol    *Protocol              `protobuf:"bytes,2,opt,name=protocol"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Request) Reset() {
	*x = Request{}
	mi := &file_node_latency_latency_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_node_latency_latency_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Request) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *Request) GetHash() string {
	if x != nil {
		if x.xxx_hidden_Hash != nil {
			return *x.xxx_hidden_Hash
		}
		return ""
	}
	return ""
}

func (x *Request) GetIpv6() bool {
	if x != nil {
		return x.xxx_hidden_Ipv6
	}
	return false
}

func (x *Request) GetProtocol() *Protocol {
	if x != nil {
		return x.xxx_hidden_Protocol
	}
	return nil
}

func (x *Request) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *Request) SetHash(v string) {
	x.xxx_hidden_Hash = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *Request) SetIpv6(v bool) {
	x.xxx_hidden_Ipv6 = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *Request) SetProtocol(v *Protocol) {
	x.xxx_hidden_Protocol = v
}

func (x *Request) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Request) HasHash() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Request) HasIpv6() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Request) HasProtocol() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Protocol != nil
}

func (x *Request) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *Request) ClearHash() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Hash = nil
}

func (x *Request) ClearIpv6() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Ipv6 = false
}

func (x *Request) ClearProtocol() {
	x.xxx_hidden_Protocol = nil
}

type Request_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id       *string
	Hash     *string
	Ipv6     *bool
	Protocol *Protocol
}

func (b0 Request_builder) Build() *Request {
	m0 := &Request{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Id = b.Id
	}
	if b.Hash != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Hash = b.Hash
	}
	if b.Ipv6 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Ipv6 = *b.Ipv6
	}
	x.xxx_hidden_Protocol = b.Protocol
	return m0
}

type Requests struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Requests *[]*Request            `protobuf:"bytes,1,rep,name=requests"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Requests) Reset() {
	*x = Requests{}
	mi := &file_node_latency_latency_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Requests) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Requests) ProtoMessage() {}

func (x *Requests) ProtoReflect() protoreflect.Message {
	mi := &file_node_latency_latency_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Requests) GetRequests() []*Request {
	if x != nil {
		if x.xxx_hidden_Requests != nil {
			return *x.xxx_hidden_Requests
		}
	}
	return nil
}

func (x *Requests) SetRequests(v []*Request) {
	x.xxx_hidden_Requests = &v
}

type Requests_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Requests []*Request
}

func (b0 Requests_builder) Build() *Requests {
	m0 := &Requests{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Requests = &b.Requests
	return m0
}

type Response struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_IdLatencyMap map[string]*Reply      `protobuf:"bytes,1,rep,name=id_latency_map" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *Response) Reset() {
	*x = Response{}
	mi := &file_node_latency_latency_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_node_latency_latency_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Response) GetIdLatencyMap() map[string]*Reply {
	if x != nil {
		return x.xxx_hidden_IdLatencyMap
	}
	return nil
}

func (x *Response) SetIdLatencyMap(v map[string]*Reply) {
	x.xxx_hidden_IdLatencyMap = v
}

type Response_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	IdLatencyMap map[string]*Reply
}

func (b0 Response_builder) Build() *Response {
	m0 := &Response{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_IdLatencyMap = b.IdLatencyMap
	return m0
}

type Reply struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Reply isReply_Reply          `protobuf_oneof:"reply"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Reply) Reset() {
	*x = Reply{}
	mi := &file_node_latency_latency_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reply) ProtoMessage() {}

func (x *Reply) ProtoReflect() protoreflect.Message {
	mi := &file_node_latency_latency_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Reply) GetLatency() *durationpb.Duration {
	if x != nil {
		if x, ok := x.xxx_hidden_Reply.(*reply_Latency); ok {
			return x.Latency
		}
	}
	return nil
}

func (x *Reply) GetIp() *IpResponse {
	if x != nil {
		if x, ok := x.xxx_hidden_Reply.(*reply_Ip); ok {
			return x.Ip
		}
	}
	return nil
}

func (x *Reply) GetStun() *StunResponse {
	if x != nil {
		if x, ok := x.xxx_hidden_Reply.(*reply_Stun); ok {
			return x.Stun
		}
	}
	return nil
}

func (x *Reply) GetError() *Error {
	if x != nil {
		if x, ok := x.xxx_hidden_Reply.(*reply_Error); ok {
			return x.Error
		}
	}
	return nil
}

func (x *Reply) SetLatency(v *durationpb.Duration) {
	if v == nil {
		x.xxx_hidden_Reply = nil
		return
	}
	x.xxx_hidden_Reply = &reply_Latency{v}
}

func (x *Reply) SetIp(v *IpResponse) {
	if v == nil {
		x.xxx_hidden_Reply = nil
		return
	}
	x.xxx_hidden_Reply = &reply_Ip{v}
}

func (x *Reply) SetStun(v *StunResponse) {
	if v == nil {
		x.xxx_hidden_Reply = nil
		return
	}
	x.xxx_hidden_Reply = &reply_Stun{v}
}

func (x *Reply) SetError(v *Error) {
	if v == nil {
		x.xxx_hidden_Reply = nil
		return
	}
	x.xxx_hidden_Reply = &reply_Error{v}
}

func (x *Reply) HasReply() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Reply != nil
}

func (x *Reply) HasLatency() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Reply.(*reply_Latency)
	return ok
}

func (x *Reply) HasIp() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Reply.(*reply_Ip)
	return ok
}

func (x *Reply) HasStun() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Reply.(*reply_Stun)
	return ok
}

func (x *Reply) HasError() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Reply.(*reply_Error)
	return ok
}

func (x *Reply) ClearReply() {
	x.xxx_hidden_Reply = nil
}

func (x *Reply) ClearLatency() {
	if _, ok := x.xxx_hidden_Reply.(*reply_Latency); ok {
		x.xxx_hidden_Reply = nil
	}
}

func (x *Reply) ClearIp() {
	if _, ok := x.xxx_hidden_Reply.(*reply_Ip); ok {
		x.xxx_hidden_Reply = nil
	}
}

func (x *Reply) ClearStun() {
	if _, ok := x.xxx_hidden_Reply.(*reply_Stun); ok {
		x.xxx_hidden_Reply = nil
	}
}

func (x *Reply) ClearError() {
	if _, ok := x.xxx_hidden_Reply.(*reply_Error); ok {
		x.xxx_hidden_Reply = nil
	}
}

const Reply_Reply_not_set_case case_Reply_Reply = 0
const Reply_Latency_case case_Reply_Reply = 1
const Reply_Ip_case case_Reply_Reply = 2
const Reply_Stun_case case_Reply_Reply = 3
const Reply_Error_case case_Reply_Reply = 4

func (x *Reply) WhichReply() case_Reply_Reply {
	if x == nil {
		return Reply_Reply_not_set_case
	}
	switch x.xxx_hidden_Reply.(type) {
	case *reply_Latency:
		return Reply_Latency_case
	case *reply_Ip:
		return Reply_Ip_case
	case *reply_Stun:
		return Reply_Stun_case
	case *reply_Error:
		return Reply_Error_case
	default:
		return Reply_Reply_not_set_case
	}
}

type Reply_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof xxx_hidden_Reply:
	Latency *durationpb.Duration
	Ip      *IpResponse
	Stun    *StunResponse
	Error   *Error
	// -- end of xxx_hidden_Reply
}

func (b0 Reply_builder) Build() *Reply {
	m0 := &Reply{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Latency != nil {
		x.xxx_hidden_Reply = &reply_Latency{b.Latency}
	}
	if b.Ip != nil {
		x.xxx_hidden_Reply = &reply_Ip{b.Ip}
	}
	if b.Stun != nil {
		x.xxx_hidden_Reply = &reply_Stun{b.Stun}
	}
	if b.Error != nil {
		x.xxx_hidden_Reply = &reply_Error{b.Error}
	}
	return m0
}

type case_Reply_Reply protoreflect.FieldNumber

func (x case_Reply_Reply) String() string {
	md := file_node_latency_latency_proto_msgTypes[12].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isReply_Reply interface {
	isReply_Reply()
}

type reply_Latency struct {
	Latency *durationpb.Duration `protobuf:"bytes,1,opt,name=latency,oneof"`
}

type reply_Ip struct {
	Ip *IpResponse `protobuf:"bytes,2,opt,name=ip,oneof"`
}

type reply_Stun struct {
	Stun *StunResponse `protobuf:"bytes,3,opt,name=stun,oneof"`
}

type reply_Error struct {
	Error *Error `protobuf:"bytes,4,opt,name=error,oneof"`
}

func (*reply_Latency) isReply_Reply() {}

func (*reply_Ip) isReply_Reply() {}

func (*reply_Stun) isReply_Reply() {}

func (*reply_Error) isReply_Reply() {}

var File_node_latency_latency_proto protoreflect.FileDescriptor

const file_node_latency_latency_proto_rawDesc = "" +
	"\n" +
	"\x1anode/latency/latency.proto\x12\x0fyuhaiin.latency\x1a\x1egoogle/protobuf/duration.proto\x1a!google/protobuf/go_features.proto\"\x18\n" +
	"\x04http\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\"=\n" +
	"\x03dns\x12\x12\n" +
	"\x04host\x18\x01 \x01(\tR\x04host\x12\"\n" +
	"\rtarget_domain\x18\x02 \x01(\tR\vtarget_name\"G\n" +
	"\rdns_over_quic\x12\x12\n" +
	"\x04host\x18\x01 \x01(\tR\x04host\x12\"\n" +
	"\rtarget_domain\x18\x02 \x01(\tR\vtarget_name\"6\n" +
	"\x02ip\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\x12\x1e\n" +
	"\n" +
	"user_agent\x18\x02 \x01(\tR\n" +
	"user_agent\"5\n" +
	"\vip_response\x12\x12\n" +
	"\x04ipv4\x18\x01 \x01(\tR\x04ipv4\x12\x12\n" +
	"\x04ipv6\x18\x02 \x01(\tR\x04ipv6\"\x19\n" +
	"\x05error\x12\x10\n" +
	"\x03msg\x18\x01 \x01(\tR\x03msg\",\n" +
	"\x04stun\x12\x12\n" +
	"\x04host\x18\x01 \x01(\tR\x04host\x12\x10\n" +
	"\x03tcp\x18\x02 \x01(\bR\x03tcp\"\xd1\x02\n" +
	"\rstun_response\x12.\n" +
	"\x12xor_mapped_address\x18\x01 \x01(\tR\x12xor_mapped_address\x12&\n" +
	"\x0emapped_address\x18\x02 \x01(\tR\x0emapped_address\x12$\n" +
	"\rother_address\x18\x03 \x01(\tR\rother_address\x128\n" +
	"\x17response_origin_address\x18\x04 \x01(\tR\x17response_origin_address\x12\x1a\n" +
	"\bSoftware\x18\x05 \x01(\tR\bSoftware\x123\n" +
	"\aMapping\x18\x06 \x01(\x0e2\x19.yuhaiin.latency.nat_typeR\amapping\x127\n" +
	"\tFiltering\x18\a \x01(\x0e2\x19.yuhaiin.latency.nat_typeR\tfiltering\"\x89\x02\n" +
	"\bprotocol\x12+\n" +
	"\x04http\x18\x01 \x01(\v2\x15.yuhaiin.latency.httpH\x00R\x04http\x12(\n" +
	"\x03dns\x18\x02 \x01(\v2\x14.yuhaiin.latency.dnsH\x00R\x03dns\x12F\n" +
	"\rdns_over_quic\x18\x03 \x01(\v2\x1e.yuhaiin.latency.dns_over_quicH\x00R\rdns_over_quic\x12%\n" +
	"\x02ip\x18\x04 \x01(\v2\x13.yuhaiin.latency.ipH\x00R\x02ip\x12+\n" +
	"\x04stun\x18\x05 \x01(\v2\x15.yuhaiin.latency.stunH\x00R\x04stunB\n" +
	"\n" +
	"\bprotocol\"x\n" +
	"\arequest\x12\x0e\n" +
	"\x02id\x18\x03 \x01(\tR\x02id\x12\x12\n" +
	"\x04hash\x18\x01 \x01(\tR\x04hash\x12\x12\n" +
	"\x04ipv6\x18\x04 \x01(\bR\x04ipv6\x125\n" +
	"\bprotocol\x18\x02 \x01(\v2\x19.yuhaiin.latency.protocolR\bprotocol\"@\n" +
	"\brequests\x124\n" +
	"\brequests\x18\x01 \x03(\v2\x18.yuhaiin.latency.requestR\brequests\"\xb8\x01\n" +
	"\bresponse\x12S\n" +
	"\x0eid_latency_map\x18\x01 \x03(\v2+.yuhaiin.latency.response.IdLatencyMapEntryR\x0eid_latency_map\x1aW\n" +
	"\x11IdLatencyMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12,\n" +
	"\x05value\x18\x02 \x01(\v2\x16.yuhaiin.latency.replyR\x05value:\x028\x01\"\xdd\x01\n" +
	"\x05reply\x125\n" +
	"\alatency\x18\x01 \x01(\v2\x19.google.protobuf.DurationH\x00R\alatency\x12.\n" +
	"\x02ip\x18\x02 \x01(\v2\x1c.yuhaiin.latency.ip_responseH\x00R\x02ip\x124\n" +
	"\x04stun\x18\x03 \x01(\v2\x1e.yuhaiin.latency.stun_responseH\x00R\x04stun\x12.\n" +
	"\x05error\x18\x04 \x01(\v2\x16.yuhaiin.latency.errorH\x00R\x05errorB\a\n" +
	"\x05reply*\xcc\x01\n" +
	"\bnat_type\x12\x0f\n" +
	"\vNAT_UNKNOWN\x10\x00\x12\x11\n" +
	"\rNAT_NO_RESULT\x10\x01\x12 \n" +
	"\x1cNAT_EndpointIndependentNoNAT\x10\x02\x12\x1b\n" +
	"\x17NAT_EndpointIndependent\x10\x03\x12\x18\n" +
	"\x14NAT_AddressDependent\x10\x04\x12\x1f\n" +
	"\x1bNAT_AddressAndPortDependent\x10\x05\x12\"\n" +
	"\x1eNAT_ServerNotSupportChangePort\x10\x06B>Z4github.com/Asutorufa/yuhaiin/pkg/protos/node/latency\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_node_latency_latency_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_node_latency_latency_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_node_latency_latency_proto_goTypes = []any{
	(NatType)(0),                // 0: yuhaiin.latency.nat_type
	(*Http)(nil),                // 1: yuhaiin.latency.http
	(*Dns)(nil),                 // 2: yuhaiin.latency.dns
	(*DnsOverQuic)(nil),         // 3: yuhaiin.latency.dns_over_quic
	(*Ip)(nil),                  // 4: yuhaiin.latency.ip
	(*IpResponse)(nil),          // 5: yuhaiin.latency.ip_response
	(*Error)(nil),               // 6: yuhaiin.latency.error
	(*Stun)(nil),                // 7: yuhaiin.latency.stun
	(*StunResponse)(nil),        // 8: yuhaiin.latency.stun_response
	(*Protocol)(nil),            // 9: yuhaiin.latency.protocol
	(*Request)(nil),             // 10: yuhaiin.latency.request
	(*Requests)(nil),            // 11: yuhaiin.latency.requests
	(*Response)(nil),            // 12: yuhaiin.latency.response
	(*Reply)(nil),               // 13: yuhaiin.latency.reply
	nil,                         // 14: yuhaiin.latency.response.IdLatencyMapEntry
	(*durationpb.Duration)(nil), // 15: google.protobuf.Duration
}
var file_node_latency_latency_proto_depIdxs = []int32{
	0,  // 0: yuhaiin.latency.stun_response.Mapping:type_name -> yuhaiin.latency.nat_type
	0,  // 1: yuhaiin.latency.stun_response.Filtering:type_name -> yuhaiin.latency.nat_type
	1,  // 2: yuhaiin.latency.protocol.http:type_name -> yuhaiin.latency.http
	2,  // 3: yuhaiin.latency.protocol.dns:type_name -> yuhaiin.latency.dns
	3,  // 4: yuhaiin.latency.protocol.dns_over_quic:type_name -> yuhaiin.latency.dns_over_quic
	4,  // 5: yuhaiin.latency.protocol.ip:type_name -> yuhaiin.latency.ip
	7,  // 6: yuhaiin.latency.protocol.stun:type_name -> yuhaiin.latency.stun
	9,  // 7: yuhaiin.latency.request.protocol:type_name -> yuhaiin.latency.protocol
	10, // 8: yuhaiin.latency.requests.requests:type_name -> yuhaiin.latency.request
	14, // 9: yuhaiin.latency.response.id_latency_map:type_name -> yuhaiin.latency.response.IdLatencyMapEntry
	15, // 10: yuhaiin.latency.reply.latency:type_name -> google.protobuf.Duration
	5,  // 11: yuhaiin.latency.reply.ip:type_name -> yuhaiin.latency.ip_response
	8,  // 12: yuhaiin.latency.reply.stun:type_name -> yuhaiin.latency.stun_response
	6,  // 13: yuhaiin.latency.reply.error:type_name -> yuhaiin.latency.error
	13, // 14: yuhaiin.latency.response.IdLatencyMapEntry.value:type_name -> yuhaiin.latency.reply
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_node_latency_latency_proto_init() }
func file_node_latency_latency_proto_init() {
	if File_node_latency_latency_proto != nil {
		return
	}
	file_node_latency_latency_proto_msgTypes[8].OneofWrappers = []any{
		(*protocol_Http)(nil),
		(*protocol_Dns)(nil),
		(*protocol_DnsOverQuic)(nil),
		(*protocol_Ip)(nil),
		(*protocol_Stun)(nil),
	}
	file_node_latency_latency_proto_msgTypes[12].OneofWrappers = []any{
		(*reply_Latency)(nil),
		(*reply_Ip)(nil),
		(*reply_Stun)(nil),
		(*reply_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_node_latency_latency_proto_rawDesc), len(file_node_latency_latency_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_node_latency_latency_proto_goTypes,
		DependencyIndexes: file_node_latency_latency_proto_depIdxs,
		EnumInfos:         file_node_latency_latency_proto_enumTypes,
		MessageInfos:      file_node_latency_latency_proto_msgTypes,
	}.Build()
	File_node_latency_latency_proto = out.File
	file_node_latency_latency_proto_goTypes = nil
	file_node_latency_latency_proto_depIdxs = nil
}
