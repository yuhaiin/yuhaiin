// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.2
// source: node/latency/latency.proto

package latency

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NatType int32

const (
	NatType_NAT_UNKNOWN                    NatType = 0
	NatType_NAT_NO_RESULT                  NatType = 1
	NatType_NAT_EndpointIndependentNoNAT   NatType = 2
	NatType_NAT_EndpointIndependent        NatType = 3
	NatType_NAT_AddressDependent           NatType = 4
	NatType_NAT_AddressAndPortDependent    NatType = 5
	NatType_NAT_ServerNotSupportChangePort NatType = 6
)

// Enum value maps for NatType.
var (
	NatType_name = map[int32]string{
		0: "NAT_UNKNOWN",
		1: "NAT_NO_RESULT",
		2: "NAT_EndpointIndependentNoNAT",
		3: "NAT_EndpointIndependent",
		4: "NAT_AddressDependent",
		5: "NAT_AddressAndPortDependent",
		6: "NAT_ServerNotSupportChangePort",
	}
	NatType_value = map[string]int32{
		"NAT_UNKNOWN":                    0,
		"NAT_NO_RESULT":                  1,
		"NAT_EndpointIndependentNoNAT":   2,
		"NAT_EndpointIndependent":        3,
		"NAT_AddressDependent":           4,
		"NAT_AddressAndPortDependent":    5,
		"NAT_ServerNotSupportChangePort": 6,
	}
)

func (x NatType) Enum() *NatType {
	p := new(NatType)
	*p = x
	return p
}

func (x NatType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NatType) Descriptor() protoreflect.EnumDescriptor {
	return file_node_latency_latency_proto_enumTypes[0].Descriptor()
}

func (NatType) Type() protoreflect.EnumType {
	return &file_node_latency_latency_proto_enumTypes[0]
}

func (x NatType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NatType.Descriptor instead.
func (NatType) EnumDescriptor() ([]byte, []int) {
	return file_node_latency_latency_proto_rawDescGZIP(), []int{0}
}

type Http struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *Http) Reset() {
	*x = Http{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_latency_latency_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Http) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Http) ProtoMessage() {}

func (x *Http) ProtoReflect() protoreflect.Message {
	mi := &file_node_latency_latency_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Http.ProtoReflect.Descriptor instead.
func (*Http) Descriptor() ([]byte, []int) {
	return file_node_latency_latency_proto_rawDescGZIP(), []int{0}
}

func (x *Http) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type Dns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host         string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	TargetDomain string `protobuf:"bytes,2,opt,name=target_domain,json=target_name,proto3" json:"target_domain,omitempty"`
}

func (x *Dns) Reset() {
	*x = Dns{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_latency_latency_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dns) ProtoMessage() {}

func (x *Dns) ProtoReflect() protoreflect.Message {
	mi := &file_node_latency_latency_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dns.ProtoReflect.Descriptor instead.
func (*Dns) Descriptor() ([]byte, []int) {
	return file_node_latency_latency_proto_rawDescGZIP(), []int{1}
}

func (x *Dns) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Dns) GetTargetDomain() string {
	if x != nil {
		return x.TargetDomain
	}
	return ""
}

type DnsOverQuic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host         string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	TargetDomain string `protobuf:"bytes,2,opt,name=target_domain,json=target_name,proto3" json:"target_domain,omitempty"`
}

func (x *DnsOverQuic) Reset() {
	*x = DnsOverQuic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_latency_latency_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DnsOverQuic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DnsOverQuic) ProtoMessage() {}

func (x *DnsOverQuic) ProtoReflect() protoreflect.Message {
	mi := &file_node_latency_latency_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DnsOverQuic.ProtoReflect.Descriptor instead.
func (*DnsOverQuic) Descriptor() ([]byte, []int) {
	return file_node_latency_latency_proto_rawDescGZIP(), []int{2}
}

func (x *DnsOverQuic) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *DnsOverQuic) GetTargetDomain() string {
	if x != nil {
		return x.TargetDomain
	}
	return ""
}

type Ip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url       string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	UserAgent string `protobuf:"bytes,2,opt,name=user_agent,proto3" json:"user_agent,omitempty"`
}

func (x *Ip) Reset() {
	*x = Ip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_latency_latency_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ip) ProtoMessage() {}

func (x *Ip) ProtoReflect() protoreflect.Message {
	mi := &file_node_latency_latency_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ip.ProtoReflect.Descriptor instead.
func (*Ip) Descriptor() ([]byte, []int) {
	return file_node_latency_latency_proto_rawDescGZIP(), []int{3}
}

func (x *Ip) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Ip) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

type IpResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ipv4 string `protobuf:"bytes,1,opt,name=ipv4,proto3" json:"ipv4,omitempty"`
	Ipv6 string `protobuf:"bytes,2,opt,name=ipv6,proto3" json:"ipv6,omitempty"`
}

func (x *IpResponse) Reset() {
	*x = IpResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_latency_latency_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IpResponse) ProtoMessage() {}

func (x *IpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_latency_latency_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IpResponse.ProtoReflect.Descriptor instead.
func (*IpResponse) Descriptor() ([]byte, []int) {
	return file_node_latency_latency_proto_rawDescGZIP(), []int{4}
}

func (x *IpResponse) GetIpv4() string {
	if x != nil {
		return x.Ipv4
	}
	return ""
}

func (x *IpResponse) GetIpv6() string {
	if x != nil {
		return x.Ipv6
	}
	return ""
}

type Stun struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Tcp  bool   `protobuf:"varint,2,opt,name=tcp,proto3" json:"tcp,omitempty"`
}

func (x *Stun) Reset() {
	*x = Stun{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_latency_latency_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stun) ProtoMessage() {}

func (x *Stun) ProtoReflect() protoreflect.Message {
	mi := &file_node_latency_latency_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stun.ProtoReflect.Descriptor instead.
func (*Stun) Descriptor() ([]byte, []int) {
	return file_node_latency_latency_proto_rawDescGZIP(), []int{5}
}

func (x *Stun) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Stun) GetTcp() bool {
	if x != nil {
		return x.Tcp
	}
	return false
}

type StunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	XorMappedAddress      string  `protobuf:"bytes,1,opt,name=xor_mapped_address,proto3" json:"xor_mapped_address,omitempty"`
	MappedAddress         string  `protobuf:"bytes,2,opt,name=mapped_address,proto3" json:"mapped_address,omitempty"`
	OtherAddress          string  `protobuf:"bytes,3,opt,name=other_address,proto3" json:"other_address,omitempty"`
	ResponseOriginAddress string  `protobuf:"bytes,4,opt,name=response_origin_address,proto3" json:"response_origin_address,omitempty"`
	Software              string  `protobuf:"bytes,5,opt,name=Software,proto3" json:"Software,omitempty"`
	Mapping               NatType `protobuf:"varint,6,opt,name=Mapping,json=mapping,proto3,enum=yuhaiin.latency.NatType" json:"Mapping,omitempty"`
	Filtering             NatType `protobuf:"varint,7,opt,name=Filtering,json=filtering,proto3,enum=yuhaiin.latency.NatType" json:"Filtering,omitempty"`
}

func (x *StunResponse) Reset() {
	*x = StunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_latency_latency_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StunResponse) ProtoMessage() {}

func (x *StunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_latency_latency_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StunResponse.ProtoReflect.Descriptor instead.
func (*StunResponse) Descriptor() ([]byte, []int) {
	return file_node_latency_latency_proto_rawDescGZIP(), []int{6}
}

func (x *StunResponse) GetXorMappedAddress() string {
	if x != nil {
		return x.XorMappedAddress
	}
	return ""
}

func (x *StunResponse) GetMappedAddress() string {
	if x != nil {
		return x.MappedAddress
	}
	return ""
}

func (x *StunResponse) GetOtherAddress() string {
	if x != nil {
		return x.OtherAddress
	}
	return ""
}

func (x *StunResponse) GetResponseOriginAddress() string {
	if x != nil {
		return x.ResponseOriginAddress
	}
	return ""
}

func (x *StunResponse) GetSoftware() string {
	if x != nil {
		return x.Software
	}
	return ""
}

func (x *StunResponse) GetMapping() NatType {
	if x != nil {
		return x.Mapping
	}
	return NatType_NAT_UNKNOWN
}

func (x *StunResponse) GetFiltering() NatType {
	if x != nil {
		return x.Filtering
	}
	return NatType_NAT_UNKNOWN
}

type Protocol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Protocol:
	//
	//	*Protocol_Http
	//	*Protocol_Dns
	//	*Protocol_DnsOverQuic
	//	*Protocol_Ip
	//	*Protocol_Stun
	Protocol isProtocol_Protocol `protobuf_oneof:"protocol"`
}

func (x *Protocol) Reset() {
	*x = Protocol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_latency_latency_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Protocol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Protocol) ProtoMessage() {}

func (x *Protocol) ProtoReflect() protoreflect.Message {
	mi := &file_node_latency_latency_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Protocol.ProtoReflect.Descriptor instead.
func (*Protocol) Descriptor() ([]byte, []int) {
	return file_node_latency_latency_proto_rawDescGZIP(), []int{7}
}

func (m *Protocol) GetProtocol() isProtocol_Protocol {
	if m != nil {
		return m.Protocol
	}
	return nil
}

func (x *Protocol) GetHttp() *Http {
	if x, ok := x.GetProtocol().(*Protocol_Http); ok {
		return x.Http
	}
	return nil
}

func (x *Protocol) GetDns() *Dns {
	if x, ok := x.GetProtocol().(*Protocol_Dns); ok {
		return x.Dns
	}
	return nil
}

func (x *Protocol) GetDnsOverQuic() *DnsOverQuic {
	if x, ok := x.GetProtocol().(*Protocol_DnsOverQuic); ok {
		return x.DnsOverQuic
	}
	return nil
}

func (x *Protocol) GetIp() *Ip {
	if x, ok := x.GetProtocol().(*Protocol_Ip); ok {
		return x.Ip
	}
	return nil
}

func (x *Protocol) GetStun() *Stun {
	if x, ok := x.GetProtocol().(*Protocol_Stun); ok {
		return x.Stun
	}
	return nil
}

type isProtocol_Protocol interface {
	isProtocol_Protocol()
}

type Protocol_Http struct {
	Http *Http `protobuf:"bytes,1,opt,name=http,proto3,oneof"`
}

type Protocol_Dns struct {
	Dns *Dns `protobuf:"bytes,2,opt,name=dns,proto3,oneof"`
}

type Protocol_DnsOverQuic struct {
	DnsOverQuic *DnsOverQuic `protobuf:"bytes,3,opt,name=dns_over_quic,proto3,oneof"`
}

type Protocol_Ip struct {
	Ip *Ip `protobuf:"bytes,4,opt,name=ip,proto3,oneof"`
}

type Protocol_Stun struct {
	Stun *Stun `protobuf:"bytes,5,opt,name=stun,proto3,oneof"`
}

func (*Protocol_Http) isProtocol_Protocol() {}

func (*Protocol_Dns) isProtocol_Protocol() {}

func (*Protocol_DnsOverQuic) isProtocol_Protocol() {}

func (*Protocol_Ip) isProtocol_Protocol() {}

func (*Protocol_Stun) isProtocol_Protocol() {}

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string    `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Hash     string    `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Ipv6     bool      `protobuf:"varint,4,opt,name=ipv6,proto3" json:"ipv6,omitempty"`
	Protocol *Protocol `protobuf:"bytes,2,opt,name=protocol,proto3" json:"protocol,omitempty"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_latency_latency_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_node_latency_latency_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_node_latency_latency_proto_rawDescGZIP(), []int{8}
}

func (x *Request) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Request) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *Request) GetIpv6() bool {
	if x != nil {
		return x.Ipv6
	}
	return false
}

func (x *Request) GetProtocol() *Protocol {
	if x != nil {
		return x.Protocol
	}
	return nil
}

type Requests struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requests []*Request `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *Requests) Reset() {
	*x = Requests{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_latency_latency_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Requests) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Requests) ProtoMessage() {}

func (x *Requests) ProtoReflect() protoreflect.Message {
	mi := &file_node_latency_latency_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Requests.ProtoReflect.Descriptor instead.
func (*Requests) Descriptor() ([]byte, []int) {
	return file_node_latency_latency_proto_rawDescGZIP(), []int{9}
}

func (x *Requests) GetRequests() []*Request {
	if x != nil {
		return x.Requests
	}
	return nil
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdLatencyMap map[string]*Reply `protobuf:"bytes,1,rep,name=id_latency_map,proto3" json:"id_latency_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_latency_latency_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_node_latency_latency_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_node_latency_latency_proto_rawDescGZIP(), []int{10}
}

func (x *Response) GetIdLatencyMap() map[string]*Reply {
	if x != nil {
		return x.IdLatencyMap
	}
	return nil
}

type Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Reply:
	//
	//	*Reply_Latency
	//	*Reply_Ip
	//	*Reply_Stun
	Reply isReply_Reply `protobuf_oneof:"reply"`
}

func (x *Reply) Reset() {
	*x = Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_latency_latency_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reply) ProtoMessage() {}

func (x *Reply) ProtoReflect() protoreflect.Message {
	mi := &file_node_latency_latency_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reply.ProtoReflect.Descriptor instead.
func (*Reply) Descriptor() ([]byte, []int) {
	return file_node_latency_latency_proto_rawDescGZIP(), []int{11}
}

func (m *Reply) GetReply() isReply_Reply {
	if m != nil {
		return m.Reply
	}
	return nil
}

func (x *Reply) GetLatency() *durationpb.Duration {
	if x, ok := x.GetReply().(*Reply_Latency); ok {
		return x.Latency
	}
	return nil
}

func (x *Reply) GetIp() *IpResponse {
	if x, ok := x.GetReply().(*Reply_Ip); ok {
		return x.Ip
	}
	return nil
}

func (x *Reply) GetStun() *StunResponse {
	if x, ok := x.GetReply().(*Reply_Stun); ok {
		return x.Stun
	}
	return nil
}

type isReply_Reply interface {
	isReply_Reply()
}

type Reply_Latency struct {
	Latency *durationpb.Duration `protobuf:"bytes,1,opt,name=latency,proto3,oneof"`
}

type Reply_Ip struct {
	Ip *IpResponse `protobuf:"bytes,2,opt,name=ip,proto3,oneof"`
}

type Reply_Stun struct {
	Stun *StunResponse `protobuf:"bytes,3,opt,name=stun,proto3,oneof"`
}

func (*Reply_Latency) isReply_Reply() {}

func (*Reply_Ip) isReply_Reply() {}

func (*Reply_Stun) isReply_Reply() {}

var File_node_latency_latency_proto protoreflect.FileDescriptor

var file_node_latency_latency_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x2f, 0x6c,
	0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x79, 0x75,
	0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x1a, 0x1e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x18, 0x0a,
	0x04, 0x68, 0x74, 0x74, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x3d, 0x0a, 0x03, 0x64, 0x6e, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f,
	0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x47, 0x0a, 0x0d, 0x64, 0x6e, 0x73, 0x5f, 0x6f, 0x76,
	0x65, 0x72, 0x5f, 0x71, 0x75, 0x69, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x36, 0x0a, 0x02, 0x69, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x22, 0x35, 0x0a, 0x0b, 0x69, 0x70, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x70, 0x76, 0x34, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x70, 0x76, 0x34, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x70,
	0x76, 0x36, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x70, 0x76, 0x36, 0x22, 0x2c,
	0x0a, 0x04, 0x73, 0x74, 0x75, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x63,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x74, 0x63, 0x70, 0x22, 0xd1, 0x02, 0x0a,
	0x0d, 0x73, 0x74, 0x75, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e,
	0x0a, 0x12, 0x78, 0x6f, 0x72, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x78, 0x6f, 0x72, 0x5f,
	0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x26,
	0x0a, 0x0e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f,
	0x74, 0x68, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x38, 0x0a, 0x17,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61,
	0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61,
	0x72, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e, 0x6c, 0x61,
	0x74, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x6e, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x07,
	0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x37, 0x0a, 0x09, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x79, 0x75, 0x68,
	0x61, 0x69, 0x69, 0x6e, 0x2e, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x6e, 0x61, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x69, 0x6e, 0x67,
	0x22, 0x89, 0x02, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x2b, 0x0a,
	0x04, 0x68, 0x74, 0x74, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x79, 0x75,
	0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x68, 0x74,
	0x74, 0x70, 0x48, 0x00, 0x52, 0x04, 0x68, 0x74, 0x74, 0x70, 0x12, 0x28, 0x0a, 0x03, 0x64, 0x6e,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69,
	0x6e, 0x2e, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x64, 0x6e, 0x73, 0x48, 0x00, 0x52,
	0x03, 0x64, 0x6e, 0x73, 0x12, 0x46, 0x0a, 0x0d, 0x64, 0x6e, 0x73, 0x5f, 0x6f, 0x76, 0x65, 0x72,
	0x5f, 0x71, 0x75, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x79, 0x75,
	0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x64, 0x6e,
	0x73, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x71, 0x75, 0x69, 0x63, 0x48, 0x00, 0x52, 0x0d, 0x64,
	0x6e, 0x73, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x71, 0x75, 0x69, 0x63, 0x12, 0x25, 0x0a, 0x02,
	0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69,
	0x69, 0x6e, 0x2e, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x69, 0x70, 0x48, 0x00, 0x52,
	0x02, 0x69, 0x70, 0x12, 0x2b, 0x0a, 0x04, 0x73, 0x74, 0x75, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e, 0x6c, 0x61, 0x74, 0x65,
	0x6e, 0x63, 0x79, 0x2e, 0x73, 0x74, 0x75, 0x6e, 0x48, 0x00, 0x52, 0x04, 0x73, 0x74, 0x75, 0x6e,
	0x42, 0x0a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x22, 0x78, 0x0a, 0x07,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x69,
	0x70, 0x76, 0x36, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x69, 0x70, 0x76, 0x36, 0x12,
	0x35, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e, 0x6c, 0x61, 0x74, 0x65,
	0x6e, 0x63, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x22, 0x40, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x12, 0x34, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e, 0x6c,
	0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0xb8, 0x01, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0e, 0x69, 0x64, 0x5f, 0x6c, 0x61, 0x74, 0x65,
	0x6e, 0x63, 0x79, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x2e,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x64, 0x4c, 0x61, 0x74, 0x65, 0x6e,
	0x63, 0x79, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x69, 0x64, 0x5f, 0x6c,
	0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x6d, 0x61, 0x70, 0x1a, 0x57, 0x0a, 0x11, 0x49, 0x64,
	0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e, 0x6c, 0x61, 0x74, 0x65, 0x6e,
	0x63, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0xad, 0x01, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x35, 0x0a,
	0x07, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x07, 0x6c, 0x61, 0x74,
	0x65, 0x6e, 0x63, 0x79, 0x12, 0x2e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e, 0x6c, 0x61, 0x74, 0x65, 0x6e,
	0x63, 0x79, 0x2e, 0x69, 0x70, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x02, 0x69, 0x70, 0x12, 0x34, 0x0a, 0x04, 0x73, 0x74, 0x75, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e, 0x6c, 0x61, 0x74,
	0x65, 0x6e, 0x63, 0x79, 0x2e, 0x73, 0x74, 0x75, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x04, 0x73, 0x74, 0x75, 0x6e, 0x42, 0x07, 0x0a, 0x05, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x2a, 0xcc, 0x01, 0x0a, 0x08, 0x6e, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x41, 0x54, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x00, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x41, 0x54, 0x5f, 0x4e, 0x4f, 0x5f, 0x52, 0x45, 0x53, 0x55,
	0x4c, 0x54, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c, 0x4e, 0x41, 0x54, 0x5f, 0x45, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x4e,
	0x6f, 0x4e, 0x41, 0x54, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x4e, 0x41, 0x54, 0x5f, 0x45, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e,
	0x74, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x4e, 0x41, 0x54, 0x5f, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x10, 0x04, 0x12, 0x1f, 0x0a,
	0x1b, 0x4e, 0x41, 0x54, 0x5f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x41, 0x6e, 0x64, 0x50,
	0x6f, 0x72, 0x74, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x10, 0x05, 0x12, 0x22,
	0x0a, 0x1e, 0x4e, 0x41, 0x54, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x53,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x6f, 0x72, 0x74,
	0x10, 0x06, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x41, 0x73, 0x75, 0x74, 0x6f, 0x72, 0x75, 0x66, 0x61, 0x2f, 0x79, 0x75, 0x68, 0x61, 0x69,
	0x69, 0x6e, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6e, 0x6f,
	0x64, 0x65, 0x2f, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_node_latency_latency_proto_rawDescOnce sync.Once
	file_node_latency_latency_proto_rawDescData = file_node_latency_latency_proto_rawDesc
)

func file_node_latency_latency_proto_rawDescGZIP() []byte {
	file_node_latency_latency_proto_rawDescOnce.Do(func() {
		file_node_latency_latency_proto_rawDescData = protoimpl.X.CompressGZIP(file_node_latency_latency_proto_rawDescData)
	})
	return file_node_latency_latency_proto_rawDescData
}

var file_node_latency_latency_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_node_latency_latency_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_node_latency_latency_proto_goTypes = []any{
	(NatType)(0),                // 0: yuhaiin.latency.nat_type
	(*Http)(nil),                // 1: yuhaiin.latency.http
	(*Dns)(nil),                 // 2: yuhaiin.latency.dns
	(*DnsOverQuic)(nil),         // 3: yuhaiin.latency.dns_over_quic
	(*Ip)(nil),                  // 4: yuhaiin.latency.ip
	(*IpResponse)(nil),          // 5: yuhaiin.latency.ip_response
	(*Stun)(nil),                // 6: yuhaiin.latency.stun
	(*StunResponse)(nil),        // 7: yuhaiin.latency.stun_response
	(*Protocol)(nil),            // 8: yuhaiin.latency.protocol
	(*Request)(nil),             // 9: yuhaiin.latency.request
	(*Requests)(nil),            // 10: yuhaiin.latency.requests
	(*Response)(nil),            // 11: yuhaiin.latency.response
	(*Reply)(nil),               // 12: yuhaiin.latency.reply
	nil,                         // 13: yuhaiin.latency.response.IdLatencyMapEntry
	(*durationpb.Duration)(nil), // 14: google.protobuf.Duration
}
var file_node_latency_latency_proto_depIdxs = []int32{
	0,  // 0: yuhaiin.latency.stun_response.Mapping:type_name -> yuhaiin.latency.nat_type
	0,  // 1: yuhaiin.latency.stun_response.Filtering:type_name -> yuhaiin.latency.nat_type
	1,  // 2: yuhaiin.latency.protocol.http:type_name -> yuhaiin.latency.http
	2,  // 3: yuhaiin.latency.protocol.dns:type_name -> yuhaiin.latency.dns
	3,  // 4: yuhaiin.latency.protocol.dns_over_quic:type_name -> yuhaiin.latency.dns_over_quic
	4,  // 5: yuhaiin.latency.protocol.ip:type_name -> yuhaiin.latency.ip
	6,  // 6: yuhaiin.latency.protocol.stun:type_name -> yuhaiin.latency.stun
	8,  // 7: yuhaiin.latency.request.protocol:type_name -> yuhaiin.latency.protocol
	9,  // 8: yuhaiin.latency.requests.requests:type_name -> yuhaiin.latency.request
	13, // 9: yuhaiin.latency.response.id_latency_map:type_name -> yuhaiin.latency.response.IdLatencyMapEntry
	14, // 10: yuhaiin.latency.reply.latency:type_name -> google.protobuf.Duration
	5,  // 11: yuhaiin.latency.reply.ip:type_name -> yuhaiin.latency.ip_response
	7,  // 12: yuhaiin.latency.reply.stun:type_name -> yuhaiin.latency.stun_response
	12, // 13: yuhaiin.latency.response.IdLatencyMapEntry.value:type_name -> yuhaiin.latency.reply
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_node_latency_latency_proto_init() }
func file_node_latency_latency_proto_init() {
	if File_node_latency_latency_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_node_latency_latency_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Http); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_latency_latency_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Dns); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_latency_latency_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*DnsOverQuic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_latency_latency_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Ip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_latency_latency_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*IpResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_latency_latency_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Stun); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_latency_latency_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*StunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_latency_latency_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*Protocol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_latency_latency_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_latency_latency_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*Requests); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_latency_latency_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_latency_latency_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_node_latency_latency_proto_msgTypes[7].OneofWrappers = []any{
		(*Protocol_Http)(nil),
		(*Protocol_Dns)(nil),
		(*Protocol_DnsOverQuic)(nil),
		(*Protocol_Ip)(nil),
		(*Protocol_Stun)(nil),
	}
	file_node_latency_latency_proto_msgTypes[11].OneofWrappers = []any{
		(*Reply_Latency)(nil),
		(*Reply_Ip)(nil),
		(*Reply_Stun)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_node_latency_latency_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_node_latency_latency_proto_goTypes,
		DependencyIndexes: file_node_latency_latency_proto_depIdxs,
		EnumInfos:         file_node_latency_latency_proto_enumTypes,
		MessageInfos:      file_node_latency_latency_proto_msgTypes,
	}.Build()
	File_node_latency_latency_proto = out.File
	file_node_latency_latency_proto_rawDesc = nil
	file_node_latency_latency_proto_goTypes = nil
	file_node_latency_latency_proto_depIdxs = nil
}
