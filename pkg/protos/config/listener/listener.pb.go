// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: config/listener/listener.proto

package listener

import (
	protocol "github.com/Asutorufa/yuhaiin/pkg/protos/node/protocol"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TcpUdpControl int32

const (
	TcpUdpControl_tcp_udp_control_all TcpUdpControl = 0
	TcpUdpControl_disable_tcp         TcpUdpControl = 1
	TcpUdpControl_disable_udp         TcpUdpControl = 2
)

// Enum value maps for TcpUdpControl.
var (
	TcpUdpControl_name = map[int32]string{
		0: "tcp_udp_control_all",
		1: "disable_tcp",
		2: "disable_udp",
	}
	TcpUdpControl_value = map[string]int32{
		"tcp_udp_control_all": 0,
		"disable_tcp":         1,
		"disable_udp":         2,
	}
)

func (x TcpUdpControl) Enum() *TcpUdpControl {
	p := new(TcpUdpControl)
	*p = x
	return p
}

func (x TcpUdpControl) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TcpUdpControl) Descriptor() protoreflect.EnumDescriptor {
	return file_config_listener_listener_proto_enumTypes[0].Descriptor()
}

func (TcpUdpControl) Type() protoreflect.EnumType {
	return &file_config_listener_listener_proto_enumTypes[0]
}

func (x TcpUdpControl) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type TunEndpointDriver int32

const (
	Tun_fdbased       TunEndpointDriver = 0
	Tun_channel       TunEndpointDriver = 1
	Tun_system_gvisor TunEndpointDriver = 2
)

// Enum value maps for TunEndpointDriver.
var (
	TunEndpointDriver_name = map[int32]string{
		0: "fdbased",
		1: "channel",
		2: "system_gvisor",
	}
	TunEndpointDriver_value = map[string]int32{
		"fdbased":       0,
		"channel":       1,
		"system_gvisor": 2,
	}
)

func (x TunEndpointDriver) Enum() *TunEndpointDriver {
	p := new(TunEndpointDriver)
	*p = x
	return p
}

func (x TunEndpointDriver) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TunEndpointDriver) Descriptor() protoreflect.EnumDescriptor {
	return file_config_listener_listener_proto_enumTypes[1].Descriptor()
}

func (TunEndpointDriver) Type() protoreflect.EnumType {
	return &file_config_listener_listener_proto_enumTypes[1]
}

func (x TunEndpointDriver) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type InboundConfig struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_HijackDns       bool                   `protobuf:"varint,2,opt,name=hijack_dns"`
	xxx_hidden_HijackDnsFakeip bool                   `protobuf:"varint,3,opt,name=hijack_dns_fakeip"`
	xxx_hidden_Inbounds        map[string]*Inbound    `protobuf:"bytes,1,rep,name=inbounds" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Sniff           *Sniff                 `protobuf:"bytes,4,opt,name=sniff"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *InboundConfig) Reset() {
	*x = InboundConfig{}
	mi := &file_config_listener_listener_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InboundConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InboundConfig) ProtoMessage() {}

func (x *InboundConfig) ProtoReflect() protoreflect.Message {
	mi := &file_config_listener_listener_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *InboundConfig) GetHijackDns() bool {
	if x != nil {
		return x.xxx_hidden_HijackDns
	}
	return false
}

func (x *InboundConfig) GetHijackDnsFakeip() bool {
	if x != nil {
		return x.xxx_hidden_HijackDnsFakeip
	}
	return false
}

func (x *InboundConfig) GetInbounds() map[string]*Inbound {
	if x != nil {
		return x.xxx_hidden_Inbounds
	}
	return nil
}

func (x *InboundConfig) GetSniff() *Sniff {
	if x != nil {
		return x.xxx_hidden_Sniff
	}
	return nil
}

func (x *InboundConfig) SetHijackDns(v bool) {
	x.xxx_hidden_HijackDns = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *InboundConfig) SetHijackDnsFakeip(v bool) {
	x.xxx_hidden_HijackDnsFakeip = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *InboundConfig) SetInbounds(v map[string]*Inbound) {
	x.xxx_hidden_Inbounds = v
}

func (x *InboundConfig) SetSniff(v *Sniff) {
	x.xxx_hidden_Sniff = v
}

func (x *InboundConfig) HasHijackDns() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *InboundConfig) HasHijackDnsFakeip() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *InboundConfig) HasSniff() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Sniff != nil
}

func (x *InboundConfig) ClearHijackDns() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_HijackDns = false
}

func (x *InboundConfig) ClearHijackDnsFakeip() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_HijackDnsFakeip = false
}

func (x *InboundConfig) ClearSniff() {
	x.xxx_hidden_Sniff = nil
}

type InboundConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	HijackDns       *bool
	HijackDnsFakeip *bool
	Inbounds        map[string]*Inbound
	Sniff           *Sniff
}

func (b0 InboundConfig_builder) Build() *InboundConfig {
	m0 := &InboundConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.HijackDns != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_HijackDns = *b.HijackDns
	}
	if b.HijackDnsFakeip != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_HijackDnsFakeip = *b.HijackDnsFakeip
	}
	x.xxx_hidden_Inbounds = b.Inbounds
	x.xxx_hidden_Sniff = b.Sniff
	return m0
}

type Inbound struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,13,opt,name=name"`
	xxx_hidden_Enabled     bool                   `protobuf:"varint,14,opt,name=enabled"`
	xxx_hidden_Network     isInbound_Network      `protobuf_oneof:"network"`
	xxx_hidden_Transport   *[]*Transport          `protobuf:"bytes,2,rep,name=transport"`
	xxx_hidden_Protocol    isInbound_Protocol     `protobuf_oneof:"protocol"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Inbound) Reset() {
	*x = Inbound{}
	mi := &file_config_listener_listener_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Inbound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Inbound) ProtoMessage() {}

func (x *Inbound) ProtoReflect() protoreflect.Message {
	mi := &file_config_listener_listener_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Inbound) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Inbound) GetEnabled() bool {
	if x != nil {
		return x.xxx_hidden_Enabled
	}
	return false
}

func (x *Inbound) GetEmpty() *Empty {
	if x != nil {
		if x, ok := x.xxx_hidden_Network.(*inbound_Empty); ok {
			return x.Empty
		}
	}
	return nil
}

func (x *Inbound) GetTcpudp() *Tcpudp {
	if x != nil {
		if x, ok := x.xxx_hidden_Network.(*inbound_Tcpudp); ok {
			return x.Tcpudp
		}
	}
	return nil
}

func (x *Inbound) GetQuic() *Quic {
	if x != nil {
		if x, ok := x.xxx_hidden_Network.(*inbound_Quic); ok {
			return x.Quic
		}
	}
	return nil
}

func (x *Inbound) GetTransport() []*Transport {
	if x != nil {
		if x.xxx_hidden_Transport != nil {
			return *x.xxx_hidden_Transport
		}
	}
	return nil
}

func (x *Inbound) GetHttp() *Http {
	if x != nil {
		if x, ok := x.xxx_hidden_Protocol.(*inbound_Http); ok {
			return x.Http
		}
	}
	return nil
}

func (x *Inbound) GetSocks5() *Socks5 {
	if x != nil {
		if x, ok := x.xxx_hidden_Protocol.(*inbound_Socks5); ok {
			return x.Socks5
		}
	}
	return nil
}

func (x *Inbound) GetYuubinsya() *Yuubinsya {
	if x != nil {
		if x, ok := x.xxx_hidden_Protocol.(*inbound_Yuubinsya); ok {
			return x.Yuubinsya
		}
	}
	return nil
}

func (x *Inbound) GetMix() *Mixed {
	if x != nil {
		if x, ok := x.xxx_hidden_Protocol.(*inbound_Mix); ok {
			return x.Mix
		}
	}
	return nil
}

func (x *Inbound) GetSocks4A() *Socks4A {
	if x != nil {
		if x, ok := x.xxx_hidden_Protocol.(*inbound_Socks4A); ok {
			return x.Socks4A
		}
	}
	return nil
}

func (x *Inbound) GetTproxy() *Tproxy {
	if x != nil {
		if x, ok := x.xxx_hidden_Protocol.(*inbound_Tproxy); ok {
			return x.Tproxy
		}
	}
	return nil
}

func (x *Inbound) GetRedir() *Redir {
	if x != nil {
		if x, ok := x.xxx_hidden_Protocol.(*inbound_Redir); ok {
			return x.Redir
		}
	}
	return nil
}

func (x *Inbound) GetTun() *Tun {
	if x != nil {
		if x, ok := x.xxx_hidden_Protocol.(*inbound_Tun); ok {
			return x.Tun
		}
	}
	return nil
}

func (x *Inbound) GetReverseHttp() *ReverseHttp {
	if x != nil {
		if x, ok := x.xxx_hidden_Protocol.(*inbound_ReverseHttp); ok {
			return x.ReverseHttp
		}
	}
	return nil
}

func (x *Inbound) GetReverseTcp() *ReverseTcp {
	if x != nil {
		if x, ok := x.xxx_hidden_Protocol.(*inbound_ReverseTcp); ok {
			return x.ReverseTcp
		}
	}
	return nil
}

func (x *Inbound) GetNone() *Empty {
	if x != nil {
		if x, ok := x.xxx_hidden_Protocol.(*inbound_None); ok {
			return x.None
		}
	}
	return nil
}

func (x *Inbound) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *Inbound) SetEnabled(v bool) {
	x.xxx_hidden_Enabled = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *Inbound) SetEmpty(v *Empty) {
	if v == nil {
		x.xxx_hidden_Network = nil
		return
	}
	x.xxx_hidden_Network = &inbound_Empty{v}
}

func (x *Inbound) SetTcpudp(v *Tcpudp) {
	if v == nil {
		x.xxx_hidden_Network = nil
		return
	}
	x.xxx_hidden_Network = &inbound_Tcpudp{v}
}

func (x *Inbound) SetQuic(v *Quic) {
	if v == nil {
		x.xxx_hidden_Network = nil
		return
	}
	x.xxx_hidden_Network = &inbound_Quic{v}
}

func (x *Inbound) SetTransport(v []*Transport) {
	x.xxx_hidden_Transport = &v
}

func (x *Inbound) SetHttp(v *Http) {
	if v == nil {
		x.xxx_hidden_Protocol = nil
		return
	}
	x.xxx_hidden_Protocol = &inbound_Http{v}
}

func (x *Inbound) SetSocks5(v *Socks5) {
	if v == nil {
		x.xxx_hidden_Protocol = nil
		return
	}
	x.xxx_hidden_Protocol = &inbound_Socks5{v}
}

func (x *Inbound) SetYuubinsya(v *Yuubinsya) {
	if v == nil {
		x.xxx_hidden_Protocol = nil
		return
	}
	x.xxx_hidden_Protocol = &inbound_Yuubinsya{v}
}

func (x *Inbound) SetMix(v *Mixed) {
	if v == nil {
		x.xxx_hidden_Protocol = nil
		return
	}
	x.xxx_hidden_Protocol = &inbound_Mix{v}
}

func (x *Inbound) SetSocks4A(v *Socks4A) {
	if v == nil {
		x.xxx_hidden_Protocol = nil
		return
	}
	x.xxx_hidden_Protocol = &inbound_Socks4A{v}
}

func (x *Inbound) SetTproxy(v *Tproxy) {
	if v == nil {
		x.xxx_hidden_Protocol = nil
		return
	}
	x.xxx_hidden_Protocol = &inbound_Tproxy{v}
}

func (x *Inbound) SetRedir(v *Redir) {
	if v == nil {
		x.xxx_hidden_Protocol = nil
		return
	}
	x.xxx_hidden_Protocol = &inbound_Redir{v}
}

func (x *Inbound) SetTun(v *Tun) {
	if v == nil {
		x.xxx_hidden_Protocol = nil
		return
	}
	x.xxx_hidden_Protocol = &inbound_Tun{v}
}

func (x *Inbound) SetReverseHttp(v *ReverseHttp) {
	if v == nil {
		x.xxx_hidden_Protocol = nil
		return
	}
	x.xxx_hidden_Protocol = &inbound_ReverseHttp{v}
}

func (x *Inbound) SetReverseTcp(v *ReverseTcp) {
	if v == nil {
		x.xxx_hidden_Protocol = nil
		return
	}
	x.xxx_hidden_Protocol = &inbound_ReverseTcp{v}
}

func (x *Inbound) SetNone(v *Empty) {
	if v == nil {
		x.xxx_hidden_Protocol = nil
		return
	}
	x.xxx_hidden_Protocol = &inbound_None{v}
}

func (x *Inbound) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Inbound) HasEnabled() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Inbound) HasNetwork() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Network != nil
}

func (x *Inbound) HasEmpty() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Network.(*inbound_Empty)
	return ok
}

func (x *Inbound) HasTcpudp() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Network.(*inbound_Tcpudp)
	return ok
}

func (x *Inbound) HasQuic() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Network.(*inbound_Quic)
	return ok
}

func (x *Inbound) HasProtocol() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Protocol != nil
}

func (x *Inbound) HasHttp() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Protocol.(*inbound_Http)
	return ok
}

func (x *Inbound) HasSocks5() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Protocol.(*inbound_Socks5)
	return ok
}

func (x *Inbound) HasYuubinsya() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Protocol.(*inbound_Yuubinsya)
	return ok
}

func (x *Inbound) HasMix() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Protocol.(*inbound_Mix)
	return ok
}

func (x *Inbound) HasSocks4A() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Protocol.(*inbound_Socks4A)
	return ok
}

func (x *Inbound) HasTproxy() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Protocol.(*inbound_Tproxy)
	return ok
}

func (x *Inbound) HasRedir() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Protocol.(*inbound_Redir)
	return ok
}

func (x *Inbound) HasTun() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Protocol.(*inbound_Tun)
	return ok
}

func (x *Inbound) HasReverseHttp() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Protocol.(*inbound_ReverseHttp)
	return ok
}

func (x *Inbound) HasReverseTcp() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Protocol.(*inbound_ReverseTcp)
	return ok
}

func (x *Inbound) HasNone() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Protocol.(*inbound_None)
	return ok
}

func (x *Inbound) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *Inbound) ClearEnabled() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Enabled = false
}

func (x *Inbound) ClearNetwork() {
	x.xxx_hidden_Network = nil
}

func (x *Inbound) ClearEmpty() {
	if _, ok := x.xxx_hidden_Network.(*inbound_Empty); ok {
		x.xxx_hidden_Network = nil
	}
}

func (x *Inbound) ClearTcpudp() {
	if _, ok := x.xxx_hidden_Network.(*inbound_Tcpudp); ok {
		x.xxx_hidden_Network = nil
	}
}

func (x *Inbound) ClearQuic() {
	if _, ok := x.xxx_hidden_Network.(*inbound_Quic); ok {
		x.xxx_hidden_Network = nil
	}
}

func (x *Inbound) ClearProtocol() {
	x.xxx_hidden_Protocol = nil
}

func (x *Inbound) ClearHttp() {
	if _, ok := x.xxx_hidden_Protocol.(*inbound_Http); ok {
		x.xxx_hidden_Protocol = nil
	}
}

func (x *Inbound) ClearSocks5() {
	if _, ok := x.xxx_hidden_Protocol.(*inbound_Socks5); ok {
		x.xxx_hidden_Protocol = nil
	}
}

func (x *Inbound) ClearYuubinsya() {
	if _, ok := x.xxx_hidden_Protocol.(*inbound_Yuubinsya); ok {
		x.xxx_hidden_Protocol = nil
	}
}

func (x *Inbound) ClearMix() {
	if _, ok := x.xxx_hidden_Protocol.(*inbound_Mix); ok {
		x.xxx_hidden_Protocol = nil
	}
}

func (x *Inbound) ClearSocks4A() {
	if _, ok := x.xxx_hidden_Protocol.(*inbound_Socks4A); ok {
		x.xxx_hidden_Protocol = nil
	}
}

func (x *Inbound) ClearTproxy() {
	if _, ok := x.xxx_hidden_Protocol.(*inbound_Tproxy); ok {
		x.xxx_hidden_Protocol = nil
	}
}

func (x *Inbound) ClearRedir() {
	if _, ok := x.xxx_hidden_Protocol.(*inbound_Redir); ok {
		x.xxx_hidden_Protocol = nil
	}
}

func (x *Inbound) ClearTun() {
	if _, ok := x.xxx_hidden_Protocol.(*inbound_Tun); ok {
		x.xxx_hidden_Protocol = nil
	}
}

func (x *Inbound) ClearReverseHttp() {
	if _, ok := x.xxx_hidden_Protocol.(*inbound_ReverseHttp); ok {
		x.xxx_hidden_Protocol = nil
	}
}

func (x *Inbound) ClearReverseTcp() {
	if _, ok := x.xxx_hidden_Protocol.(*inbound_ReverseTcp); ok {
		x.xxx_hidden_Protocol = nil
	}
}

func (x *Inbound) ClearNone() {
	if _, ok := x.xxx_hidden_Protocol.(*inbound_None); ok {
		x.xxx_hidden_Protocol = nil
	}
}

const Inbound_Network_not_set_case case_Inbound_Network = 0
const Inbound_Empty_case case_Inbound_Network = 21
const Inbound_Tcpudp_case case_Inbound_Network = 15
const Inbound_Quic_case case_Inbound_Network = 16

func (x *Inbound) WhichNetwork() case_Inbound_Network {
	if x == nil {
		return Inbound_Network_not_set_case
	}
	switch x.xxx_hidden_Network.(type) {
	case *inbound_Empty:
		return Inbound_Empty_case
	case *inbound_Tcpudp:
		return Inbound_Tcpudp_case
	case *inbound_Quic:
		return Inbound_Quic_case
	default:
		return Inbound_Network_not_set_case
	}
}

const Inbound_Protocol_not_set_case case_Inbound_Protocol = 0
const Inbound_Http_case case_Inbound_Protocol = 3
const Inbound_Socks5_case case_Inbound_Protocol = 4
const Inbound_Yuubinsya_case case_Inbound_Protocol = 7
const Inbound_Mix_case case_Inbound_Protocol = 8
const Inbound_Socks4A_case case_Inbound_Protocol = 9
const Inbound_Tproxy_case case_Inbound_Protocol = 20
const Inbound_Redir_case case_Inbound_Protocol = 18
const Inbound_Tun_case case_Inbound_Protocol = 19
const Inbound_ReverseHttp_case case_Inbound_Protocol = 22
const Inbound_ReverseTcp_case case_Inbound_Protocol = 23
const Inbound_None_case case_Inbound_Protocol = 24

func (x *Inbound) WhichProtocol() case_Inbound_Protocol {
	if x == nil {
		return Inbound_Protocol_not_set_case
	}
	switch x.xxx_hidden_Protocol.(type) {
	case *inbound_Http:
		return Inbound_Http_case
	case *inbound_Socks5:
		return Inbound_Socks5_case
	case *inbound_Yuubinsya:
		return Inbound_Yuubinsya_case
	case *inbound_Mix:
		return Inbound_Mix_case
	case *inbound_Socks4A:
		return Inbound_Socks4A_case
	case *inbound_Tproxy:
		return Inbound_Tproxy_case
	case *inbound_Redir:
		return Inbound_Redir_case
	case *inbound_Tun:
		return Inbound_Tun_case
	case *inbound_ReverseHttp:
		return Inbound_ReverseHttp_case
	case *inbound_ReverseTcp:
		return Inbound_ReverseTcp_case
	case *inbound_None:
		return Inbound_None_case
	default:
		return Inbound_Protocol_not_set_case
	}
}

type Inbound_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name    *string
	Enabled *bool
	// Fields of oneof xxx_hidden_Network:
	Empty  *Empty
	Tcpudp *Tcpudp
	Quic   *Quic
	// -- end of xxx_hidden_Network
	Transport []*Transport
	// Fields of oneof xxx_hidden_Protocol:
	Http        *Http
	Socks5      *Socks5
	Yuubinsya   *Yuubinsya
	Mix         *Mixed
	Socks4A     *Socks4A
	Tproxy      *Tproxy
	Redir       *Redir
	Tun         *Tun
	ReverseHttp *ReverseHttp
	ReverseTcp  *ReverseTcp
	None        *Empty
	// -- end of xxx_hidden_Protocol
}

func (b0 Inbound_builder) Build() *Inbound {
	m0 := &Inbound{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_Name = b.Name
	}
	if b.Enabled != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Enabled = *b.Enabled
	}
	if b.Empty != nil {
		x.xxx_hidden_Network = &inbound_Empty{b.Empty}
	}
	if b.Tcpudp != nil {
		x.xxx_hidden_Network = &inbound_Tcpudp{b.Tcpudp}
	}
	if b.Quic != nil {
		x.xxx_hidden_Network = &inbound_Quic{b.Quic}
	}
	x.xxx_hidden_Transport = &b.Transport
	if b.Http != nil {
		x.xxx_hidden_Protocol = &inbound_Http{b.Http}
	}
	if b.Socks5 != nil {
		x.xxx_hidden_Protocol = &inbound_Socks5{b.Socks5}
	}
	if b.Yuubinsya != nil {
		x.xxx_hidden_Protocol = &inbound_Yuubinsya{b.Yuubinsya}
	}
	if b.Mix != nil {
		x.xxx_hidden_Protocol = &inbound_Mix{b.Mix}
	}
	if b.Socks4A != nil {
		x.xxx_hidden_Protocol = &inbound_Socks4A{b.Socks4A}
	}
	if b.Tproxy != nil {
		x.xxx_hidden_Protocol = &inbound_Tproxy{b.Tproxy}
	}
	if b.Redir != nil {
		x.xxx_hidden_Protocol = &inbound_Redir{b.Redir}
	}
	if b.Tun != nil {
		x.xxx_hidden_Protocol = &inbound_Tun{b.Tun}
	}
	if b.ReverseHttp != nil {
		x.xxx_hidden_Protocol = &inbound_ReverseHttp{b.ReverseHttp}
	}
	if b.ReverseTcp != nil {
		x.xxx_hidden_Protocol = &inbound_ReverseTcp{b.ReverseTcp}
	}
	if b.None != nil {
		x.xxx_hidden_Protocol = &inbound_None{b.None}
	}
	return m0
}

type case_Inbound_Network protoreflect.FieldNumber

func (x case_Inbound_Network) String() string {
	md := file_config_listener_listener_proto_msgTypes[1].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type case_Inbound_Protocol protoreflect.FieldNumber

func (x case_Inbound_Protocol) String() string {
	md := file_config_listener_listener_proto_msgTypes[1].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isInbound_Network interface {
	isInbound_Network()
}

type inbound_Empty struct {
	Empty *Empty `protobuf:"bytes,21,opt,name=empty,oneof"`
}

type inbound_Tcpudp struct {
	Tcpudp *Tcpudp `protobuf:"bytes,15,opt,name=tcpudp,oneof"`
}

type inbound_Quic struct {
	Quic *Quic `protobuf:"bytes,16,opt,name=quic,oneof"`
}

func (*inbound_Empty) isInbound_Network() {}

func (*inbound_Tcpudp) isInbound_Network() {}

func (*inbound_Quic) isInbound_Network() {}

type isInbound_Protocol interface {
	isInbound_Protocol()
}

type inbound_Http struct {
	Http *Http `protobuf:"bytes,3,opt,name=http,oneof"`
}

type inbound_Socks5 struct {
	Socks5 *Socks5 `protobuf:"bytes,4,opt,name=socks5,oneof"`
}

type inbound_Yuubinsya struct {
	Yuubinsya *Yuubinsya `protobuf:"bytes,7,opt,name=yuubinsya,oneof"`
}

type inbound_Mix struct {
	Mix *Mixed `protobuf:"bytes,8,opt,name=mix,json=mixed,oneof"`
}

type inbound_Socks4A struct {
	Socks4A *Socks4A `protobuf:"bytes,9,opt,name=socks4a,oneof"`
}

type inbound_Tproxy struct {
	Tproxy *Tproxy `protobuf:"bytes,20,opt,name=tproxy,oneof"`
}

type inbound_Redir struct {
	Redir *Redir `protobuf:"bytes,18,opt,name=redir,oneof"`
}

type inbound_Tun struct {
	Tun *Tun `protobuf:"bytes,19,opt,name=tun,oneof"`
}

type inbound_ReverseHttp struct {
	ReverseHttp *ReverseHttp `protobuf:"bytes,22,opt,name=reverse_http,oneof"`
}

type inbound_ReverseTcp struct {
	ReverseTcp *ReverseTcp `protobuf:"bytes,23,opt,name=reverse_tcp,oneof"`
}

type inbound_None struct {
	None *Empty `protobuf:"bytes,24,opt,name=none,oneof"`
}

func (*inbound_Http) isInbound_Protocol() {}

func (*inbound_Socks5) isInbound_Protocol() {}

func (*inbound_Yuubinsya) isInbound_Protocol() {}

func (*inbound_Mix) isInbound_Protocol() {}

func (*inbound_Socks4A) isInbound_Protocol() {}

func (*inbound_Tproxy) isInbound_Protocol() {}

func (*inbound_Redir) isInbound_Protocol() {}

func (*inbound_Tun) isInbound_Protocol() {}

func (*inbound_ReverseHttp) isInbound_Protocol() {}

func (*inbound_ReverseTcp) isInbound_Protocol() {}

func (*inbound_None) isInbound_Protocol() {}

type Transport struct {
	state                protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Transport isTransport_Transport  `protobuf_oneof:"transport"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *Transport) Reset() {
	*x = Transport{}
	mi := &file_config_listener_listener_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transport) ProtoMessage() {}

func (x *Transport) ProtoReflect() protoreflect.Message {
	mi := &file_config_listener_listener_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Transport) GetNormal() *Normal {
	if x != nil {
		if x, ok := x.xxx_hidden_Transport.(*transport_Normal); ok {
			return x.Normal
		}
	}
	return nil
}

func (x *Transport) GetTls() *Tls {
	if x != nil {
		if x, ok := x.xxx_hidden_Transport.(*transport_Tls); ok {
			return x.Tls
		}
	}
	return nil
}

func (x *Transport) GetMux() *Mux {
	if x != nil {
		if x, ok := x.xxx_hidden_Transport.(*transport_Mux); ok {
			return x.Mux
		}
	}
	return nil
}

func (x *Transport) GetHttp2() *Http2 {
	if x != nil {
		if x, ok := x.xxx_hidden_Transport.(*transport_Http2); ok {
			return x.Http2
		}
	}
	return nil
}

func (x *Transport) GetWebsocket() *Websocket {
	if x != nil {
		if x, ok := x.xxx_hidden_Transport.(*transport_Websocket); ok {
			return x.Websocket
		}
	}
	return nil
}

func (x *Transport) GetGrpc() *Grpc {
	if x != nil {
		if x, ok := x.xxx_hidden_Transport.(*transport_Grpc); ok {
			return x.Grpc
		}
	}
	return nil
}

func (x *Transport) GetReality() *Reality {
	if x != nil {
		if x, ok := x.xxx_hidden_Transport.(*transport_Reality); ok {
			return x.Reality
		}
	}
	return nil
}

func (x *Transport) GetTlsAuto() *TlsAuto {
	if x != nil {
		if x, ok := x.xxx_hidden_Transport.(*transport_TlsAuto); ok {
			return x.TlsAuto
		}
	}
	return nil
}

func (x *Transport) GetHttpMock() *HttpMock {
	if x != nil {
		if x, ok := x.xxx_hidden_Transport.(*transport_HttpMock); ok {
			return x.HttpMock
		}
	}
	return nil
}

func (x *Transport) GetAead() *Aead {
	if x != nil {
		if x, ok := x.xxx_hidden_Transport.(*transport_Aead); ok {
			return x.Aead
		}
	}
	return nil
}

func (x *Transport) SetNormal(v *Normal) {
	if v == nil {
		x.xxx_hidden_Transport = nil
		return
	}
	x.xxx_hidden_Transport = &transport_Normal{v}
}

func (x *Transport) SetTls(v *Tls) {
	if v == nil {
		x.xxx_hidden_Transport = nil
		return
	}
	x.xxx_hidden_Transport = &transport_Tls{v}
}

func (x *Transport) SetMux(v *Mux) {
	if v == nil {
		x.xxx_hidden_Transport = nil
		return
	}
	x.xxx_hidden_Transport = &transport_Mux{v}
}

func (x *Transport) SetHttp2(v *Http2) {
	if v == nil {
		x.xxx_hidden_Transport = nil
		return
	}
	x.xxx_hidden_Transport = &transport_Http2{v}
}

func (x *Transport) SetWebsocket(v *Websocket) {
	if v == nil {
		x.xxx_hidden_Transport = nil
		return
	}
	x.xxx_hidden_Transport = &transport_Websocket{v}
}

func (x *Transport) SetGrpc(v *Grpc) {
	if v == nil {
		x.xxx_hidden_Transport = nil
		return
	}
	x.xxx_hidden_Transport = &transport_Grpc{v}
}

func (x *Transport) SetReality(v *Reality) {
	if v == nil {
		x.xxx_hidden_Transport = nil
		return
	}
	x.xxx_hidden_Transport = &transport_Reality{v}
}

func (x *Transport) SetTlsAuto(v *TlsAuto) {
	if v == nil {
		x.xxx_hidden_Transport = nil
		return
	}
	x.xxx_hidden_Transport = &transport_TlsAuto{v}
}

func (x *Transport) SetHttpMock(v *HttpMock) {
	if v == nil {
		x.xxx_hidden_Transport = nil
		return
	}
	x.xxx_hidden_Transport = &transport_HttpMock{v}
}

func (x *Transport) SetAead(v *Aead) {
	if v == nil {
		x.xxx_hidden_Transport = nil
		return
	}
	x.xxx_hidden_Transport = &transport_Aead{v}
}

func (x *Transport) HasTransport() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Transport != nil
}

func (x *Transport) HasNormal() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Transport.(*transport_Normal)
	return ok
}

func (x *Transport) HasTls() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Transport.(*transport_Tls)
	return ok
}

func (x *Transport) HasMux() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Transport.(*transport_Mux)
	return ok
}

func (x *Transport) HasHttp2() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Transport.(*transport_Http2)
	return ok
}

func (x *Transport) HasWebsocket() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Transport.(*transport_Websocket)
	return ok
}

func (x *Transport) HasGrpc() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Transport.(*transport_Grpc)
	return ok
}

func (x *Transport) HasReality() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Transport.(*transport_Reality)
	return ok
}

func (x *Transport) HasTlsAuto() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Transport.(*transport_TlsAuto)
	return ok
}

func (x *Transport) HasHttpMock() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Transport.(*transport_HttpMock)
	return ok
}

func (x *Transport) HasAead() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Transport.(*transport_Aead)
	return ok
}

func (x *Transport) ClearTransport() {
	x.xxx_hidden_Transport = nil
}

func (x *Transport) ClearNormal() {
	if _, ok := x.xxx_hidden_Transport.(*transport_Normal); ok {
		x.xxx_hidden_Transport = nil
	}
}

func (x *Transport) ClearTls() {
	if _, ok := x.xxx_hidden_Transport.(*transport_Tls); ok {
		x.xxx_hidden_Transport = nil
	}
}

func (x *Transport) ClearMux() {
	if _, ok := x.xxx_hidden_Transport.(*transport_Mux); ok {
		x.xxx_hidden_Transport = nil
	}
}

func (x *Transport) ClearHttp2() {
	if _, ok := x.xxx_hidden_Transport.(*transport_Http2); ok {
		x.xxx_hidden_Transport = nil
	}
}

func (x *Transport) ClearWebsocket() {
	if _, ok := x.xxx_hidden_Transport.(*transport_Websocket); ok {
		x.xxx_hidden_Transport = nil
	}
}

func (x *Transport) ClearGrpc() {
	if _, ok := x.xxx_hidden_Transport.(*transport_Grpc); ok {
		x.xxx_hidden_Transport = nil
	}
}

func (x *Transport) ClearReality() {
	if _, ok := x.xxx_hidden_Transport.(*transport_Reality); ok {
		x.xxx_hidden_Transport = nil
	}
}

func (x *Transport) ClearTlsAuto() {
	if _, ok := x.xxx_hidden_Transport.(*transport_TlsAuto); ok {
		x.xxx_hidden_Transport = nil
	}
}

func (x *Transport) ClearHttpMock() {
	if _, ok := x.xxx_hidden_Transport.(*transport_HttpMock); ok {
		x.xxx_hidden_Transport = nil
	}
}

func (x *Transport) ClearAead() {
	if _, ok := x.xxx_hidden_Transport.(*transport_Aead); ok {
		x.xxx_hidden_Transport = nil
	}
}

const Transport_Transport_not_set_case case_Transport_Transport = 0
const Transport_Normal_case case_Transport_Transport = 12
const Transport_Tls_case case_Transport_Transport = 1
const Transport_Mux_case case_Transport_Transport = 2
const Transport_Http2_case case_Transport_Transport = 5
const Transport_Websocket_case case_Transport_Transport = 6
const Transport_Grpc_case case_Transport_Transport = 11
const Transport_Reality_case case_Transport_Transport = 10
const Transport_TlsAuto_case case_Transport_Transport = 13
const Transport_HttpMock_case case_Transport_Transport = 14
const Transport_Aead_case case_Transport_Transport = 15

func (x *Transport) WhichTransport() case_Transport_Transport {
	if x == nil {
		return Transport_Transport_not_set_case
	}
	switch x.xxx_hidden_Transport.(type) {
	case *transport_Normal:
		return Transport_Normal_case
	case *transport_Tls:
		return Transport_Tls_case
	case *transport_Mux:
		return Transport_Mux_case
	case *transport_Http2:
		return Transport_Http2_case
	case *transport_Websocket:
		return Transport_Websocket_case
	case *transport_Grpc:
		return Transport_Grpc_case
	case *transport_Reality:
		return Transport_Reality_case
	case *transport_TlsAuto:
		return Transport_TlsAuto_case
	case *transport_HttpMock:
		return Transport_HttpMock_case
	case *transport_Aead:
		return Transport_Aead_case
	default:
		return Transport_Transport_not_set_case
	}
}

type Transport_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof xxx_hidden_Transport:
	Normal    *Normal
	Tls       *Tls
	Mux       *Mux
	Http2     *Http2
	Websocket *Websocket
	Grpc      *Grpc
	Reality   *Reality
	TlsAuto   *TlsAuto
	HttpMock  *HttpMock
	Aead      *Aead
	// -- end of xxx_hidden_Transport
}

func (b0 Transport_builder) Build() *Transport {
	m0 := &Transport{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Normal != nil {
		x.xxx_hidden_Transport = &transport_Normal{b.Normal}
	}
	if b.Tls != nil {
		x.xxx_hidden_Transport = &transport_Tls{b.Tls}
	}
	if b.Mux != nil {
		x.xxx_hidden_Transport = &transport_Mux{b.Mux}
	}
	if b.Http2 != nil {
		x.xxx_hidden_Transport = &transport_Http2{b.Http2}
	}
	if b.Websocket != nil {
		x.xxx_hidden_Transport = &transport_Websocket{b.Websocket}
	}
	if b.Grpc != nil {
		x.xxx_hidden_Transport = &transport_Grpc{b.Grpc}
	}
	if b.Reality != nil {
		x.xxx_hidden_Transport = &transport_Reality{b.Reality}
	}
	if b.TlsAuto != nil {
		x.xxx_hidden_Transport = &transport_TlsAuto{b.TlsAuto}
	}
	if b.HttpMock != nil {
		x.xxx_hidden_Transport = &transport_HttpMock{b.HttpMock}
	}
	if b.Aead != nil {
		x.xxx_hidden_Transport = &transport_Aead{b.Aead}
	}
	return m0
}

type case_Transport_Transport protoreflect.FieldNumber

func (x case_Transport_Transport) String() string {
	md := file_config_listener_listener_proto_msgTypes[2].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isTransport_Transport interface {
	isTransport_Transport()
}

type transport_Normal struct {
	Normal *Normal `protobuf:"bytes,12,opt,name=normal,oneof"`
}

type transport_Tls struct {
	Tls *Tls `protobuf:"bytes,1,opt,name=tls,oneof"`
}

type transport_Mux struct {
	Mux *Mux `protobuf:"bytes,2,opt,name=mux,oneof"`
}

type transport_Http2 struct {
	Http2 *Http2 `protobuf:"bytes,5,opt,name=http2,oneof"`
}

type transport_Websocket struct {
	Websocket *Websocket `protobuf:"bytes,6,opt,name=websocket,oneof"`
}

type transport_Grpc struct {
	Grpc *Grpc `protobuf:"bytes,11,opt,name=grpc,oneof"`
}

type transport_Reality struct {
	Reality *Reality `protobuf:"bytes,10,opt,name=reality,oneof"`
}

type transport_TlsAuto struct {
	TlsAuto *TlsAuto `protobuf:"bytes,13,opt,name=tls_auto,oneof"`
}

type transport_HttpMock struct {
	HttpMock *HttpMock `protobuf:"bytes,14,opt,name=http_mock,oneof"`
}

type transport_Aead struct {
	Aead *Aead `protobuf:"bytes,15,opt,name=aead,oneof"`
}

func (*transport_Normal) isTransport_Transport() {}

func (*transport_Tls) isTransport_Transport() {}

func (*transport_Mux) isTransport_Transport() {}

func (*transport_Http2) isTransport_Transport() {}

func (*transport_Websocket) isTransport_Transport() {}

func (*transport_Grpc) isTransport_Transport() {}

func (*transport_Reality) isTransport_Transport() {}

func (*transport_TlsAuto) isTransport_Transport() {}

func (*transport_HttpMock) isTransport_Transport() {}

func (*transport_Aead) isTransport_Transport() {}

type Empty struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_config_listener_listener_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_config_listener_listener_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type Empty_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 Empty_builder) Build() *Empty {
	m0 := &Empty{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type Mux struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Mux) Reset() {
	*x = Mux{}
	mi := &file_config_listener_listener_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Mux) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mux) ProtoMessage() {}

func (x *Mux) ProtoReflect() protoreflect.Message {
	mi := &file_config_listener_listener_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type Mux_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 Mux_builder) Build() *Mux {
	m0 := &Mux{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type Tcpudp struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Host        *string                `protobuf:"bytes,1,opt,name=host"`
	xxx_hidden_Control     TcpUdpControl          `protobuf:"varint,2,opt,name=control,enum=yuhaiin.listener.TcpUdpControl"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Tcpudp) Reset() {
	*x = Tcpudp{}
	mi := &file_config_listener_listener_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tcpudp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tcpudp) ProtoMessage() {}

func (x *Tcpudp) ProtoReflect() protoreflect.Message {
	mi := &file_config_listener_listener_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Tcpudp) GetHost() string {
	if x != nil {
		if x.xxx_hidden_Host != nil {
			return *x.xxx_hidden_Host
		}
		return ""
	}
	return ""
}

func (x *Tcpudp) GetControl() TcpUdpControl {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_Control
		}
	}
	return TcpUdpControl_tcp_udp_control_all
}

func (x *Tcpudp) SetHost(v string) {
	x.xxx_hidden_Host = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *Tcpudp) SetControl(v TcpUdpControl) {
	x.xxx_hidden_Control = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *Tcpudp) HasHost() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Tcpudp) HasControl() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Tcpudp) ClearHost() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Host = nil
}

func (x *Tcpudp) ClearControl() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Control = TcpUdpControl_tcp_udp_control_all
}

type Tcpudp_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Host    *string
	Control *TcpUdpControl
}

func (b0 Tcpudp_builder) Build() *Tcpudp {
	m0 := &Tcpudp{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Host != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Host = b.Host
	}
	if b.Control != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Control = *b.Control
	}
	return m0
}

type Quic struct {
	state                  protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Host        *string                   `protobuf:"bytes,1,opt,name=host"`
	xxx_hidden_Tls         *protocol.TlsServerConfig `protobuf:"bytes,3,opt,name=tls"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Quic) Reset() {
	*x = Quic{}
	mi := &file_config_listener_listener_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Quic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Quic) ProtoMessage() {}

func (x *Quic) ProtoReflect() protoreflect.Message {
	mi := &file_config_listener_listener_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Quic) GetHost() string {
	if x != nil {
		if x.xxx_hidden_Host != nil {
			return *x.xxx_hidden_Host
		}
		return ""
	}
	return ""
}

func (x *Quic) GetTls() *protocol.TlsServerConfig {
	if x != nil {
		return x.xxx_hidden_Tls
	}
	return nil
}

func (x *Quic) SetHost(v string) {
	x.xxx_hidden_Host = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *Quic) SetTls(v *protocol.TlsServerConfig) {
	x.xxx_hidden_Tls = v
}

func (x *Quic) HasHost() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Quic) HasTls() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Tls != nil
}

func (x *Quic) ClearHost() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Host = nil
}

func (x *Quic) ClearTls() {
	x.xxx_hidden_Tls = nil
}

type Quic_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Host *string
	Tls  *protocol.TlsServerConfig
}

func (b0 Quic_builder) Build() *Quic {
	m0 := &Quic{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Host != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Host = b.Host
	}
	x.xxx_hidden_Tls = b.Tls
	return m0
}

type Http struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Username    *string                `protobuf:"bytes,3,opt,name=username"`
	xxx_hidden_Password    *string                `protobuf:"bytes,4,opt,name=password"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Http) Reset() {
	*x = Http{}
	mi := &file_config_listener_listener_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Http) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Http) ProtoMessage() {}

func (x *Http) ProtoReflect() protoreflect.Message {
	mi := &file_config_listener_listener_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Http) GetUsername() string {
	if x != nil {
		if x.xxx_hidden_Username != nil {
			return *x.xxx_hidden_Username
		}
		return ""
	}
	return ""
}

func (x *Http) GetPassword() string {
	if x != nil {
		if x.xxx_hidden_Password != nil {
			return *x.xxx_hidden_Password
		}
		return ""
	}
	return ""
}

func (x *Http) SetUsername(v string) {
	x.xxx_hidden_Username = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *Http) SetPassword(v string) {
	x.xxx_hidden_Password = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *Http) HasUsername() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Http) HasPassword() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Http) ClearUsername() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Username = nil
}

func (x *Http) ClearPassword() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Password = nil
}

type Http_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Username *string
	Password *string
}

func (b0 Http_builder) Build() *Http {
	m0 := &Http{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Username != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Username = b.Username
	}
	if b.Password != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Password = b.Password
	}
	return m0
}

type Socks5 struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Username    *string                `protobuf:"bytes,3,opt,name=username"`
	xxx_hidden_Password    *string                `protobuf:"bytes,4,opt,name=password"`
	xxx_hidden_Udp         bool                   `protobuf:"varint,5,opt,name=udp"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Socks5) Reset() {
	*x = Socks5{}
	mi := &file_config_listener_listener_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Socks5) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Socks5) ProtoMessage() {}

func (x *Socks5) ProtoReflect() protoreflect.Message {
	mi := &file_config_listener_listener_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Socks5) GetUsername() string {
	if x != nil {
		if x.xxx_hidden_Username != nil {
			return *x.xxx_hidden_Username
		}
		return ""
	}
	return ""
}

func (x *Socks5) GetPassword() string {
	if x != nil {
		if x.xxx_hidden_Password != nil {
			return *x.xxx_hidden_Password
		}
		return ""
	}
	return ""
}

func (x *Socks5) GetUdp() bool {
	if x != nil {
		return x.xxx_hidden_Udp
	}
	return false
}

func (x *Socks5) SetUsername(v string) {
	x.xxx_hidden_Username = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *Socks5) SetPassword(v string) {
	x.xxx_hidden_Password = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *Socks5) SetUdp(v bool) {
	x.xxx_hidden_Udp = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *Socks5) HasUsername() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Socks5) HasPassword() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Socks5) HasUdp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Socks5) ClearUsername() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Username = nil
}

func (x *Socks5) ClearPassword() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Password = nil
}

func (x *Socks5) ClearUdp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Udp = false
}

type Socks5_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Username *string
	Password *string
	Udp      *bool
}

func (b0 Socks5_builder) Build() *Socks5 {
	m0 := &Socks5{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Username != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Username = b.Username
	}
	if b.Password != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Password = b.Password
	}
	if b.Udp != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Udp = *b.Udp
	}
	return m0
}

type Socks4A struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Username    *string                `protobuf:"bytes,2,opt,name=username"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Socks4A) Reset() {
	*x = Socks4A{}
	mi := &file_config_listener_listener_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Socks4A) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Socks4A) ProtoMessage() {}

func (x *Socks4A) ProtoReflect() protoreflect.Message {
	mi := &file_config_listener_listener_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Socks4A) GetUsername() string {
	if x != nil {
		if x.xxx_hidden_Username != nil {
			return *x.xxx_hidden_Username
		}
		return ""
	}
	return ""
}

func (x *Socks4A) SetUsername(v string) {
	x.xxx_hidden_Username = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *Socks4A) HasUsername() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Socks4A) ClearUsername() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Username = nil
}

type Socks4A_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Username *string
}

func (b0 Socks4A_builder) Build() *Socks4A {
	m0 := &Socks4A{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Username != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Username = b.Username
	}
	return m0
}

type Mixed struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Username    *string                `protobuf:"bytes,3,opt,name=username"`
	xxx_hidden_Password    *string                `protobuf:"bytes,4,opt,name=password"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Mixed) Reset() {
	*x = Mixed{}
	mi := &file_config_listener_listener_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Mixed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mixed) ProtoMessage() {}

func (x *Mixed) ProtoReflect() protoreflect.Message {
	mi := &file_config_listener_listener_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Mixed) GetUsername() string {
	if x != nil {
		if x.xxx_hidden_Username != nil {
			return *x.xxx_hidden_Username
		}
		return ""
	}
	return ""
}

func (x *Mixed) GetPassword() string {
	if x != nil {
		if x.xxx_hidden_Password != nil {
			return *x.xxx_hidden_Password
		}
		return ""
	}
	return ""
}

func (x *Mixed) SetUsername(v string) {
	x.xxx_hidden_Username = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *Mixed) SetPassword(v string) {
	x.xxx_hidden_Password = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *Mixed) HasUsername() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Mixed) HasPassword() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Mixed) ClearUsername() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Username = nil
}

func (x *Mixed) ClearPassword() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Password = nil
}

type Mixed_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Username *string
	Password *string
}

func (b0 Mixed_builder) Build() *Mixed {
	m0 := &Mixed{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Username != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Username = b.Username
	}
	if b.Password != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Password = b.Password
	}
	return m0
}

type Redir struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Host        *string                `protobuf:"bytes,1,opt,name=host"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Redir) Reset() {
	*x = Redir{}
	mi := &file_config_listener_listener_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Redir) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Redir) ProtoMessage() {}

func (x *Redir) ProtoReflect() protoreflect.Message {
	mi := &file_config_listener_listener_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Redir) GetHost() string {
	if x != nil {
		if x.xxx_hidden_Host != nil {
			return *x.xxx_hidden_Host
		}
		return ""
	}
	return ""
}

func (x *Redir) SetHost(v string) {
	x.xxx_hidden_Host = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *Redir) HasHost() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Redir) ClearHost() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Host = nil
}

type Redir_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Host *string
}

func (b0 Redir_builder) Build() *Redir {
	m0 := &Redir{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Host != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Host = b.Host
	}
	return m0
}

type Tproxy struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Host         *string                `protobuf:"bytes,1,opt,name=host"`
	xxx_hidden_DnsHijacking bool                   `protobuf:"varint,2,opt,name=dns_hijacking"`
	xxx_hidden_ForceFakeip  bool                   `protobuf:"varint,3,opt,name=force_fakeip"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *Tproxy) Reset() {
	*x = Tproxy{}
	mi := &file_config_listener_listener_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tproxy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tproxy) ProtoMessage() {}

func (x *Tproxy) ProtoReflect() protoreflect.Message {
	mi := &file_config_listener_listener_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Tproxy) GetHost() string {
	if x != nil {
		if x.xxx_hidden_Host != nil {
			return *x.xxx_hidden_Host
		}
		return ""
	}
	return ""
}

func (x *Tproxy) GetDnsHijacking() bool {
	if x != nil {
		return x.xxx_hidden_DnsHijacking
	}
	return false
}

func (x *Tproxy) GetForceFakeip() bool {
	if x != nil {
		return x.xxx_hidden_ForceFakeip
	}
	return false
}

func (x *Tproxy) SetHost(v string) {
	x.xxx_hidden_Host = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *Tproxy) SetDnsHijacking(v bool) {
	x.xxx_hidden_DnsHijacking = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *Tproxy) SetForceFakeip(v bool) {
	x.xxx_hidden_ForceFakeip = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *Tproxy) HasHost() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Tproxy) HasDnsHijacking() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Tproxy) HasForceFakeip() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Tproxy) ClearHost() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Host = nil
}

func (x *Tproxy) ClearDnsHijacking() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_DnsHijacking = false
}

func (x *Tproxy) ClearForceFakeip() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ForceFakeip = false
}

type Tproxy_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Host         *string
	DnsHijacking *bool
	ForceFakeip  *bool
}

func (b0 Tproxy_builder) Build() *Tproxy {
	m0 := &Tproxy{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Host != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Host = b.Host
	}
	if b.DnsHijacking != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_DnsHijacking = *b.DnsHijacking
	}
	if b.ForceFakeip != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_ForceFakeip = *b.ForceFakeip
	}
	return m0
}

type TunPlatfrom struct {
	state             protoimpl.MessageState     `protogen:"opaque.v1"`
	xxx_hidden_Darwin *TunPlatfromPlatformDarwin `protobuf:"bytes,1,opt,name=darwin"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *TunPlatfrom) Reset() {
	*x = TunPlatfrom{}
	mi := &file_config_listener_listener_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TunPlatfrom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TunPlatfrom) ProtoMessage() {}

func (x *TunPlatfrom) ProtoReflect() protoreflect.Message {
	mi := &file_config_listener_listener_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TunPlatfrom) GetDarwin() *TunPlatfromPlatformDarwin {
	if x != nil {
		return x.xxx_hidden_Darwin
	}
	return nil
}

func (x *TunPlatfrom) SetDarwin(v *TunPlatfromPlatformDarwin) {
	x.xxx_hidden_Darwin = v
}

func (x *TunPlatfrom) HasDarwin() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Darwin != nil
}

func (x *TunPlatfrom) ClearDarwin() {
	x.xxx_hidden_Darwin = nil
}

type TunPlatfrom_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Darwin *TunPlatfromPlatformDarwin
}

func (b0 TunPlatfrom_builder) Build() *TunPlatfrom {
	m0 := &TunPlatfrom{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Darwin = b.Darwin
	return m0
}

type Tun struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name          *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Mtu           int32                  `protobuf:"varint,2,opt,name=mtu"`
	xxx_hidden_ForceFakeip   bool                   `protobuf:"varint,9,opt,name=force_fakeip"`
	xxx_hidden_SkipMulticast bool                   `protobuf:"varint,6,opt,name=skip_multicast"`
	xxx_hidden_Driver        TunEndpointDriver      `protobuf:"varint,7,opt,name=driver,enum=yuhaiin.listener.TunEndpointDriver"`
	xxx_hidden_Portal        *string                `protobuf:"bytes,8,opt,name=portal"`
	xxx_hidden_PortalV6      *string                `protobuf:"bytes,11,opt,name=portal_v6"`
	xxx_hidden_Route         *Route                 `protobuf:"bytes,10,opt,name=route"`
	xxx_hidden_PostUp        []string               `protobuf:"bytes,12,rep,name=post_up"`
	xxx_hidden_PostDown      []string               `protobuf:"bytes,13,rep,name=post_down"`
	xxx_hidden_Platform      *TunPlatfrom           `protobuf:"bytes,14,opt,name=platform"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *Tun) Reset() {
	*x = Tun{}
	mi := &file_config_listener_listener_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tun) ProtoMessage() {}

func (x *Tun) ProtoReflect() protoreflect.Message {
	mi := &file_config_listener_listener_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Tun) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Tun) GetMtu() int32 {
	if x != nil {
		return x.xxx_hidden_Mtu
	}
	return 0
}

func (x *Tun) GetForceFakeip() bool {
	if x != nil {
		return x.xxx_hidden_ForceFakeip
	}
	return false
}

func (x *Tun) GetSkipMulticast() bool {
	if x != nil {
		return x.xxx_hidden_SkipMulticast
	}
	return false
}

func (x *Tun) GetDriver() TunEndpointDriver {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 4) {
			return x.xxx_hidden_Driver
		}
	}
	return Tun_fdbased
}

func (x *Tun) GetPortal() string {
	if x != nil {
		if x.xxx_hidden_Portal != nil {
			return *x.xxx_hidden_Portal
		}
		return ""
	}
	return ""
}

func (x *Tun) GetPortalV6() string {
	if x != nil {
		if x.xxx_hidden_PortalV6 != nil {
			return *x.xxx_hidden_PortalV6
		}
		return ""
	}
	return ""
}

func (x *Tun) GetRoute() *Route {
	if x != nil {
		return x.xxx_hidden_Route
	}
	return nil
}

func (x *Tun) GetPostUp() []string {
	if x != nil {
		return x.xxx_hidden_PostUp
	}
	return nil
}

func (x *Tun) GetPostDown() []string {
	if x != nil {
		return x.xxx_hidden_PostDown
	}
	return nil
}

func (x *Tun) GetPlatform() *TunPlatfrom {
	if x != nil {
		return x.xxx_hidden_Platform
	}
	return nil
}

func (x *Tun) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 11)
}

func (x *Tun) SetMtu(v int32) {
	x.xxx_hidden_Mtu = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 11)
}

func (x *Tun) SetForceFakeip(v bool) {
	x.xxx_hidden_ForceFakeip = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 11)
}

func (x *Tun) SetSkipMulticast(v bool) {
	x.xxx_hidden_SkipMulticast = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 11)
}

func (x *Tun) SetDriver(v TunEndpointDriver) {
	x.xxx_hidden_Driver = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 11)
}

func (x *Tun) SetPortal(v string) {
	x.xxx_hidden_Portal = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 11)
}

func (x *Tun) SetPortalV6(v string) {
	x.xxx_hidden_PortalV6 = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 11)
}

func (x *Tun) SetRoute(v *Route) {
	x.xxx_hidden_Route = v
}

func (x *Tun) SetPostUp(v []string) {
	x.xxx_hidden_PostUp = v
}

func (x *Tun) SetPostDown(v []string) {
	x.xxx_hidden_PostDown = v
}

func (x *Tun) SetPlatform(v *TunPlatfrom) {
	x.xxx_hidden_Platform = v
}

func (x *Tun) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Tun) HasMtu() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Tun) HasForceFakeip() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Tun) HasSkipMulticast() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Tun) HasDriver() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Tun) HasPortal() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *Tun) HasPortalV6() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *Tun) HasRoute() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Route != nil
}

func (x *Tun) HasPlatform() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Platform != nil
}

func (x *Tun) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *Tun) ClearMtu() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Mtu = 0
}

func (x *Tun) ClearForceFakeip() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ForceFakeip = false
}

func (x *Tun) ClearSkipMulticast() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_SkipMulticast = false
}

func (x *Tun) ClearDriver() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Driver = Tun_fdbased
}

func (x *Tun) ClearPortal() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Portal = nil
}

func (x *Tun) ClearPortalV6() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_PortalV6 = nil
}

func (x *Tun) ClearRoute() {
	x.xxx_hidden_Route = nil
}

func (x *Tun) ClearPlatform() {
	x.xxx_hidden_Platform = nil
}

type Tun_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// name of the tun device
	// eg: tun://tun0, fd://123
	Name          *string
	Mtu           *int32
	ForceFakeip   *bool
	SkipMulticast *bool
	Driver        *TunEndpointDriver
	Portal        *string
	PortalV6      *string
	Route         *Route
	PostUp        []string
	PostDown      []string
	Platform      *TunPlatfrom
}

func (b0 Tun_builder) Build() *Tun {
	m0 := &Tun{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 11)
		x.xxx_hidden_Name = b.Name
	}
	if b.Mtu != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 11)
		x.xxx_hidden_Mtu = *b.Mtu
	}
	if b.ForceFakeip != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 11)
		x.xxx_hidden_ForceFakeip = *b.ForceFakeip
	}
	if b.SkipMulticast != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 11)
		x.xxx_hidden_SkipMulticast = *b.SkipMulticast
	}
	if b.Driver != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 11)
		x.xxx_hidden_Driver = *b.Driver
	}
	if b.Portal != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 11)
		x.xxx_hidden_Portal = b.Portal
	}
	if b.PortalV6 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 11)
		x.xxx_hidden_PortalV6 = b.PortalV6
	}
	x.xxx_hidden_Route = b.Route
	x.xxx_hidden_PostUp = b.PostUp
	x.xxx_hidden_PostDown = b.PostDown
	x.xxx_hidden_Platform = b.Platform
	return m0
}

type Route struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Routes   []string               `protobuf:"bytes,1,rep,name=routes"`
	xxx_hidden_Excludes []string               `protobuf:"bytes,2,rep,name=excludes"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Route) Reset() {
	*x = Route{}
	mi := &file_config_listener_listener_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Route) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Route) ProtoMessage() {}

func (x *Route) ProtoReflect() protoreflect.Message {
	mi := &file_config_listener_listener_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Route) GetRoutes() []string {
	if x != nil {
		return x.xxx_hidden_Routes
	}
	return nil
}

func (x *Route) GetExcludes() []string {
	if x != nil {
		return x.xxx_hidden_Excludes
	}
	return nil
}

func (x *Route) SetRoutes(v []string) {
	x.xxx_hidden_Routes = v
}

func (x *Route) SetExcludes(v []string) {
	x.xxx_hidden_Excludes = v
}

type Route_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Routes   []string
	Excludes []string
}

func (b0 Route_builder) Build() *Route {
	m0 := &Route{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Routes = b.Routes
	x.xxx_hidden_Excludes = b.Excludes
	return m0
}

type Yuubinsya struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Password    *string                `protobuf:"bytes,2,opt,name=password"`
	xxx_hidden_UdpCoalesce bool                   `protobuf:"varint,14,opt,name=udp_coalesce"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Yuubinsya) Reset() {
	*x = Yuubinsya{}
	mi := &file_config_listener_listener_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Yuubinsya) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Yuubinsya) ProtoMessage() {}

func (x *Yuubinsya) ProtoReflect() protoreflect.Message {
	mi := &file_config_listener_listener_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Yuubinsya) GetPassword() string {
	if x != nil {
		if x.xxx_hidden_Password != nil {
			return *x.xxx_hidden_Password
		}
		return ""
	}
	return ""
}

func (x *Yuubinsya) GetUdpCoalesce() bool {
	if x != nil {
		return x.xxx_hidden_UdpCoalesce
	}
	return false
}

func (x *Yuubinsya) SetPassword(v string) {
	x.xxx_hidden_Password = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *Yuubinsya) SetUdpCoalesce(v bool) {
	x.xxx_hidden_UdpCoalesce = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *Yuubinsya) HasPassword() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Yuubinsya) HasUdpCoalesce() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Yuubinsya) ClearPassword() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Password = nil
}

func (x *Yuubinsya) ClearUdpCoalesce() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_UdpCoalesce = false
}

type Yuubinsya_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Password    *string
	UdpCoalesce *bool
}

func (b0 Yuubinsya_builder) Build() *Yuubinsya {
	m0 := &Yuubinsya{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Password != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Password = b.Password
	}
	if b.UdpCoalesce != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_UdpCoalesce = *b.UdpCoalesce
	}
	return m0
}

type Normal struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Normal) Reset() {
	*x = Normal{}
	mi := &file_config_listener_listener_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Normal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Normal) ProtoMessage() {}

func (x *Normal) ProtoReflect() protoreflect.Message {
	mi := &file_config_listener_listener_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type Normal_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 Normal_builder) Build() *Normal {
	m0 := &Normal{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type Websocket struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Websocket) Reset() {
	*x = Websocket{}
	mi := &file_config_listener_listener_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Websocket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Websocket) ProtoMessage() {}

func (x *Websocket) ProtoReflect() protoreflect.Message {
	mi := &file_config_listener_listener_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type Websocket_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 Websocket_builder) Build() *Websocket {
	m0 := &Websocket{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type Tls struct {
	state          protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Tls *protocol.TlsServerConfig `protobuf:"bytes,1,opt,name=tls"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Tls) Reset() {
	*x = Tls{}
	mi := &file_config_listener_listener_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tls) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tls) ProtoMessage() {}

func (x *Tls) ProtoReflect() protoreflect.Message {
	mi := &file_config_listener_listener_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Tls) GetTls() *protocol.TlsServerConfig {
	if x != nil {
		return x.xxx_hidden_Tls
	}
	return nil
}

func (x *Tls) SetTls(v *protocol.TlsServerConfig) {
	x.xxx_hidden_Tls = v
}

func (x *Tls) HasTls() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Tls != nil
}

func (x *Tls) ClearTls() {
	x.xxx_hidden_Tls = nil
}

type Tls_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Tls *protocol.TlsServerConfig
}

func (b0 Tls_builder) Build() *Tls {
	m0 := &Tls{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Tls = b.Tls
	return m0
}

type Grpc struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Grpc) Reset() {
	*x = Grpc{}
	mi := &file_config_listener_listener_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Grpc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Grpc) ProtoMessage() {}

func (x *Grpc) ProtoReflect() protoreflect.Message {
	mi := &file_config_listener_listener_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type Grpc_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 Grpc_builder) Build() *Grpc {
	m0 := &Grpc{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type Http2 struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Http2) Reset() {
	*x = Http2{}
	mi := &file_config_listener_listener_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Http2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Http2) ProtoMessage() {}

func (x *Http2) ProtoReflect() protoreflect.Message {
	mi := &file_config_listener_listener_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type Http2_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 Http2_builder) Build() *Http2 {
	m0 := &Http2{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type Reality struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ShortId     []string               `protobuf:"bytes,1,rep,name=short_id"`
	xxx_hidden_ServerName  []string               `protobuf:"bytes,2,rep,name=server_name"`
	xxx_hidden_Dest        *string                `protobuf:"bytes,3,opt,name=dest"`
	xxx_hidden_PrivateKey  *string                `protobuf:"bytes,4,opt,name=private_key"`
	xxx_hidden_PublicKey   *string                `protobuf:"bytes,6,opt,name=public_key"`
	xxx_hidden_Mldsa65Seed *string                `protobuf:"bytes,7,opt,name=mldsa65_seed"`
	xxx_hidden_Debug       bool                   `protobuf:"varint,5,opt,name=debug"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Reality) Reset() {
	*x = Reality{}
	mi := &file_config_listener_listener_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Reality) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reality) ProtoMessage() {}

func (x *Reality) ProtoReflect() protoreflect.Message {
	mi := &file_config_listener_listener_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Reality) GetShortId() []string {
	if x != nil {
		return x.xxx_hidden_ShortId
	}
	return nil
}

func (x *Reality) GetServerName() []string {
	if x != nil {
		return x.xxx_hidden_ServerName
	}
	return nil
}

func (x *Reality) GetDest() string {
	if x != nil {
		if x.xxx_hidden_Dest != nil {
			return *x.xxx_hidden_Dest
		}
		return ""
	}
	return ""
}

func (x *Reality) GetPrivateKey() string {
	if x != nil {
		if x.xxx_hidden_PrivateKey != nil {
			return *x.xxx_hidden_PrivateKey
		}
		return ""
	}
	return ""
}

func (x *Reality) GetPublicKey() string {
	if x != nil {
		if x.xxx_hidden_PublicKey != nil {
			return *x.xxx_hidden_PublicKey
		}
		return ""
	}
	return ""
}

func (x *Reality) GetMldsa65Seed() string {
	if x != nil {
		if x.xxx_hidden_Mldsa65Seed != nil {
			return *x.xxx_hidden_Mldsa65Seed
		}
		return ""
	}
	return ""
}

func (x *Reality) GetDebug() bool {
	if x != nil {
		return x.xxx_hidden_Debug
	}
	return false
}

func (x *Reality) SetShortId(v []string) {
	x.xxx_hidden_ShortId = v
}

func (x *Reality) SetServerName(v []string) {
	x.xxx_hidden_ServerName = v
}

func (x *Reality) SetDest(v string) {
	x.xxx_hidden_Dest = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *Reality) SetPrivateKey(v string) {
	x.xxx_hidden_PrivateKey = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *Reality) SetPublicKey(v string) {
	x.xxx_hidden_PublicKey = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *Reality) SetMldsa65Seed(v string) {
	x.xxx_hidden_Mldsa65Seed = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 7)
}

func (x *Reality) SetDebug(v bool) {
	x.xxx_hidden_Debug = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 7)
}

func (x *Reality) HasDest() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Reality) HasPrivateKey() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Reality) HasPublicKey() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Reality) HasMldsa65Seed() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *Reality) HasDebug() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *Reality) ClearDest() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Dest = nil
}

func (x *Reality) ClearPrivateKey() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_PrivateKey = nil
}

func (x *Reality) ClearPublicKey() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_PublicKey = nil
}

func (x *Reality) ClearMldsa65Seed() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Mldsa65Seed = nil
}

func (x *Reality) ClearDebug() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_Debug = false
}

type Reality_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ShortId     []string
	ServerName  []string
	Dest        *string
	PrivateKey  *string
	PublicKey   *string
	Mldsa65Seed *string
	Debug       *bool
}

func (b0 Reality_builder) Build() *Reality {
	m0 := &Reality{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_ShortId = b.ShortId
	x.xxx_hidden_ServerName = b.ServerName
	if b.Dest != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_Dest = b.Dest
	}
	if b.PrivateKey != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_PrivateKey = b.PrivateKey
	}
	if b.PublicKey != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_PublicKey = b.PublicKey
	}
	if b.Mldsa65Seed != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 7)
		x.xxx_hidden_Mldsa65Seed = b.Mldsa65Seed
	}
	if b.Debug != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 7)
		x.xxx_hidden_Debug = *b.Debug
	}
	return m0
}

type TlsAuto struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Servernames []string               `protobuf:"bytes,1,rep,name=servernames"`
	xxx_hidden_NextProtos  []string               `protobuf:"bytes,2,rep,name=next_protos"`
	xxx_hidden_CaCert      []byte                 `protobuf:"bytes,3,opt,name=ca_cert"`
	xxx_hidden_CaKey       []byte                 `protobuf:"bytes,4,opt,name=ca_key"`
	xxx_hidden_Ech         *EchConfig             `protobuf:"bytes,5,opt,name=ech"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *TlsAuto) Reset() {
	*x = TlsAuto{}
	mi := &file_config_listener_listener_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TlsAuto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TlsAuto) ProtoMessage() {}

func (x *TlsAuto) ProtoReflect() protoreflect.Message {
	mi := &file_config_listener_listener_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TlsAuto) GetServernames() []string {
	if x != nil {
		return x.xxx_hidden_Servernames
	}
	return nil
}

func (x *TlsAuto) GetNextProtos() []string {
	if x != nil {
		return x.xxx_hidden_NextProtos
	}
	return nil
}

func (x *TlsAuto) GetCaCert() []byte {
	if x != nil {
		return x.xxx_hidden_CaCert
	}
	return nil
}

func (x *TlsAuto) GetCaKey() []byte {
	if x != nil {
		return x.xxx_hidden_CaKey
	}
	return nil
}

func (x *TlsAuto) GetEch() *EchConfig {
	if x != nil {
		return x.xxx_hidden_Ech
	}
	return nil
}

func (x *TlsAuto) SetServernames(v []string) {
	x.xxx_hidden_Servernames = v
}

func (x *TlsAuto) SetNextProtos(v []string) {
	x.xxx_hidden_NextProtos = v
}

func (x *TlsAuto) SetCaCert(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_CaCert = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *TlsAuto) SetCaKey(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_CaKey = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *TlsAuto) SetEch(v *EchConfig) {
	x.xxx_hidden_Ech = v
}

func (x *TlsAuto) HasCaCert() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *TlsAuto) HasCaKey() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *TlsAuto) HasEch() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Ech != nil
}

func (x *TlsAuto) ClearCaCert() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_CaCert = nil
}

func (x *TlsAuto) ClearCaKey() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_CaKey = nil
}

func (x *TlsAuto) ClearEch() {
	x.xxx_hidden_Ech = nil
}

type TlsAuto_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Servernames []string
	NextProtos  []string
	// ca cert and key will auto generate
	// so they will be empty
	CaCert []byte
	CaKey  []byte
	Ech    *EchConfig
}

func (b0 TlsAuto_builder) Build() *TlsAuto {
	m0 := &TlsAuto{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Servernames = b.Servernames
	x.xxx_hidden_NextProtos = b.NextProtos
	if b.CaCert != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_CaCert = b.CaCert
	}
	if b.CaKey != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_CaKey = b.CaKey
	}
	x.xxx_hidden_Ech = b.Ech
	return m0
}

type EchConfig struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Enable      bool                   `protobuf:"varint,1,opt,name=enable"`
	xxx_hidden_Config      []byte                 `protobuf:"bytes,2,opt,name=config"`
	xxx_hidden_PrivateKey  []byte                 `protobuf:"bytes,3,opt,name=private_key"`
	xxx_hidden_OuterSNI    *string                `protobuf:"bytes,4,opt,name=OuterSNI"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *EchConfig) Reset() {
	*x = EchConfig{}
	mi := &file_config_listener_listener_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EchConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchConfig) ProtoMessage() {}

func (x *EchConfig) ProtoReflect() protoreflect.Message {
	mi := &file_config_listener_listener_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *EchConfig) GetEnable() bool {
	if x != nil {
		return x.xxx_hidden_Enable
	}
	return false
}

func (x *EchConfig) GetConfig() []byte {
	if x != nil {
		return x.xxx_hidden_Config
	}
	return nil
}

func (x *EchConfig) GetPrivateKey() []byte {
	if x != nil {
		return x.xxx_hidden_PrivateKey
	}
	return nil
}

func (x *EchConfig) GetOuterSNI() string {
	if x != nil {
		if x.xxx_hidden_OuterSNI != nil {
			return *x.xxx_hidden_OuterSNI
		}
		return ""
	}
	return ""
}

func (x *EchConfig) SetEnable(v bool) {
	x.xxx_hidden_Enable = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *EchConfig) SetConfig(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Config = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *EchConfig) SetPrivateKey(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_PrivateKey = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *EchConfig) SetOuterSNI(v string) {
	x.xxx_hidden_OuterSNI = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *EchConfig) HasEnable() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *EchConfig) HasConfig() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *EchConfig) HasPrivateKey() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *EchConfig) HasOuterSNI() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *EchConfig) ClearEnable() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Enable = false
}

func (x *EchConfig) ClearConfig() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Config = nil
}

func (x *EchConfig) ClearPrivateKey() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_PrivateKey = nil
}

func (x *EchConfig) ClearOuterSNI() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_OuterSNI = nil
}

type EchConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Enable     *bool
	Config     []byte
	PrivateKey []byte
	OuterSNI   *string
}

func (b0 EchConfig_builder) Build() *EchConfig {
	m0 := &EchConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Enable != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Enable = *b.Enable
	}
	if b.Config != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Config = b.Config
	}
	if b.PrivateKey != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_PrivateKey = b.PrivateKey
	}
	if b.OuterSNI != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_OuterSNI = b.OuterSNI
	}
	return m0
}

type Sniff struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Enabled     bool                   `protobuf:"varint,1,opt,name=enabled"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Sniff) Reset() {
	*x = Sniff{}
	mi := &file_config_listener_listener_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Sniff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sniff) ProtoMessage() {}

func (x *Sniff) ProtoReflect() protoreflect.Message {
	mi := &file_config_listener_listener_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Sniff) GetEnabled() bool {
	if x != nil {
		return x.xxx_hidden_Enabled
	}
	return false
}

func (x *Sniff) SetEnabled(v bool) {
	x.xxx_hidden_Enabled = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *Sniff) HasEnabled() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Sniff) ClearEnabled() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Enabled = false
}

type Sniff_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Enabled *bool
}

func (b0 Sniff_builder) Build() *Sniff {
	m0 := &Sniff{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Enabled != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Enabled = *b.Enabled
	}
	return m0
}

type ReverseHttp struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Url         *string                `protobuf:"bytes,1,opt,name=url"`
	xxx_hidden_Tls         *protocol.TlsConfig    `protobuf:"bytes,2,opt,name=tls"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ReverseHttp) Reset() {
	*x = ReverseHttp{}
	mi := &file_config_listener_listener_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReverseHttp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReverseHttp) ProtoMessage() {}

func (x *ReverseHttp) ProtoReflect() protoreflect.Message {
	mi := &file_config_listener_listener_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ReverseHttp) GetUrl() string {
	if x != nil {
		if x.xxx_hidden_Url != nil {
			return *x.xxx_hidden_Url
		}
		return ""
	}
	return ""
}

func (x *ReverseHttp) GetTls() *protocol.TlsConfig {
	if x != nil {
		return x.xxx_hidden_Tls
	}
	return nil
}

func (x *ReverseHttp) SetUrl(v string) {
	x.xxx_hidden_Url = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *ReverseHttp) SetTls(v *protocol.TlsConfig) {
	x.xxx_hidden_Tls = v
}

func (x *ReverseHttp) HasUrl() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ReverseHttp) HasTls() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Tls != nil
}

func (x *ReverseHttp) ClearUrl() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Url = nil
}

func (x *ReverseHttp) ClearTls() {
	x.xxx_hidden_Tls = nil
}

type ReverseHttp_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Url *string
	Tls *protocol.TlsConfig
}

func (b0 ReverseHttp_builder) Build() *ReverseHttp {
	m0 := &ReverseHttp{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Url != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Url = b.Url
	}
	x.xxx_hidden_Tls = b.Tls
	return m0
}

type ReverseTcp struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Host        *string                `protobuf:"bytes,1,opt,name=host"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ReverseTcp) Reset() {
	*x = ReverseTcp{}
	mi := &file_config_listener_listener_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReverseTcp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReverseTcp) ProtoMessage() {}

func (x *ReverseTcp) ProtoReflect() protoreflect.Message {
	mi := &file_config_listener_listener_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ReverseTcp) GetHost() string {
	if x != nil {
		if x.xxx_hidden_Host != nil {
			return *x.xxx_hidden_Host
		}
		return ""
	}
	return ""
}

func (x *ReverseTcp) SetHost(v string) {
	x.xxx_hidden_Host = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *ReverseTcp) HasHost() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ReverseTcp) ClearHost() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Host = nil
}

type ReverseTcp_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Host *string
}

func (b0 ReverseTcp_builder) Build() *ReverseTcp {
	m0 := &ReverseTcp{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Host != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Host = b.Host
	}
	return m0
}

type HttpMock struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Data        []byte                 `protobuf:"bytes,1,opt,name=data"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *HttpMock) Reset() {
	*x = HttpMock{}
	mi := &file_config_listener_listener_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpMock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpMock) ProtoMessage() {}

func (x *HttpMock) ProtoReflect() protoreflect.Message {
	mi := &file_config_listener_listener_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *HttpMock) GetData() []byte {
	if x != nil {
		return x.xxx_hidden_Data
	}
	return nil
}

func (x *HttpMock) SetData(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Data = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *HttpMock) HasData() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *HttpMock) ClearData() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Data = nil
}

type HttpMock_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Data []byte
}

func (b0 HttpMock_builder) Build() *HttpMock {
	m0 := &HttpMock{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Data != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Data = b.Data
	}
	return m0
}

type Aead struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Password    *string                `protobuf:"bytes,1,opt,name=password"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Aead) Reset() {
	*x = Aead{}
	mi := &file_config_listener_listener_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Aead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Aead) ProtoMessage() {}

func (x *Aead) ProtoReflect() protoreflect.Message {
	mi := &file_config_listener_listener_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Aead) GetPassword() string {
	if x != nil {
		if x.xxx_hidden_Password != nil {
			return *x.xxx_hidden_Password
		}
		return ""
	}
	return ""
}

func (x *Aead) SetPassword(v string) {
	x.xxx_hidden_Password = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *Aead) HasPassword() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Aead) ClearPassword() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Password = nil
}

type Aead_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Password *string
}

func (b0 Aead_builder) Build() *Aead {
	m0 := &Aead{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Password != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Password = b.Password
	}
	return m0
}

type TunPlatfromPlatformDarwin struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_NetworkService *string                `protobuf:"bytes,1,opt,name=network_service"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *TunPlatfromPlatformDarwin) Reset() {
	*x = TunPlatfromPlatformDarwin{}
	mi := &file_config_listener_listener_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TunPlatfromPlatformDarwin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TunPlatfromPlatformDarwin) ProtoMessage() {}

func (x *TunPlatfromPlatformDarwin) ProtoReflect() protoreflect.Message {
	mi := &file_config_listener_listener_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TunPlatfromPlatformDarwin) GetNetworkService() string {
	if x != nil {
		if x.xxx_hidden_NetworkService != nil {
			return *x.xxx_hidden_NetworkService
		}
		return ""
	}
	return ""
}

func (x *TunPlatfromPlatformDarwin) SetNetworkService(v string) {
	x.xxx_hidden_NetworkService = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *TunPlatfromPlatformDarwin) HasNetworkService() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *TunPlatfromPlatformDarwin) ClearNetworkService() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_NetworkService = nil
}

type TunPlatfromPlatformDarwin_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	NetworkService *string
}

func (b0 TunPlatfromPlatformDarwin_builder) Build() *TunPlatfromPlatformDarwin {
	m0 := &TunPlatfromPlatformDarwin{}
	b, x := &b0, m0
	_, _ = b, x
	if b.NetworkService != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_NetworkService = b.NetworkService
	}
	return m0
}

var File_config_listener_listener_proto protoreflect.FileDescriptor

const file_config_listener_listener_proto_rawDesc = "" +
	"\n" +
	"\x1econfig/listener/listener.proto\x12\x10yuhaiin.listener\x1a!google/protobuf/go_features.proto\x1a\x1cnode/protocol/protocol.proto\"\xc0\x02\n" +
	"\x0einbound_config\x12\x1e\n" +
	"\n" +
	"hijack_dns\x18\x02 \x01(\bR\n" +
	"hijack_dns\x12,\n" +
	"\x11hijack_dns_fakeip\x18\x03 \x01(\bR\x11hijack_dns_fakeip\x12J\n" +
	"\binbounds\x18\x01 \x03(\v2..yuhaiin.listener.inbound_config.InboundsEntryR\binbounds\x12-\n" +
	"\x05sniff\x18\x04 \x01(\v2\x17.yuhaiin.listener.sniffR\x05sniff\x1aV\n" +
	"\rInboundsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12/\n" +
	"\x05value\x18\x02 \x01(\v2\x19.yuhaiin.listener.inboundR\x05value:\x028\x01J\x04\b\x05\x10\x06R\aservers\"\xf5\x06\n" +
	"\ainbound\x12\x12\n" +
	"\x04name\x18\r \x01(\tR\x04name\x12\x18\n" +
	"\aenabled\x18\x0e \x01(\bR\aenabled\x12/\n" +
	"\x05empty\x18\x15 \x01(\v2\x17.yuhaiin.listener.emptyH\x00R\x05empty\x122\n" +
	"\x06tcpudp\x18\x0f \x01(\v2\x18.yuhaiin.listener.tcpudpH\x00R\x06tcpudp\x12,\n" +
	"\x04quic\x18\x10 \x01(\v2\x16.yuhaiin.listener.quicH\x00R\x04quic\x129\n" +
	"\ttransport\x18\x02 \x03(\v2\x1b.yuhaiin.listener.transportR\ttransport\x12,\n" +
	"\x04http\x18\x03 \x01(\v2\x16.yuhaiin.listener.httpH\x01R\x04http\x122\n" +
	"\x06socks5\x18\x04 \x01(\v2\x18.yuhaiin.listener.socks5H\x01R\x06socks5\x12;\n" +
	"\tyuubinsya\x18\a \x01(\v2\x1b.yuhaiin.listener.yuubinsyaH\x01R\tyuubinsya\x12-\n" +
	"\x03mix\x18\b \x01(\v2\x17.yuhaiin.listener.mixedH\x01R\x05mixed\x125\n" +
	"\asocks4a\x18\t \x01(\v2\x19.yuhaiin.listener.socks4aH\x01R\asocks4a\x122\n" +
	"\x06tproxy\x18\x14 \x01(\v2\x18.yuhaiin.listener.tproxyH\x01R\x06tproxy\x12/\n" +
	"\x05redir\x18\x12 \x01(\v2\x17.yuhaiin.listener.redirH\x01R\x05redir\x12)\n" +
	"\x03tun\x18\x13 \x01(\v2\x15.yuhaiin.listener.tunH\x01R\x03tun\x12D\n" +
	"\freverse_http\x18\x16 \x01(\v2\x1e.yuhaiin.listener.reverse_httpH\x01R\freverse_http\x12A\n" +
	"\vreverse_tcp\x18\x17 \x01(\v2\x1d.yuhaiin.listener.reverse_tcpH\x01R\vreverse_tcp\x12-\n" +
	"\x04none\x18\x18 \x01(\v2\x17.yuhaiin.listener.emptyH\x01R\x04noneB\t\n" +
	"\anetworkB\n" +
	"\n" +
	"\bprotocolJ\x04\b\x11\x10\x12R\x04IPv6\"\x9a\x04\n" +
	"\ttransport\x122\n" +
	"\x06normal\x18\f \x01(\v2\x18.yuhaiin.listener.normalH\x00R\x06normal\x12)\n" +
	"\x03tls\x18\x01 \x01(\v2\x15.yuhaiin.listener.tlsH\x00R\x03tls\x12)\n" +
	"\x03mux\x18\x02 \x01(\v2\x15.yuhaiin.listener.muxH\x00R\x03mux\x12/\n" +
	"\x05http2\x18\x05 \x01(\v2\x17.yuhaiin.listener.http2H\x00R\x05http2\x12;\n" +
	"\twebsocket\x18\x06 \x01(\v2\x1b.yuhaiin.listener.websocketH\x00R\twebsocket\x12,\n" +
	"\x04grpc\x18\v \x01(\v2\x16.yuhaiin.listener.grpcH\x00R\x04grpc\x125\n" +
	"\areality\x18\n" +
	" \x01(\v2\x19.yuhaiin.listener.realityH\x00R\areality\x128\n" +
	"\btls_auto\x18\r \x01(\v2\x1a.yuhaiin.listener.tls_autoH\x00R\btls_auto\x12;\n" +
	"\thttp_mock\x18\x0e \x01(\v2\x1b.yuhaiin.listener.http_mockH\x00R\thttp_mock\x12,\n" +
	"\x04aead\x18\x0f \x01(\v2\x16.yuhaiin.listener.aeadH\x00R\x04aeadB\v\n" +
	"\ttransport\"\a\n" +
	"\x05empty\"\x05\n" +
	"\x03mux\"Y\n" +
	"\x06tcpudp\x12\x12\n" +
	"\x04host\x18\x01 \x01(\tR\x04host\x12;\n" +
	"\acontrol\x18\x02 \x01(\x0e2!.yuhaiin.listener.tcp_udp_controlR\acontrol\"Q\n" +
	"\x04quic\x12\x12\n" +
	"\x04host\x18\x01 \x01(\tR\x04host\x125\n" +
	"\x03tls\x18\x03 \x01(\v2#.yuhaiin.protocol.tls_server_configR\x03tls\"J\n" +
	"\x04http\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x04 \x01(\tR\bpasswordJ\x04\b\x01\x10\x02R\x04host\"^\n" +
	"\x06socks5\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x04 \x01(\tR\bpassword\x12\x10\n" +
	"\x03udp\x18\x05 \x01(\bR\x03udpJ\x04\b\x01\x10\x02R\x04host\"1\n" +
	"\asocks4a\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busernameJ\x04\b\x01\x10\x02R\x04host\"K\n" +
	"\x05mixed\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x04 \x01(\tR\bpasswordJ\x04\b\x01\x10\x02R\x04host\"\x1b\n" +
	"\x05redir\x12\x12\n" +
	"\x04host\x18\x01 \x01(\tR\x04host\"f\n" +
	"\x06tproxy\x12\x12\n" +
	"\x04host\x18\x01 \x01(\tR\x04host\x12$\n" +
	"\rdns_hijacking\x18\x02 \x01(\bR\rdns_hijacking\x12\"\n" +
	"\fforce_fakeip\x18\x03 \x01(\bR\fforce_fakeip\"\x93\x01\n" +
	"\ftun_platfrom\x12F\n" +
	"\x06darwin\x18\x01 \x01(\v2..yuhaiin.listener.tun_platfrom.platform_darwinR\x06darwin\x1a;\n" +
	"\x0fplatform_darwin\x12(\n" +
	"\x0fnetwork_service\x18\x01 \x01(\tR\x0fnetwork_service\"\xf3\x03\n" +
	"\x03tun\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x10\n" +
	"\x03mtu\x18\x02 \x01(\x05R\x03mtu\x12\"\n" +
	"\fforce_fakeip\x18\t \x01(\bR\fforce_fakeip\x12&\n" +
	"\x0eskip_multicast\x18\x06 \x01(\bR\x0eskip_multicast\x12=\n" +
	"\x06driver\x18\a \x01(\x0e2%.yuhaiin.listener.tun.endpoint_driverR\x06driver\x12\x16\n" +
	"\x06portal\x18\b \x01(\tR\x06portal\x12\x1c\n" +
	"\tportal_v6\x18\v \x01(\tR\tportal_v6\x12-\n" +
	"\x05route\x18\n" +
	" \x01(\v2\x17.yuhaiin.listener.routeR\x05route\x12\x18\n" +
	"\apost_up\x18\f \x03(\tR\apost_up\x12\x1c\n" +
	"\tpost_down\x18\r \x03(\tR\tpost_down\x12:\n" +
	"\bplatform\x18\x0e \x01(\v2\x1e.yuhaiin.listener.tun_platfromR\bplatform\">\n" +
	"\x0fendpoint_driver\x12\v\n" +
	"\afdbased\x10\x00\x12\v\n" +
	"\achannel\x10\x01\x12\x11\n" +
	"\rsystem_gvisor\x10\x02J\x04\b\x03\x10\x04J\x04\b\x04\x10\x05R\agatewayR\rdns_hijacking\";\n" +
	"\x05route\x12\x16\n" +
	"\x06routes\x18\x01 \x03(\tR\x06routes\x12\x1a\n" +
	"\bexcludes\x18\x02 \x03(\tR\bexcludes\"\x83\x02\n" +
	"\tyuubinsya\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\x12\"\n" +
	"\fudp_coalesce\x18\x0e \x01(\bR\fudp_coalesceJ\x04\b\x01\x10\x02J\x04\b\x03\x10\x04J\x04\b\x04\x10\x05J\x04\b\x05\x10\x06J\x04\b\x06\x10\aJ\x04\b\a\x10\bJ\x04\b\b\x10\tJ\x04\b\t\x10\n" +
	"J\x04\b\n" +
	"\x10\vJ\x04\b\v\x10\fJ\x04\b\f\x10\rJ\x04\b\r\x10\x0eR\x04hostR\x15force_disable_encryptR\x06normalR\x03tlsR\x04quicR\twebsocketR\x04grpcR\x05http2R\arealityR\x03muxR\vtcp_encryptR\vudp_encrypt\"\b\n" +
	"\x06normal\"\x16\n" +
	"\twebsocketJ\x04\b\x01\x10\x02R\x03tls\"<\n" +
	"\x03tls\x125\n" +
	"\x03tls\x18\x01 \x01(\v2#.yuhaiin.protocol.tls_server_configR\x03tls\"\x11\n" +
	"\x04grpcJ\x04\b\x01\x10\x02R\x03tls\"\x12\n" +
	"\x05http2J\x04\b\x01\x10\x02R\x03tls\"\xd7\x01\n" +
	"\areality\x12\x1a\n" +
	"\bshort_id\x18\x01 \x03(\tR\bshort_id\x12 \n" +
	"\vserver_name\x18\x02 \x03(\tR\vserver_name\x12\x12\n" +
	"\x04dest\x18\x03 \x01(\tR\x04dest\x12 \n" +
	"\vprivate_key\x18\x04 \x01(\tR\vprivate_key\x12\x1e\n" +
	"\n" +
	"public_key\x18\x06 \x01(\tR\n" +
	"public_key\x12\"\n" +
	"\fmldsa65_seed\x18\a \x01(\tR\fmldsa65_seed\x12\x14\n" +
	"\x05debug\x18\x05 \x01(\bR\x05debug\"\xb0\x01\n" +
	"\btls_auto\x12 \n" +
	"\vservernames\x18\x01 \x03(\tR\vservernames\x12 \n" +
	"\vnext_protos\x18\x02 \x03(\tR\vnext_protos\x12\x18\n" +
	"\aca_cert\x18\x03 \x01(\fR\aca_cert\x12\x16\n" +
	"\x06ca_key\x18\x04 \x01(\fR\x06ca_key\x12.\n" +
	"\x03ech\x18\x05 \x01(\v2\x1c.yuhaiin.listener.ech_configR\x03ech\"z\n" +
	"\n" +
	"ech_config\x12\x16\n" +
	"\x06enable\x18\x01 \x01(\bR\x06enable\x12\x16\n" +
	"\x06config\x18\x02 \x01(\fR\x06config\x12 \n" +
	"\vprivate_key\x18\x03 \x01(\fR\vprivate_key\x12\x1a\n" +
	"\bOuterSNI\x18\x04 \x01(\tR\bOuterSNI\"!\n" +
	"\x05sniff\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\"P\n" +
	"\freverse_http\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\x12.\n" +
	"\x03tls\x18\x02 \x01(\v2\x1c.yuhaiin.protocol.tls_configR\x03tls\"!\n" +
	"\vreverse_tcp\x12\x12\n" +
	"\x04host\x18\x01 \x01(\tR\x04host\"\x1f\n" +
	"\thttp_mock\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\"\"\n" +
	"\x04aead\x12\x1a\n" +
	"\bpassword\x18\x01 \x01(\tR\bpassword*L\n" +
	"\x0ftcp_udp_control\x12\x17\n" +
	"\x13tcp_udp_control_all\x10\x00\x12\x0f\n" +
	"\vdisable_tcp\x10\x01\x12\x0f\n" +
	"\vdisable_udp\x10\x02BAZ7github.com/Asutorufa/yuhaiin/pkg/protos/config/listener\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_config_listener_listener_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_config_listener_listener_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_config_listener_listener_proto_goTypes = []any{
	(TcpUdpControl)(0),                // 0: yuhaiin.listener.tcp_udp_control
	(TunEndpointDriver)(0),            // 1: yuhaiin.listener.tun.endpoint_driver
	(*InboundConfig)(nil),             // 2: yuhaiin.listener.inbound_config
	(*Inbound)(nil),                   // 3: yuhaiin.listener.inbound
	(*Transport)(nil),                 // 4: yuhaiin.listener.transport
	(*Empty)(nil),                     // 5: yuhaiin.listener.empty
	(*Mux)(nil),                       // 6: yuhaiin.listener.mux
	(*Tcpudp)(nil),                    // 7: yuhaiin.listener.tcpudp
	(*Quic)(nil),                      // 8: yuhaiin.listener.quic
	(*Http)(nil),                      // 9: yuhaiin.listener.http
	(*Socks5)(nil),                    // 10: yuhaiin.listener.socks5
	(*Socks4A)(nil),                   // 11: yuhaiin.listener.socks4a
	(*Mixed)(nil),                     // 12: yuhaiin.listener.mixed
	(*Redir)(nil),                     // 13: yuhaiin.listener.redir
	(*Tproxy)(nil),                    // 14: yuhaiin.listener.tproxy
	(*TunPlatfrom)(nil),               // 15: yuhaiin.listener.tun_platfrom
	(*Tun)(nil),                       // 16: yuhaiin.listener.tun
	(*Route)(nil),                     // 17: yuhaiin.listener.route
	(*Yuubinsya)(nil),                 // 18: yuhaiin.listener.yuubinsya
	(*Normal)(nil),                    // 19: yuhaiin.listener.normal
	(*Websocket)(nil),                 // 20: yuhaiin.listener.websocket
	(*Tls)(nil),                       // 21: yuhaiin.listener.tls
	(*Grpc)(nil),                      // 22: yuhaiin.listener.grpc
	(*Http2)(nil),                     // 23: yuhaiin.listener.http2
	(*Reality)(nil),                   // 24: yuhaiin.listener.reality
	(*TlsAuto)(nil),                   // 25: yuhaiin.listener.tls_auto
	(*EchConfig)(nil),                 // 26: yuhaiin.listener.ech_config
	(*Sniff)(nil),                     // 27: yuhaiin.listener.sniff
	(*ReverseHttp)(nil),               // 28: yuhaiin.listener.reverse_http
	(*ReverseTcp)(nil),                // 29: yuhaiin.listener.reverse_tcp
	(*HttpMock)(nil),                  // 30: yuhaiin.listener.http_mock
	(*Aead)(nil),                      // 31: yuhaiin.listener.aead
	nil,                               // 32: yuhaiin.listener.inbound_config.InboundsEntry
	(*TunPlatfromPlatformDarwin)(nil), // 33: yuhaiin.listener.tun_platfrom.platform_darwin
	(*protocol.TlsServerConfig)(nil),  // 34: yuhaiin.protocol.tls_server_config
	(*protocol.TlsConfig)(nil),        // 35: yuhaiin.protocol.tls_config
}
var file_config_listener_listener_proto_depIdxs = []int32{
	32, // 0: yuhaiin.listener.inbound_config.inbounds:type_name -> yuhaiin.listener.inbound_config.InboundsEntry
	27, // 1: yuhaiin.listener.inbound_config.sniff:type_name -> yuhaiin.listener.sniff
	5,  // 2: yuhaiin.listener.inbound.empty:type_name -> yuhaiin.listener.empty
	7,  // 3: yuhaiin.listener.inbound.tcpudp:type_name -> yuhaiin.listener.tcpudp
	8,  // 4: yuhaiin.listener.inbound.quic:type_name -> yuhaiin.listener.quic
	4,  // 5: yuhaiin.listener.inbound.transport:type_name -> yuhaiin.listener.transport
	9,  // 6: yuhaiin.listener.inbound.http:type_name -> yuhaiin.listener.http
	10, // 7: yuhaiin.listener.inbound.socks5:type_name -> yuhaiin.listener.socks5
	18, // 8: yuhaiin.listener.inbound.yuubinsya:type_name -> yuhaiin.listener.yuubinsya
	12, // 9: yuhaiin.listener.inbound.mix:type_name -> yuhaiin.listener.mixed
	11, // 10: yuhaiin.listener.inbound.socks4a:type_name -> yuhaiin.listener.socks4a
	14, // 11: yuhaiin.listener.inbound.tproxy:type_name -> yuhaiin.listener.tproxy
	13, // 12: yuhaiin.listener.inbound.redir:type_name -> yuhaiin.listener.redir
	16, // 13: yuhaiin.listener.inbound.tun:type_name -> yuhaiin.listener.tun
	28, // 14: yuhaiin.listener.inbound.reverse_http:type_name -> yuhaiin.listener.reverse_http
	29, // 15: yuhaiin.listener.inbound.reverse_tcp:type_name -> yuhaiin.listener.reverse_tcp
	5,  // 16: yuhaiin.listener.inbound.none:type_name -> yuhaiin.listener.empty
	19, // 17: yuhaiin.listener.transport.normal:type_name -> yuhaiin.listener.normal
	21, // 18: yuhaiin.listener.transport.tls:type_name -> yuhaiin.listener.tls
	6,  // 19: yuhaiin.listener.transport.mux:type_name -> yuhaiin.listener.mux
	23, // 20: yuhaiin.listener.transport.http2:type_name -> yuhaiin.listener.http2
	20, // 21: yuhaiin.listener.transport.websocket:type_name -> yuhaiin.listener.websocket
	22, // 22: yuhaiin.listener.transport.grpc:type_name -> yuhaiin.listener.grpc
	24, // 23: yuhaiin.listener.transport.reality:type_name -> yuhaiin.listener.reality
	25, // 24: yuhaiin.listener.transport.tls_auto:type_name -> yuhaiin.listener.tls_auto
	30, // 25: yuhaiin.listener.transport.http_mock:type_name -> yuhaiin.listener.http_mock
	31, // 26: yuhaiin.listener.transport.aead:type_name -> yuhaiin.listener.aead
	0,  // 27: yuhaiin.listener.tcpudp.control:type_name -> yuhaiin.listener.tcp_udp_control
	34, // 28: yuhaiin.listener.quic.tls:type_name -> yuhaiin.protocol.tls_server_config
	33, // 29: yuhaiin.listener.tun_platfrom.darwin:type_name -> yuhaiin.listener.tun_platfrom.platform_darwin
	1,  // 30: yuhaiin.listener.tun.driver:type_name -> yuhaiin.listener.tun.endpoint_driver
	17, // 31: yuhaiin.listener.tun.route:type_name -> yuhaiin.listener.route
	15, // 32: yuhaiin.listener.tun.platform:type_name -> yuhaiin.listener.tun_platfrom
	34, // 33: yuhaiin.listener.tls.tls:type_name -> yuhaiin.protocol.tls_server_config
	26, // 34: yuhaiin.listener.tls_auto.ech:type_name -> yuhaiin.listener.ech_config
	35, // 35: yuhaiin.listener.reverse_http.tls:type_name -> yuhaiin.protocol.tls_config
	3,  // 36: yuhaiin.listener.inbound_config.InboundsEntry.value:type_name -> yuhaiin.listener.inbound
	37, // [37:37] is the sub-list for method output_type
	37, // [37:37] is the sub-list for method input_type
	37, // [37:37] is the sub-list for extension type_name
	37, // [37:37] is the sub-list for extension extendee
	0,  // [0:37] is the sub-list for field type_name
}

func init() { file_config_listener_listener_proto_init() }
func file_config_listener_listener_proto_init() {
	if File_config_listener_listener_proto != nil {
		return
	}
	file_config_listener_listener_proto_msgTypes[1].OneofWrappers = []any{
		(*inbound_Empty)(nil),
		(*inbound_Tcpudp)(nil),
		(*inbound_Quic)(nil),
		(*inbound_Http)(nil),
		(*inbound_Socks5)(nil),
		(*inbound_Yuubinsya)(nil),
		(*inbound_Mix)(nil),
		(*inbound_Socks4A)(nil),
		(*inbound_Tproxy)(nil),
		(*inbound_Redir)(nil),
		(*inbound_Tun)(nil),
		(*inbound_ReverseHttp)(nil),
		(*inbound_ReverseTcp)(nil),
		(*inbound_None)(nil),
	}
	file_config_listener_listener_proto_msgTypes[2].OneofWrappers = []any{
		(*transport_Normal)(nil),
		(*transport_Tls)(nil),
		(*transport_Mux)(nil),
		(*transport_Http2)(nil),
		(*transport_Websocket)(nil),
		(*transport_Grpc)(nil),
		(*transport_Reality)(nil),
		(*transport_TlsAuto)(nil),
		(*transport_HttpMock)(nil),
		(*transport_Aead)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_config_listener_listener_proto_rawDesc), len(file_config_listener_listener_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_config_listener_listener_proto_goTypes,
		DependencyIndexes: file_config_listener_listener_proto_depIdxs,
		EnumInfos:         file_config_listener_listener_proto_enumTypes,
		MessageInfos:      file_config_listener_listener_proto_msgTypes,
	}.Build()
	File_config_listener_listener_proto = out.File
	file_config_listener_listener_proto_goTypes = nil
	file_config_listener_listener_proto_depIdxs = nil
}
