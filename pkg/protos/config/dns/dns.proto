edition = "2023";

package yuhaiin.dns;
import "google/protobuf/go_features.proto";

option go_package = "github.com/Asutorufa/yuhaiin/pkg/protos/config/dns";
option features.(pb.go).api_level = API_OPAQUE;

enum type {
  reserve = 0;
  udp = 1;
  tcp = 2;
  doh = 3;
  dot = 4;
  doq = 5;
  doh3 = 6;
}

message dns {
  string host = 1 [ json_name = "host" ];
  type type = 5 [ json_name = "type" ];
  string subnet = 4 [ json_name = "subnet" ];
  string tls_servername = 2 [ json_name = "tls_servername" ];
}

message dns_config {
  reserved resolve_remote_domai, local, remote, bootstrap;
  reserved 7, 1, 2, 3;
  string server = 4 [ json_name = "server" ];
  bool fakedns = 5 [ json_name = "fakedns" ];
  string fakedns_ip_range = 6 [ json_name = "fakedns_ip_range" ];
  string fakedns_ipv6_range = 13 [ json_name = "fakedns_ipv6_range" ];
  repeated string fakedns_whitelist = 9 [ json_name = "fakedns_whitelist" ];
  map<string, string> hosts = 8 [ json_name = "hosts" ];
  map<string, dns> resolver = 10 [ json_name = "resolver" ];
}

message fakedns_config {
  bool enabled = 1 [ json_name = "enabled" ];
  string ipv4_range = 2 [ json_name = "ipv4_range" ];
  string ipv6_range = 3 [ json_name = "ipv6_range" ];
  repeated string whitelist = 4 [ json_name = "whitelist" ];
}

message server { string host = 1 [ json_name = "host" ]; }

message dns_config_v2 {
  server server = 1 [ json_name = "server" ];
  fakedns_config fakedns = 2 [ json_name = "fakedns" ];
  map<string, string> hosts = 3 [ json_name = "hosts" ];
  map<string, dns> resolver = 4 [ json_name = "resolver" ];
}
