// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: config/bypass.proto

package config

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Mode int32

const (
	Mode_bypass Mode = 0
	Mode_direct Mode = 1
	Mode_proxy  Mode = 2
	Mode_block  Mode = 3
)

// Enum value maps for Mode.
var (
	Mode_name = map[int32]string{
		0: "bypass",
		1: "direct",
		2: "proxy",
		3: "block",
	}
	Mode_value = map[string]int32{
		"bypass": 0,
		"direct": 1,
		"proxy":  2,
		"block":  3,
	}
)

func (x Mode) Enum() *Mode {
	p := new(Mode)
	*p = x
	return p
}

func (x Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_config_bypass_proto_enumTypes[0].Descriptor()
}

func (Mode) Type() protoreflect.EnumType {
	return &file_config_bypass_proto_enumTypes[0]
}

func (x Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type ResolveStrategy int32

const (
	ResolveStrategy_default     ResolveStrategy = 0
	ResolveStrategy_prefer_ipv4 ResolveStrategy = 1
	ResolveStrategy_only_ipv4   ResolveStrategy = 2
	ResolveStrategy_prefer_ipv6 ResolveStrategy = 3
	ResolveStrategy_only_ipv6   ResolveStrategy = 4
)

// Enum value maps for ResolveStrategy.
var (
	ResolveStrategy_name = map[int32]string{
		0: "default",
		1: "prefer_ipv4",
		2: "only_ipv4",
		3: "prefer_ipv6",
		4: "only_ipv6",
	}
	ResolveStrategy_value = map[string]int32{
		"default":     0,
		"prefer_ipv4": 1,
		"only_ipv4":   2,
		"prefer_ipv6": 3,
		"only_ipv6":   4,
	}
)

func (x ResolveStrategy) Enum() *ResolveStrategy {
	p := new(ResolveStrategy)
	*p = x
	return p
}

func (x ResolveStrategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResolveStrategy) Descriptor() protoreflect.EnumDescriptor {
	return file_config_bypass_proto_enumTypes[1].Descriptor()
}

func (ResolveStrategy) Type() protoreflect.EnumType {
	return &file_config_bypass_proto_enumTypes[1]
}

func (x ResolveStrategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type UdpProxyFqdnStrategy int32

const (
	UdpProxyFqdnStrategy_udp_proxy_fqdn_strategy_default UdpProxyFqdnStrategy = 0
	UdpProxyFqdnStrategy_resolve                         UdpProxyFqdnStrategy = 1
	UdpProxyFqdnStrategy_skip_resolve                    UdpProxyFqdnStrategy = 2
)

// Enum value maps for UdpProxyFqdnStrategy.
var (
	UdpProxyFqdnStrategy_name = map[int32]string{
		0: "udp_proxy_fqdn_strategy_default",
		1: "resolve",
		2: "skip_resolve",
	}
	UdpProxyFqdnStrategy_value = map[string]int32{
		"udp_proxy_fqdn_strategy_default": 0,
		"resolve":                         1,
		"skip_resolve":                    2,
	}
)

func (x UdpProxyFqdnStrategy) Enum() *UdpProxyFqdnStrategy {
	p := new(UdpProxyFqdnStrategy)
	*p = x
	return p
}

func (x UdpProxyFqdnStrategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UdpProxyFqdnStrategy) Descriptor() protoreflect.EnumDescriptor {
	return file_config_bypass_proto_enumTypes[2].Descriptor()
}

func (UdpProxyFqdnStrategy) Type() protoreflect.EnumType {
	return &file_config_bypass_proto_enumTypes[2]
}

func (x UdpProxyFqdnStrategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type NetworkNetworkType int32

const (
	Network_unknown NetworkNetworkType = 0
	Network_tcp     NetworkNetworkType = 1
	Network_udp     NetworkNetworkType = 2
)

// Enum value maps for NetworkNetworkType.
var (
	NetworkNetworkType_name = map[int32]string{
		0: "unknown",
		1: "tcp",
		2: "udp",
	}
	NetworkNetworkType_value = map[string]int32{
		"unknown": 0,
		"tcp":     1,
		"udp":     2,
	}
)

func (x NetworkNetworkType) Enum() *NetworkNetworkType {
	p := new(NetworkNetworkType)
	*p = x
	return p
}

func (x NetworkNetworkType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NetworkNetworkType) Descriptor() protoreflect.EnumDescriptor {
	return file_config_bypass_proto_enumTypes[3].Descriptor()
}

func (NetworkNetworkType) Type() protoreflect.EnumType {
	return &file_config_bypass_proto_enumTypes[3]
}

func (x NetworkNetworkType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type ListListTypeEnum int32

const (
	List_host    ListListTypeEnum = 0
	List_process ListListTypeEnum = 1
	// parse hosts file, and just use domain as host list
	List_hosts_as_host ListListTypeEnum = 2
)

// Enum value maps for ListListTypeEnum.
var (
	ListListTypeEnum_name = map[int32]string{
		0: "host",
		1: "process",
		2: "hosts_as_host",
	}
	ListListTypeEnum_value = map[string]int32{
		"host":          0,
		"process":       1,
		"hosts_as_host": 2,
	}
)

func (x ListListTypeEnum) Enum() *ListListTypeEnum {
	p := new(ListListTypeEnum)
	*p = x
	return p
}

func (x ListListTypeEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListListTypeEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_config_bypass_proto_enumTypes[4].Descriptor()
}

func (ListListTypeEnum) Type() protoreflect.EnumType {
	return &file_config_bypass_proto_enumTypes[4]
}

func (x ListListTypeEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type Configv2 struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_UdpProxyFqdn   UdpProxyFqdnStrategy   `protobuf:"varint,1,opt,name=udp_proxy_fqdn,enum=yuhaiin.bypass.UdpProxyFqdnStrategy"`
	xxx_hidden_ResolveLocally bool                   `protobuf:"varint,2,opt,name=resolve_locally"`
	xxx_hidden_DirectResolver *string                `protobuf:"bytes,3,opt,name=direct_resolver"`
	xxx_hidden_ProxyResolver  *string                `protobuf:"bytes,4,opt,name=proxy_resolver"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *Configv2) Reset() {
	*x = Configv2{}
	mi := &file_config_bypass_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Configv2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Configv2) ProtoMessage() {}

func (x *Configv2) ProtoReflect() protoreflect.Message {
	mi := &file_config_bypass_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Configv2) GetUdpProxyFqdn() UdpProxyFqdnStrategy {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_UdpProxyFqdn
		}
	}
	return UdpProxyFqdnStrategy_udp_proxy_fqdn_strategy_default
}

func (x *Configv2) GetResolveLocally() bool {
	if x != nil {
		return x.xxx_hidden_ResolveLocally
	}
	return false
}

func (x *Configv2) GetDirectResolver() string {
	if x != nil {
		if x.xxx_hidden_DirectResolver != nil {
			return *x.xxx_hidden_DirectResolver
		}
		return ""
	}
	return ""
}

func (x *Configv2) GetProxyResolver() string {
	if x != nil {
		if x.xxx_hidden_ProxyResolver != nil {
			return *x.xxx_hidden_ProxyResolver
		}
		return ""
	}
	return ""
}

func (x *Configv2) SetUdpProxyFqdn(v UdpProxyFqdnStrategy) {
	x.xxx_hidden_UdpProxyFqdn = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *Configv2) SetResolveLocally(v bool) {
	x.xxx_hidden_ResolveLocally = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *Configv2) SetDirectResolver(v string) {
	x.xxx_hidden_DirectResolver = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *Configv2) SetProxyResolver(v string) {
	x.xxx_hidden_ProxyResolver = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *Configv2) HasUdpProxyFqdn() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Configv2) HasResolveLocally() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Configv2) HasDirectResolver() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Configv2) HasProxyResolver() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Configv2) ClearUdpProxyFqdn() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_UdpProxyFqdn = UdpProxyFqdnStrategy_udp_proxy_fqdn_strategy_default
}

func (x *Configv2) ClearResolveLocally() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ResolveLocally = false
}

func (x *Configv2) ClearDirectResolver() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_DirectResolver = nil
}

func (x *Configv2) ClearProxyResolver() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ProxyResolver = nil
}

type Configv2_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	UdpProxyFqdn   *UdpProxyFqdnStrategy
	ResolveLocally *bool
	DirectResolver *string
	ProxyResolver  *string
}

func (b0 Configv2_builder) Build() *Configv2 {
	m0 := &Configv2{}
	b, x := &b0, m0
	_, _ = b, x
	if b.UdpProxyFqdn != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_UdpProxyFqdn = *b.UdpProxyFqdn
	}
	if b.ResolveLocally != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_ResolveLocally = *b.ResolveLocally
	}
	if b.DirectResolver != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_DirectResolver = b.DirectResolver
	}
	if b.ProxyResolver != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_ProxyResolver = b.ProxyResolver
	}
	return m0
}

type MaxminddbGeoip struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_DownloadUrl *string                `protobuf:"bytes,1,opt,name=download_url"`
	xxx_hidden_Error       *string                `protobuf:"bytes,2,opt,name=error"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *MaxminddbGeoip) Reset() {
	*x = MaxminddbGeoip{}
	mi := &file_config_bypass_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MaxminddbGeoip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxminddbGeoip) ProtoMessage() {}

func (x *MaxminddbGeoip) ProtoReflect() protoreflect.Message {
	mi := &file_config_bypass_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MaxminddbGeoip) GetDownloadUrl() string {
	if x != nil {
		if x.xxx_hidden_DownloadUrl != nil {
			return *x.xxx_hidden_DownloadUrl
		}
		return ""
	}
	return ""
}

func (x *MaxminddbGeoip) GetError() string {
	if x != nil {
		if x.xxx_hidden_Error != nil {
			return *x.xxx_hidden_Error
		}
		return ""
	}
	return ""
}

func (x *MaxminddbGeoip) SetDownloadUrl(v string) {
	x.xxx_hidden_DownloadUrl = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *MaxminddbGeoip) SetError(v string) {
	x.xxx_hidden_Error = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *MaxminddbGeoip) HasDownloadUrl() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *MaxminddbGeoip) HasError() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *MaxminddbGeoip) ClearDownloadUrl() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_DownloadUrl = nil
}

func (x *MaxminddbGeoip) ClearError() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Error = nil
}

type MaxminddbGeoip_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	DownloadUrl *string
	Error       *string
}

func (b0 MaxminddbGeoip_builder) Build() *MaxminddbGeoip {
	m0 := &MaxminddbGeoip{}
	b, x := &b0, m0
	_, _ = b, x
	if b.DownloadUrl != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_DownloadUrl = b.DownloadUrl
	}
	if b.Error != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Error = b.Error
	}
	return m0
}

type BypassConfig struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_UdpProxyFqdn    UdpProxyFqdnStrategy   `protobuf:"varint,6,opt,name=udp_proxy_fqdn,enum=yuhaiin.bypass.UdpProxyFqdnStrategy"`
	xxx_hidden_ResolveLocally  bool                   `protobuf:"varint,9,opt,name=resolve_locally"`
	xxx_hidden_DirectResolver  *string                `protobuf:"bytes,10,opt,name=direct_resolver"`
	xxx_hidden_ProxyResolver   *string                `protobuf:"bytes,11,opt,name=proxy_resolver"`
	xxx_hidden_RulesV2         *[]*Rulev2             `protobuf:"bytes,12,rep,name=rules_v2"`
	xxx_hidden_Lists           map[string]*List       `protobuf:"bytes,13,rep,name=lists" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_RefreshInterval uint64                 `protobuf:"varint,15,opt,name=refresh_interval"`
	xxx_hidden_MaxminddbGeoip  *MaxminddbGeoip        `protobuf:"bytes,16,opt,name=maxminddb_geoip"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *BypassConfig) Reset() {
	*x = BypassConfig{}
	mi := &file_config_bypass_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BypassConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BypassConfig) ProtoMessage() {}

func (x *BypassConfig) ProtoReflect() protoreflect.Message {
	mi := &file_config_bypass_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BypassConfig) GetUdpProxyFqdn() UdpProxyFqdnStrategy {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_UdpProxyFqdn
		}
	}
	return UdpProxyFqdnStrategy_udp_proxy_fqdn_strategy_default
}

func (x *BypassConfig) GetResolveLocally() bool {
	if x != nil {
		return x.xxx_hidden_ResolveLocally
	}
	return false
}

func (x *BypassConfig) GetDirectResolver() string {
	if x != nil {
		if x.xxx_hidden_DirectResolver != nil {
			return *x.xxx_hidden_DirectResolver
		}
		return ""
	}
	return ""
}

func (x *BypassConfig) GetProxyResolver() string {
	if x != nil {
		if x.xxx_hidden_ProxyResolver != nil {
			return *x.xxx_hidden_ProxyResolver
		}
		return ""
	}
	return ""
}

func (x *BypassConfig) GetRulesV2() []*Rulev2 {
	if x != nil {
		if x.xxx_hidden_RulesV2 != nil {
			return *x.xxx_hidden_RulesV2
		}
	}
	return nil
}

func (x *BypassConfig) GetLists() map[string]*List {
	if x != nil {
		return x.xxx_hidden_Lists
	}
	return nil
}

func (x *BypassConfig) GetRefreshInterval() uint64 {
	if x != nil {
		return x.xxx_hidden_RefreshInterval
	}
	return 0
}

func (x *BypassConfig) GetMaxminddbGeoip() *MaxminddbGeoip {
	if x != nil {
		return x.xxx_hidden_MaxminddbGeoip
	}
	return nil
}

func (x *BypassConfig) SetUdpProxyFqdn(v UdpProxyFqdnStrategy) {
	x.xxx_hidden_UdpProxyFqdn = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 8)
}

func (x *BypassConfig) SetResolveLocally(v bool) {
	x.xxx_hidden_ResolveLocally = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 8)
}

func (x *BypassConfig) SetDirectResolver(v string) {
	x.xxx_hidden_DirectResolver = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 8)
}

func (x *BypassConfig) SetProxyResolver(v string) {
	x.xxx_hidden_ProxyResolver = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 8)
}

func (x *BypassConfig) SetRulesV2(v []*Rulev2) {
	x.xxx_hidden_RulesV2 = &v
}

func (x *BypassConfig) SetLists(v map[string]*List) {
	x.xxx_hidden_Lists = v
}

func (x *BypassConfig) SetRefreshInterval(v uint64) {
	x.xxx_hidden_RefreshInterval = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 8)
}

func (x *BypassConfig) SetMaxminddbGeoip(v *MaxminddbGeoip) {
	x.xxx_hidden_MaxminddbGeoip = v
}

func (x *BypassConfig) HasUdpProxyFqdn() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *BypassConfig) HasResolveLocally() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *BypassConfig) HasDirectResolver() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *BypassConfig) HasProxyResolver() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *BypassConfig) HasRefreshInterval() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *BypassConfig) HasMaxminddbGeoip() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_MaxminddbGeoip != nil
}

func (x *BypassConfig) ClearUdpProxyFqdn() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_UdpProxyFqdn = UdpProxyFqdnStrategy_udp_proxy_fqdn_strategy_default
}

func (x *BypassConfig) ClearResolveLocally() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ResolveLocally = false
}

func (x *BypassConfig) ClearDirectResolver() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_DirectResolver = nil
}

func (x *BypassConfig) ClearProxyResolver() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ProxyResolver = nil
}

func (x *BypassConfig) ClearRefreshInterval() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_RefreshInterval = 0
}

func (x *BypassConfig) ClearMaxminddbGeoip() {
	x.xxx_hidden_MaxminddbGeoip = nil
}

type BypassConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	UdpProxyFqdn *UdpProxyFqdnStrategy
	// resolve domain locally
	ResolveLocally  *bool
	DirectResolver  *string
	ProxyResolver   *string
	RulesV2         []*Rulev2
	Lists           map[string]*List
	RefreshInterval *uint64
	MaxminddbGeoip  *MaxminddbGeoip
}

func (b0 BypassConfig_builder) Build() *BypassConfig {
	m0 := &BypassConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.UdpProxyFqdn != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 8)
		x.xxx_hidden_UdpProxyFqdn = *b.UdpProxyFqdn
	}
	if b.ResolveLocally != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 8)
		x.xxx_hidden_ResolveLocally = *b.ResolveLocally
	}
	if b.DirectResolver != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 8)
		x.xxx_hidden_DirectResolver = b.DirectResolver
	}
	if b.ProxyResolver != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 8)
		x.xxx_hidden_ProxyResolver = b.ProxyResolver
	}
	x.xxx_hidden_RulesV2 = &b.RulesV2
	x.xxx_hidden_Lists = b.Lists
	if b.RefreshInterval != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 8)
		x.xxx_hidden_RefreshInterval = *b.RefreshInterval
	}
	x.xxx_hidden_MaxminddbGeoip = b.MaxminddbGeoip
	return m0
}

type ModeConfig struct {
	state                           protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Mode                 Mode                   `protobuf:"varint,1,opt,name=mode,enum=yuhaiin.bypass.Mode"`
	xxx_hidden_Tag                  *string                `protobuf:"bytes,2,opt,name=tag"`
	xxx_hidden_Hostname             []string               `protobuf:"bytes,3,rep,name=hostname"`
	xxx_hidden_ResolveStrategy      ResolveStrategy        `protobuf:"varint,4,opt,name=resolve_strategy,enum=yuhaiin.bypass.ResolveStrategy"`
	xxx_hidden_UdpProxyFqdnStrategy UdpProxyFqdnStrategy   `protobuf:"varint,6,opt,name=udp_proxy_fqdn_strategy,enum=yuhaiin.bypass.UdpProxyFqdnStrategy"`
	xxx_hidden_Resolver             *string                `protobuf:"bytes,8,opt,name=resolver"`
	xxx_hidden_ErrorMsgs            map[string]string      `protobuf:"bytes,7,rep,name=error_msgs,json=error_msg" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_raceDetectHookData          protoimpl.RaceDetectHookData
	XXX_presence                    [1]uint32
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *ModeConfig) Reset() {
	*x = ModeConfig{}
	mi := &file_config_bypass_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModeConfig) ProtoMessage() {}

func (x *ModeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_config_bypass_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ModeConfig) GetMode() Mode {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_Mode
		}
	}
	return Mode_bypass
}

func (x *ModeConfig) GetTag() string {
	if x != nil {
		if x.xxx_hidden_Tag != nil {
			return *x.xxx_hidden_Tag
		}
		return ""
	}
	return ""
}

func (x *ModeConfig) GetHostname() []string {
	if x != nil {
		return x.xxx_hidden_Hostname
	}
	return nil
}

func (x *ModeConfig) GetResolveStrategy() ResolveStrategy {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 3) {
			return x.xxx_hidden_ResolveStrategy
		}
	}
	return ResolveStrategy_default
}

func (x *ModeConfig) GetUdpProxyFqdnStrategy() UdpProxyFqdnStrategy {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 4) {
			return x.xxx_hidden_UdpProxyFqdnStrategy
		}
	}
	return UdpProxyFqdnStrategy_udp_proxy_fqdn_strategy_default
}

func (x *ModeConfig) GetResolver() string {
	if x != nil {
		if x.xxx_hidden_Resolver != nil {
			return *x.xxx_hidden_Resolver
		}
		return ""
	}
	return ""
}

func (x *ModeConfig) GetErrorMsgs() map[string]string {
	if x != nil {
		return x.xxx_hidden_ErrorMsgs
	}
	return nil
}

func (x *ModeConfig) SetMode(v Mode) {
	x.xxx_hidden_Mode = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *ModeConfig) SetTag(v string) {
	x.xxx_hidden_Tag = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *ModeConfig) SetHostname(v []string) {
	x.xxx_hidden_Hostname = v
}

func (x *ModeConfig) SetResolveStrategy(v ResolveStrategy) {
	x.xxx_hidden_ResolveStrategy = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *ModeConfig) SetUdpProxyFqdnStrategy(v UdpProxyFqdnStrategy) {
	x.xxx_hidden_UdpProxyFqdnStrategy = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *ModeConfig) SetResolver(v string) {
	x.xxx_hidden_Resolver = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 7)
}

func (x *ModeConfig) SetErrorMsgs(v map[string]string) {
	x.xxx_hidden_ErrorMsgs = v
}

func (x *ModeConfig) HasMode() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ModeConfig) HasTag() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ModeConfig) HasResolveStrategy() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ModeConfig) HasUdpProxyFqdnStrategy() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *ModeConfig) HasResolver() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *ModeConfig) ClearMode() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Mode = Mode_bypass
}

func (x *ModeConfig) ClearTag() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Tag = nil
}

func (x *ModeConfig) ClearResolveStrategy() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ResolveStrategy = ResolveStrategy_default
}

func (x *ModeConfig) ClearUdpProxyFqdnStrategy() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_UdpProxyFqdnStrategy = UdpProxyFqdnStrategy_udp_proxy_fqdn_strategy_default
}

func (x *ModeConfig) ClearResolver() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Resolver = nil
}

type ModeConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Mode                 *Mode
	Tag                  *string
	Hostname             []string
	ResolveStrategy      *ResolveStrategy
	UdpProxyFqdnStrategy *UdpProxyFqdnStrategy
	Resolver             *string
	ErrorMsgs            map[string]string
}

func (b0 ModeConfig_builder) Build() *ModeConfig {
	m0 := &ModeConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Mode != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_Mode = *b.Mode
	}
	if b.Tag != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_Tag = b.Tag
	}
	x.xxx_hidden_Hostname = b.Hostname
	if b.ResolveStrategy != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_ResolveStrategy = *b.ResolveStrategy
	}
	if b.UdpProxyFqdnStrategy != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_UdpProxyFqdnStrategy = *b.UdpProxyFqdnStrategy
	}
	if b.Resolver != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 7)
		x.xxx_hidden_Resolver = b.Resolver
	}
	x.xxx_hidden_ErrorMsgs = b.ErrorMsgs
	return m0
}

type RemoteRule struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Enabled     bool                   `protobuf:"varint,1,opt,name=enabled"`
	xxx_hidden_Name        *string                `protobuf:"bytes,2,opt,name=name"`
	xxx_hidden_Object      isRemoteRule_Object    `protobuf_oneof:"object"`
	xxx_hidden_ErrorMsg    *string                `protobuf:"bytes,5,opt,name=error_msg"`
	xxx_hidden_DefaultMode *ModeConfig            `protobuf:"bytes,6,opt,name=default_mode"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *RemoteRule) Reset() {
	*x = RemoteRule{}
	mi := &file_config_bypass_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoteRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteRule) ProtoMessage() {}

func (x *RemoteRule) ProtoReflect() protoreflect.Message {
	mi := &file_config_bypass_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RemoteRule) GetEnabled() bool {
	if x != nil {
		return x.xxx_hidden_Enabled
	}
	return false
}

func (x *RemoteRule) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *RemoteRule) GetFile() *RemoteRuleFile {
	if x != nil {
		if x, ok := x.xxx_hidden_Object.(*remoteRule_File); ok {
			return x.File
		}
	}
	return nil
}

func (x *RemoteRule) GetHttp() *RemoteRuleHttp {
	if x != nil {
		if x, ok := x.xxx_hidden_Object.(*remoteRule_Http); ok {
			return x.Http
		}
	}
	return nil
}

func (x *RemoteRule) GetErrorMsg() string {
	if x != nil {
		if x.xxx_hidden_ErrorMsg != nil {
			return *x.xxx_hidden_ErrorMsg
		}
		return ""
	}
	return ""
}

func (x *RemoteRule) GetDefaultMode() *ModeConfig {
	if x != nil {
		return x.xxx_hidden_DefaultMode
	}
	return nil
}

func (x *RemoteRule) SetEnabled(v bool) {
	x.xxx_hidden_Enabled = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *RemoteRule) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *RemoteRule) SetFile(v *RemoteRuleFile) {
	if v == nil {
		x.xxx_hidden_Object = nil
		return
	}
	x.xxx_hidden_Object = &remoteRule_File{v}
}

func (x *RemoteRule) SetHttp(v *RemoteRuleHttp) {
	if v == nil {
		x.xxx_hidden_Object = nil
		return
	}
	x.xxx_hidden_Object = &remoteRule_Http{v}
}

func (x *RemoteRule) SetErrorMsg(v string) {
	x.xxx_hidden_ErrorMsg = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *RemoteRule) SetDefaultMode(v *ModeConfig) {
	x.xxx_hidden_DefaultMode = v
}

func (x *RemoteRule) HasEnabled() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *RemoteRule) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *RemoteRule) HasObject() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Object != nil
}

func (x *RemoteRule) HasFile() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Object.(*remoteRule_File)
	return ok
}

func (x *RemoteRule) HasHttp() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Object.(*remoteRule_Http)
	return ok
}

func (x *RemoteRule) HasErrorMsg() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *RemoteRule) HasDefaultMode() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DefaultMode != nil
}

func (x *RemoteRule) ClearEnabled() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Enabled = false
}

func (x *RemoteRule) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *RemoteRule) ClearObject() {
	x.xxx_hidden_Object = nil
}

func (x *RemoteRule) ClearFile() {
	if _, ok := x.xxx_hidden_Object.(*remoteRule_File); ok {
		x.xxx_hidden_Object = nil
	}
}

func (x *RemoteRule) ClearHttp() {
	if _, ok := x.xxx_hidden_Object.(*remoteRule_Http); ok {
		x.xxx_hidden_Object = nil
	}
}

func (x *RemoteRule) ClearErrorMsg() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ErrorMsg = nil
}

func (x *RemoteRule) ClearDefaultMode() {
	x.xxx_hidden_DefaultMode = nil
}

const RemoteRule_Object_not_set_case case_RemoteRule_Object = 0
const RemoteRule_File_case case_RemoteRule_Object = 3
const RemoteRule_Http_case case_RemoteRule_Object = 4

func (x *RemoteRule) WhichObject() case_RemoteRule_Object {
	if x == nil {
		return RemoteRule_Object_not_set_case
	}
	switch x.xxx_hidden_Object.(type) {
	case *remoteRule_File:
		return RemoteRule_File_case
	case *remoteRule_Http:
		return RemoteRule_Http_case
	default:
		return RemoteRule_Object_not_set_case
	}
}

type RemoteRule_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Enabled *bool
	Name    *string
	// Fields of oneof xxx_hidden_Object:
	File *RemoteRuleFile
	Http *RemoteRuleHttp
	// -- end of xxx_hidden_Object
	// error message when rules can't get from remote
	ErrorMsg    *string
	DefaultMode *ModeConfig
}

func (b0 RemoteRule_builder) Build() *RemoteRule {
	m0 := &RemoteRule{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Enabled != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_Enabled = *b.Enabled
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Name = b.Name
	}
	if b.File != nil {
		x.xxx_hidden_Object = &remoteRule_File{b.File}
	}
	if b.Http != nil {
		x.xxx_hidden_Object = &remoteRule_Http{b.Http}
	}
	if b.ErrorMsg != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_ErrorMsg = b.ErrorMsg
	}
	x.xxx_hidden_DefaultMode = b.DefaultMode
	return m0
}

type case_RemoteRule_Object protoreflect.FieldNumber

func (x case_RemoteRule_Object) String() string {
	md := file_config_bypass_proto_msgTypes[4].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isRemoteRule_Object interface {
	isRemoteRule_Object()
}

type remoteRule_File struct {
	File *RemoteRuleFile `protobuf:"bytes,3,opt,name=file,oneof"`
}

type remoteRule_Http struct {
	Http *RemoteRuleHttp `protobuf:"bytes,4,opt,name=http,oneof"`
}

func (*remoteRule_File) isRemoteRule_Object() {}

func (*remoteRule_Http) isRemoteRule_Object() {}

type RemoteRuleFile struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Path        *string                `protobuf:"bytes,1,opt,name=path"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *RemoteRuleFile) Reset() {
	*x = RemoteRuleFile{}
	mi := &file_config_bypass_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoteRuleFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteRuleFile) ProtoMessage() {}

func (x *RemoteRuleFile) ProtoReflect() protoreflect.Message {
	mi := &file_config_bypass_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RemoteRuleFile) GetPath() string {
	if x != nil {
		if x.xxx_hidden_Path != nil {
			return *x.xxx_hidden_Path
		}
		return ""
	}
	return ""
}

func (x *RemoteRuleFile) SetPath(v string) {
	x.xxx_hidden_Path = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *RemoteRuleFile) HasPath() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *RemoteRuleFile) ClearPath() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Path = nil
}

type RemoteRuleFile_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Path *string
}

func (b0 RemoteRuleFile_builder) Build() *RemoteRuleFile {
	m0 := &RemoteRuleFile{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Path != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Path = b.Path
	}
	return m0
}

type RemoteRuleHttp struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Url         *string                `protobuf:"bytes,1,opt,name=url"`
	xxx_hidden_Method      *string                `protobuf:"bytes,2,opt,name=method"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *RemoteRuleHttp) Reset() {
	*x = RemoteRuleHttp{}
	mi := &file_config_bypass_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoteRuleHttp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteRuleHttp) ProtoMessage() {}

func (x *RemoteRuleHttp) ProtoReflect() protoreflect.Message {
	mi := &file_config_bypass_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RemoteRuleHttp) GetUrl() string {
	if x != nil {
		if x.xxx_hidden_Url != nil {
			return *x.xxx_hidden_Url
		}
		return ""
	}
	return ""
}

func (x *RemoteRuleHttp) GetMethod() string {
	if x != nil {
		if x.xxx_hidden_Method != nil {
			return *x.xxx_hidden_Method
		}
		return ""
	}
	return ""
}

func (x *RemoteRuleHttp) SetUrl(v string) {
	x.xxx_hidden_Url = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *RemoteRuleHttp) SetMethod(v string) {
	x.xxx_hidden_Method = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *RemoteRuleHttp) HasUrl() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *RemoteRuleHttp) HasMethod() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *RemoteRuleHttp) ClearUrl() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Url = nil
}

func (x *RemoteRuleHttp) ClearMethod() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Method = nil
}

type RemoteRuleHttp_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Url *string
	// method of http request, default: GET
	Method *string
}

func (b0 RemoteRuleHttp_builder) Build() *RemoteRuleHttp {
	m0 := &RemoteRuleHttp{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Url != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Url = b.Url
	}
	if b.Method != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Method = b.Method
	}
	return m0
}

type Host struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_List        *string                `protobuf:"bytes,1,opt,name=list"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Host) Reset() {
	*x = Host{}
	mi := &file_config_bypass_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Host) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Host) ProtoMessage() {}

func (x *Host) ProtoReflect() protoreflect.Message {
	mi := &file_config_bypass_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Host) GetList() string {
	if x != nil {
		if x.xxx_hidden_List != nil {
			return *x.xxx_hidden_List
		}
		return ""
	}
	return ""
}

func (x *Host) SetList(v string) {
	x.xxx_hidden_List = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *Host) HasList() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Host) ClearList() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_List = nil
}

type Host_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	List *string
}

func (b0 Host_builder) Build() *Host {
	m0 := &Host{}
	b, x := &b0, m0
	_, _ = b, x
	if b.List != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_List = b.List
	}
	return m0
}

type Process struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_List        *string                `protobuf:"bytes,1,opt,name=list"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Process) Reset() {
	*x = Process{}
	mi := &file_config_bypass_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Process) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Process) ProtoMessage() {}

func (x *Process) ProtoReflect() protoreflect.Message {
	mi := &file_config_bypass_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Process) GetList() string {
	if x != nil {
		if x.xxx_hidden_List != nil {
			return *x.xxx_hidden_List
		}
		return ""
	}
	return ""
}

func (x *Process) SetList(v string) {
	x.xxx_hidden_List = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *Process) HasList() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Process) ClearList() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_List = nil
}

type Process_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	List *string
}

func (b0 Process_builder) Build() *Process {
	m0 := &Process{}
	b, x := &b0, m0
	_, _ = b, x
	if b.List != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_List = b.List
	}
	return m0
}

type Source struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Names       []string               `protobuf:"bytes,2,rep,name=names"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Source) Reset() {
	*x = Source{}
	mi := &file_config_bypass_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Source) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Source) ProtoMessage() {}

func (x *Source) ProtoReflect() protoreflect.Message {
	mi := &file_config_bypass_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Source) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Source) GetNames() []string {
	if x != nil {
		return x.xxx_hidden_Names
	}
	return nil
}

func (x *Source) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *Source) SetNames(v []string) {
	x.xxx_hidden_Names = v
}

func (x *Source) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Source) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

type Source_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name  *string
	Names []string
}

func (b0 Source_builder) Build() *Source {
	m0 := &Source{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Name = b.Name
	}
	x.xxx_hidden_Names = b.Names
	return m0
}

type Port struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Ports       *string                `protobuf:"bytes,1,opt,name=ports"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Port) Reset() {
	*x = Port{}
	mi := &file_config_bypass_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Port) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Port) ProtoMessage() {}

func (x *Port) ProtoReflect() protoreflect.Message {
	mi := &file_config_bypass_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Port) GetPorts() string {
	if x != nil {
		if x.xxx_hidden_Ports != nil {
			return *x.xxx_hidden_Ports
		}
		return ""
	}
	return ""
}

func (x *Port) SetPorts(v string) {
	x.xxx_hidden_Ports = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *Port) HasPorts() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Port) ClearPorts() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Ports = nil
}

type Port_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// ports splite by ',', e.g. "80,443"
	Ports *string
}

func (b0 Port_builder) Build() *Port {
	m0 := &Port{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Ports != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Ports = b.Ports
	}
	return m0
}

type Geoip struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Countries   *string                `protobuf:"bytes,1,opt,name=countries"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Geoip) Reset() {
	*x = Geoip{}
	mi := &file_config_bypass_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Geoip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Geoip) ProtoMessage() {}

func (x *Geoip) ProtoReflect() protoreflect.Message {
	mi := &file_config_bypass_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Geoip) GetCountries() string {
	if x != nil {
		if x.xxx_hidden_Countries != nil {
			return *x.xxx_hidden_Countries
		}
		return ""
	}
	return ""
}

func (x *Geoip) SetCountries(v string) {
	x.xxx_hidden_Countries = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *Geoip) HasCountries() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Geoip) ClearCountries() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Countries = nil
}

type Geoip_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// countries splite by ',', e.g. "US,CA"
	Countries *string
}

func (b0 Geoip_builder) Build() *Geoip {
	m0 := &Geoip{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Countries != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Countries = b.Countries
	}
	return m0
}

type Rule struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Object isRule_Object          `protobuf_oneof:"object"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Rule) Reset() {
	*x = Rule{}
	mi := &file_config_bypass_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Rule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rule) ProtoMessage() {}

func (x *Rule) ProtoReflect() protoreflect.Message {
	mi := &file_config_bypass_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Rule) GetHost() *Host {
	if x != nil {
		if x, ok := x.xxx_hidden_Object.(*rule_Host); ok {
			return x.Host
		}
	}
	return nil
}

func (x *Rule) GetProcess() *Process {
	if x != nil {
		if x, ok := x.xxx_hidden_Object.(*rule_Process); ok {
			return x.Process
		}
	}
	return nil
}

func (x *Rule) GetInbound() *Source {
	if x != nil {
		if x, ok := x.xxx_hidden_Object.(*rule_Inbound); ok {
			return x.Inbound
		}
	}
	return nil
}

func (x *Rule) GetNetwork() *Network {
	if x != nil {
		if x, ok := x.xxx_hidden_Object.(*rule_Network); ok {
			return x.Network
		}
	}
	return nil
}

func (x *Rule) GetPort() *Port {
	if x != nil {
		if x, ok := x.xxx_hidden_Object.(*rule_Port); ok {
			return x.Port
		}
	}
	return nil
}

func (x *Rule) GetGeoip() *Geoip {
	if x != nil {
		if x, ok := x.xxx_hidden_Object.(*rule_Geoip); ok {
			return x.Geoip
		}
	}
	return nil
}

func (x *Rule) SetHost(v *Host) {
	if v == nil {
		x.xxx_hidden_Object = nil
		return
	}
	x.xxx_hidden_Object = &rule_Host{v}
}

func (x *Rule) SetProcess(v *Process) {
	if v == nil {
		x.xxx_hidden_Object = nil
		return
	}
	x.xxx_hidden_Object = &rule_Process{v}
}

func (x *Rule) SetInbound(v *Source) {
	if v == nil {
		x.xxx_hidden_Object = nil
		return
	}
	x.xxx_hidden_Object = &rule_Inbound{v}
}

func (x *Rule) SetNetwork(v *Network) {
	if v == nil {
		x.xxx_hidden_Object = nil
		return
	}
	x.xxx_hidden_Object = &rule_Network{v}
}

func (x *Rule) SetPort(v *Port) {
	if v == nil {
		x.xxx_hidden_Object = nil
		return
	}
	x.xxx_hidden_Object = &rule_Port{v}
}

func (x *Rule) SetGeoip(v *Geoip) {
	if v == nil {
		x.xxx_hidden_Object = nil
		return
	}
	x.xxx_hidden_Object = &rule_Geoip{v}
}

func (x *Rule) HasObject() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Object != nil
}

func (x *Rule) HasHost() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Object.(*rule_Host)
	return ok
}

func (x *Rule) HasProcess() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Object.(*rule_Process)
	return ok
}

func (x *Rule) HasInbound() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Object.(*rule_Inbound)
	return ok
}

func (x *Rule) HasNetwork() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Object.(*rule_Network)
	return ok
}

func (x *Rule) HasPort() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Object.(*rule_Port)
	return ok
}

func (x *Rule) HasGeoip() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Object.(*rule_Geoip)
	return ok
}

func (x *Rule) ClearObject() {
	x.xxx_hidden_Object = nil
}

func (x *Rule) ClearHost() {
	if _, ok := x.xxx_hidden_Object.(*rule_Host); ok {
		x.xxx_hidden_Object = nil
	}
}

func (x *Rule) ClearProcess() {
	if _, ok := x.xxx_hidden_Object.(*rule_Process); ok {
		x.xxx_hidden_Object = nil
	}
}

func (x *Rule) ClearInbound() {
	if _, ok := x.xxx_hidden_Object.(*rule_Inbound); ok {
		x.xxx_hidden_Object = nil
	}
}

func (x *Rule) ClearNetwork() {
	if _, ok := x.xxx_hidden_Object.(*rule_Network); ok {
		x.xxx_hidden_Object = nil
	}
}

func (x *Rule) ClearPort() {
	if _, ok := x.xxx_hidden_Object.(*rule_Port); ok {
		x.xxx_hidden_Object = nil
	}
}

func (x *Rule) ClearGeoip() {
	if _, ok := x.xxx_hidden_Object.(*rule_Geoip); ok {
		x.xxx_hidden_Object = nil
	}
}

const Rule_Object_not_set_case case_Rule_Object = 0
const Rule_Host_case case_Rule_Object = 1
const Rule_Process_case case_Rule_Object = 2
const Rule_Inbound_case case_Rule_Object = 3
const Rule_Network_case case_Rule_Object = 4
const Rule_Port_case case_Rule_Object = 5
const Rule_Geoip_case case_Rule_Object = 6

func (x *Rule) WhichObject() case_Rule_Object {
	if x == nil {
		return Rule_Object_not_set_case
	}
	switch x.xxx_hidden_Object.(type) {
	case *rule_Host:
		return Rule_Host_case
	case *rule_Process:
		return Rule_Process_case
	case *rule_Inbound:
		return Rule_Inbound_case
	case *rule_Network:
		return Rule_Network_case
	case *rule_Port:
		return Rule_Port_case
	case *rule_Geoip:
		return Rule_Geoip_case
	default:
		return Rule_Object_not_set_case
	}
}

type Rule_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof xxx_hidden_Object:
	Host    *Host
	Process *Process
	Inbound *Source
	Network *Network
	Port    *Port
	Geoip   *Geoip
	// -- end of xxx_hidden_Object
}

func (b0 Rule_builder) Build() *Rule {
	m0 := &Rule{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Host != nil {
		x.xxx_hidden_Object = &rule_Host{b.Host}
	}
	if b.Process != nil {
		x.xxx_hidden_Object = &rule_Process{b.Process}
	}
	if b.Inbound != nil {
		x.xxx_hidden_Object = &rule_Inbound{b.Inbound}
	}
	if b.Network != nil {
		x.xxx_hidden_Object = &rule_Network{b.Network}
	}
	if b.Port != nil {
		x.xxx_hidden_Object = &rule_Port{b.Port}
	}
	if b.Geoip != nil {
		x.xxx_hidden_Object = &rule_Geoip{b.Geoip}
	}
	return m0
}

type case_Rule_Object protoreflect.FieldNumber

func (x case_Rule_Object) String() string {
	md := file_config_bypass_proto_msgTypes[12].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isRule_Object interface {
	isRule_Object()
}

type rule_Host struct {
	Host *Host `protobuf:"bytes,1,opt,name=host,oneof"`
}

type rule_Process struct {
	Process *Process `protobuf:"bytes,2,opt,name=process,oneof"`
}

type rule_Inbound struct {
	Inbound *Source `protobuf:"bytes,3,opt,name=inbound,oneof"`
}

type rule_Network struct {
	Network *Network `protobuf:"bytes,4,opt,name=network,oneof"`
}

type rule_Port struct {
	Port *Port `protobuf:"bytes,5,opt,name=port,oneof"`
}

type rule_Geoip struct {
	Geoip *Geoip `protobuf:"bytes,6,opt,name=geoip,oneof"`
}

func (*rule_Host) isRule_Object() {}

func (*rule_Process) isRule_Object() {}

func (*rule_Inbound) isRule_Object() {}

func (*rule_Network) isRule_Object() {}

func (*rule_Port) isRule_Object() {}

func (*rule_Geoip) isRule_Object() {}

type Network struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Network     NetworkNetworkType     `protobuf:"varint,1,opt,name=network,enum=yuhaiin.bypass.NetworkNetworkType"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Network) Reset() {
	*x = Network{}
	mi := &file_config_bypass_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Network) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Network) ProtoMessage() {}

func (x *Network) ProtoReflect() protoreflect.Message {
	mi := &file_config_bypass_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Network) GetNetwork() NetworkNetworkType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_Network
		}
	}
	return Network_unknown
}

func (x *Network) SetNetwork(v NetworkNetworkType) {
	x.xxx_hidden_Network = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *Network) HasNetwork() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Network) ClearNetwork() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Network = Network_unknown
}

type Network_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Network *NetworkNetworkType
}

func (b0 Network_builder) Build() *Network {
	m0 := &Network{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Network != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Network = *b.Network
	}
	return m0
}

type Or struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Rules *[]*Rule               `protobuf:"bytes,1,rep,name=rules"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Or) Reset() {
	*x = Or{}
	mi := &file_config_bypass_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Or) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Or) ProtoMessage() {}

func (x *Or) ProtoReflect() protoreflect.Message {
	mi := &file_config_bypass_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Or) GetRules() []*Rule {
	if x != nil {
		if x.xxx_hidden_Rules != nil {
			return *x.xxx_hidden_Rules
		}
	}
	return nil
}

func (x *Or) SetRules(v []*Rule) {
	x.xxx_hidden_Rules = &v
}

type Or_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Rules []*Rule
}

func (b0 Or_builder) Build() *Or {
	m0 := &Or{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Rules = &b.Rules
	return m0
}

type Rulev2 struct {
	state                           protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name                 *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Mode                 Mode                   `protobuf:"varint,2,opt,name=mode,enum=yuhaiin.bypass.Mode"`
	xxx_hidden_Tag                  *string                `protobuf:"bytes,3,opt,name=tag"`
	xxx_hidden_ResolveStrategy      ResolveStrategy        `protobuf:"varint,4,opt,name=resolve_strategy,enum=yuhaiin.bypass.ResolveStrategy"`
	xxx_hidden_UdpProxyFqdnStrategy UdpProxyFqdnStrategy   `protobuf:"varint,5,opt,name=udp_proxy_fqdn_strategy,enum=yuhaiin.bypass.UdpProxyFqdnStrategy"`
	xxx_hidden_Resolver             *string                `protobuf:"bytes,6,opt,name=resolver"`
	xxx_hidden_Rules                *[]*Or                 `protobuf:"bytes,7,rep,name=rules"`
	XXX_raceDetectHookData          protoimpl.RaceDetectHookData
	XXX_presence                    [1]uint32
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *Rulev2) Reset() {
	*x = Rulev2{}
	mi := &file_config_bypass_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Rulev2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rulev2) ProtoMessage() {}

func (x *Rulev2) ProtoReflect() protoreflect.Message {
	mi := &file_config_bypass_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Rulev2) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Rulev2) GetMode() Mode {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_Mode
		}
	}
	return Mode_bypass
}

func (x *Rulev2) GetTag() string {
	if x != nil {
		if x.xxx_hidden_Tag != nil {
			return *x.xxx_hidden_Tag
		}
		return ""
	}
	return ""
}

func (x *Rulev2) GetResolveStrategy() ResolveStrategy {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 3) {
			return x.xxx_hidden_ResolveStrategy
		}
	}
	return ResolveStrategy_default
}

func (x *Rulev2) GetUdpProxyFqdnStrategy() UdpProxyFqdnStrategy {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 4) {
			return x.xxx_hidden_UdpProxyFqdnStrategy
		}
	}
	return UdpProxyFqdnStrategy_udp_proxy_fqdn_strategy_default
}

func (x *Rulev2) GetResolver() string {
	if x != nil {
		if x.xxx_hidden_Resolver != nil {
			return *x.xxx_hidden_Resolver
		}
		return ""
	}
	return ""
}

func (x *Rulev2) GetRules() []*Or {
	if x != nil {
		if x.xxx_hidden_Rules != nil {
			return *x.xxx_hidden_Rules
		}
	}
	return nil
}

func (x *Rulev2) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *Rulev2) SetMode(v Mode) {
	x.xxx_hidden_Mode = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *Rulev2) SetTag(v string) {
	x.xxx_hidden_Tag = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *Rulev2) SetResolveStrategy(v ResolveStrategy) {
	x.xxx_hidden_ResolveStrategy = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *Rulev2) SetUdpProxyFqdnStrategy(v UdpProxyFqdnStrategy) {
	x.xxx_hidden_UdpProxyFqdnStrategy = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *Rulev2) SetResolver(v string) {
	x.xxx_hidden_Resolver = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 7)
}

func (x *Rulev2) SetRules(v []*Or) {
	x.xxx_hidden_Rules = &v
}

func (x *Rulev2) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Rulev2) HasMode() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Rulev2) HasTag() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Rulev2) HasResolveStrategy() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Rulev2) HasUdpProxyFqdnStrategy() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Rulev2) HasResolver() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *Rulev2) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *Rulev2) ClearMode() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Mode = Mode_bypass
}

func (x *Rulev2) ClearTag() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Tag = nil
}

func (x *Rulev2) ClearResolveStrategy() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ResolveStrategy = ResolveStrategy_default
}

func (x *Rulev2) ClearUdpProxyFqdnStrategy() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_UdpProxyFqdnStrategy = UdpProxyFqdnStrategy_udp_proxy_fqdn_strategy_default
}

func (x *Rulev2) ClearResolver() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Resolver = nil
}

type Rulev2_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name                 *string
	Mode                 *Mode
	Tag                  *string
	ResolveStrategy      *ResolveStrategy
	UdpProxyFqdnStrategy *UdpProxyFqdnStrategy
	Resolver             *string
	Rules                []*Or
}

func (b0 Rulev2_builder) Build() *Rulev2 {
	m0 := &Rulev2{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_Name = b.Name
	}
	if b.Mode != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_Mode = *b.Mode
	}
	if b.Tag != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_Tag = b.Tag
	}
	if b.ResolveStrategy != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_ResolveStrategy = *b.ResolveStrategy
	}
	if b.UdpProxyFqdnStrategy != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_UdpProxyFqdnStrategy = *b.UdpProxyFqdnStrategy
	}
	if b.Resolver != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 7)
		x.xxx_hidden_Resolver = b.Resolver
	}
	x.xxx_hidden_Rules = &b.Rules
	return m0
}

type List struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ListType    ListListTypeEnum       `protobuf:"varint,1,opt,name=list_type,json=type,enum=yuhaiin.bypass.ListListTypeEnum"`
	xxx_hidden_Name        *string                `protobuf:"bytes,2,opt,name=name"`
	xxx_hidden_List        isList_List            `protobuf_oneof:"list"`
	xxx_hidden_ErrorMsgs   []string               `protobuf:"bytes,5,rep,name=error_msgs"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *List) Reset() {
	*x = List{}
	mi := &file_config_bypass_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*List) ProtoMessage() {}

func (x *List) ProtoReflect() protoreflect.Message {
	mi := &file_config_bypass_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *List) GetListType() ListListTypeEnum {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_ListType
		}
	}
	return List_host
}

func (x *List) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *List) GetLocal() *ListLocal {
	if x != nil {
		if x, ok := x.xxx_hidden_List.(*list_Local); ok {
			return x.Local
		}
	}
	return nil
}

func (x *List) GetRemote() *ListRemote {
	if x != nil {
		if x, ok := x.xxx_hidden_List.(*list_Remote); ok {
			return x.Remote
		}
	}
	return nil
}

func (x *List) GetErrorMsgs() []string {
	if x != nil {
		return x.xxx_hidden_ErrorMsgs
	}
	return nil
}

func (x *List) SetListType(v ListListTypeEnum) {
	x.xxx_hidden_ListType = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *List) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *List) SetLocal(v *ListLocal) {
	if v == nil {
		x.xxx_hidden_List = nil
		return
	}
	x.xxx_hidden_List = &list_Local{v}
}

func (x *List) SetRemote(v *ListRemote) {
	if v == nil {
		x.xxx_hidden_List = nil
		return
	}
	x.xxx_hidden_List = &list_Remote{v}
}

func (x *List) SetErrorMsgs(v []string) {
	x.xxx_hidden_ErrorMsgs = v
}

func (x *List) HasListType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *List) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *List) HasList() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_List != nil
}

func (x *List) HasLocal() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_List.(*list_Local)
	return ok
}

func (x *List) HasRemote() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_List.(*list_Remote)
	return ok
}

func (x *List) ClearListType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ListType = List_host
}

func (x *List) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *List) ClearList() {
	x.xxx_hidden_List = nil
}

func (x *List) ClearLocal() {
	if _, ok := x.xxx_hidden_List.(*list_Local); ok {
		x.xxx_hidden_List = nil
	}
}

func (x *List) ClearRemote() {
	if _, ok := x.xxx_hidden_List.(*list_Remote); ok {
		x.xxx_hidden_List = nil
	}
}

const List_List_not_set_case case_List_List = 0
const List_Local_case case_List_List = 3
const List_Remote_case case_List_List = 4

func (x *List) WhichList() case_List_List {
	if x == nil {
		return List_List_not_set_case
	}
	switch x.xxx_hidden_List.(type) {
	case *list_Local:
		return List_Local_case
	case *list_Remote:
		return List_Remote_case
	default:
		return List_List_not_set_case
	}
}

type List_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ListType *ListListTypeEnum
	Name     *string
	// Fields of oneof xxx_hidden_List:
	Local  *ListLocal
	Remote *ListRemote
	// -- end of xxx_hidden_List
	ErrorMsgs []string
}

func (b0 List_builder) Build() *List {
	m0 := &List{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ListType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_ListType = *b.ListType
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Name = b.Name
	}
	if b.Local != nil {
		x.xxx_hidden_List = &list_Local{b.Local}
	}
	if b.Remote != nil {
		x.xxx_hidden_List = &list_Remote{b.Remote}
	}
	x.xxx_hidden_ErrorMsgs = b.ErrorMsgs
	return m0
}

type case_List_List protoreflect.FieldNumber

func (x case_List_List) String() string {
	md := file_config_bypass_proto_msgTypes[16].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isList_List interface {
	isList_List()
}

type list_Local struct {
	Local *ListLocal `protobuf:"bytes,3,opt,name=local,oneof"`
}

type list_Remote struct {
	Remote *ListRemote `protobuf:"bytes,4,opt,name=remote,oneof"`
}

func (*list_Local) isList_List() {}

func (*list_Remote) isList_List() {}

type ListLocal struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Lists []string               `protobuf:"bytes,1,rep,name=lists"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ListLocal) Reset() {
	*x = ListLocal{}
	mi := &file_config_bypass_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLocal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLocal) ProtoMessage() {}

func (x *ListLocal) ProtoReflect() protoreflect.Message {
	mi := &file_config_bypass_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListLocal) GetLists() []string {
	if x != nil {
		return x.xxx_hidden_Lists
	}
	return nil
}

func (x *ListLocal) SetLists(v []string) {
	x.xxx_hidden_Lists = v
}

type ListLocal_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Lists []string
}

func (b0 ListLocal_builder) Build() *ListLocal {
	m0 := &ListLocal{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Lists = b.Lists
	return m0
}

type ListRemote struct {
	state           protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Urls []string               `protobuf:"bytes,1,rep,name=urls"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListRemote) Reset() {
	*x = ListRemote{}
	mi := &file_config_bypass_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRemote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRemote) ProtoMessage() {}

func (x *ListRemote) ProtoReflect() protoreflect.Message {
	mi := &file_config_bypass_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListRemote) GetUrls() []string {
	if x != nil {
		return x.xxx_hidden_Urls
	}
	return nil
}

func (x *ListRemote) SetUrls(v []string) {
	x.xxx_hidden_Urls = v
}

type ListRemote_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Urls []string
}

func (b0 ListRemote_builder) Build() *ListRemote {
	m0 := &ListRemote{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Urls = b.Urls
	return m0
}

var File_config_bypass_proto protoreflect.FileDescriptor

const file_config_bypass_proto_rawDesc = "" +
	"\n" +
	"\x13config/bypass.proto\x12\x0eyuhaiin.bypass\x1a!google/protobuf/go_features.proto\"\xd7\x01\n" +
	"\bconfigv2\x12O\n" +
	"\x0eudp_proxy_fqdn\x18\x01 \x01(\x0e2'.yuhaiin.bypass.udp_proxy_fqdn_strategyR\x0eudp_proxy_fqdn\x12(\n" +
	"\x0fresolve_locally\x18\x02 \x01(\bR\x0fresolve_locally\x12(\n" +
	"\x0fdirect_resolver\x18\x03 \x01(\tR\x0fdirect_resolver\x12&\n" +
	"\x0eproxy_resolver\x18\x04 \x01(\tR\x0eproxy_resolver\"K\n" +
	"\x0fmaxminddb_geoip\x12\"\n" +
	"\fdownload_url\x18\x01 \x01(\tR\fdownload_url\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"\x97\x04\n" +
	"\rbypass_config\x12O\n" +
	"\x0eudp_proxy_fqdn\x18\x06 \x01(\x0e2'.yuhaiin.bypass.udp_proxy_fqdn_strategyR\x0eudp_proxy_fqdn\x12(\n" +
	"\x0fresolve_locally\x18\t \x01(\bR\x0fresolve_locally\x12(\n" +
	"\x0fdirect_resolver\x18\n" +
	" \x01(\tR\x0fdirect_resolver\x12&\n" +
	"\x0eproxy_resolver\x18\v \x01(\tR\x0eproxy_resolver\x122\n" +
	"\brules_v2\x18\f \x03(\v2\x16.yuhaiin.bypass.rulev2R\brules_v2\x12>\n" +
	"\x05lists\x18\r \x03(\v2(.yuhaiin.bypass.bypass_config.ListsEntryR\x05lists\x12*\n" +
	"\x10refresh_interval\x18\x0f \x01(\x04R\x10refresh_interval\x12I\n" +
	"\x0fmaxminddb_geoip\x18\x10 \x01(\v2\x1f.yuhaiin.bypass.maxminddb_geoipR\x0fmaxminddb_geoip\x1aN\n" +
	"\n" +
	"ListsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12*\n" +
	"\x05value\x18\x02 \x01(\v2\x14.yuhaiin.bypass.listR\x05value:\x028\x01\"\xd1\x03\n" +
	"\vmode_config\x12(\n" +
	"\x04mode\x18\x01 \x01(\x0e2\x14.yuhaiin.bypass.modeR\x04mode\x12\x10\n" +
	"\x03tag\x18\x02 \x01(\tR\x03tag\x12\x1a\n" +
	"\bhostname\x18\x03 \x03(\tR\bhostname\x12L\n" +
	"\x10resolve_strategy\x18\x04 \x01(\x0e2 .yuhaiin.bypass.resolve_strategyR\x10resolve_strategy\x12a\n" +
	"\x17udp_proxy_fqdn_strategy\x18\x06 \x01(\x0e2'.yuhaiin.bypass.udp_proxy_fqdn_strategyR\x17udp_proxy_fqdn_strategy\x12\x1a\n" +
	"\bresolver\x18\b \x01(\tR\bresolver\x12I\n" +
	"\n" +
	"error_msgs\x18\a \x03(\v2*.yuhaiin.bypass.mode_config.ErrorMsgsEntryR\terror_msg\x1a<\n" +
	"\x0eErrorMsgsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01J\x04\b\x05\x10\x06R\x0eudp_proxy_fqdn\"\x94\x02\n" +
	"\vremote_rule\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x126\n" +
	"\x04file\x18\x03 \x01(\v2 .yuhaiin.bypass.remote_rule_fileH\x00R\x04file\x126\n" +
	"\x04http\x18\x04 \x01(\v2 .yuhaiin.bypass.remote_rule_httpH\x00R\x04http\x12\x1c\n" +
	"\terror_msg\x18\x05 \x01(\tR\terror_msg\x12?\n" +
	"\fdefault_mode\x18\x06 \x01(\v2\x1b.yuhaiin.bypass.mode_configR\fdefault_modeB\b\n" +
	"\x06object\"&\n" +
	"\x10remote_rule_file\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\"<\n" +
	"\x10remote_rule_http\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\x12\x16\n" +
	"\x06method\x18\x02 \x01(\tR\x06method\"\x1a\n" +
	"\x04host\x12\x12\n" +
	"\x04list\x18\x01 \x01(\tR\x04list\"\x1d\n" +
	"\aprocess\x12\x12\n" +
	"\x04list\x18\x01 \x01(\tR\x04list\"2\n" +
	"\x06source\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05names\x18\x02 \x03(\tR\x05names\"\x1c\n" +
	"\x04port\x12\x14\n" +
	"\x05ports\x18\x01 \x01(\tR\x05ports\"%\n" +
	"\x05geoip\x12\x1c\n" +
	"\tcountries\x18\x01 \x01(\tR\tcountries\"\xb5\x02\n" +
	"\x04rule\x12*\n" +
	"\x04host\x18\x01 \x01(\v2\x14.yuhaiin.bypass.hostH\x00R\x04host\x123\n" +
	"\aprocess\x18\x02 \x01(\v2\x17.yuhaiin.bypass.processH\x00R\aprocess\x122\n" +
	"\ainbound\x18\x03 \x01(\v2\x16.yuhaiin.bypass.sourceH\x00R\ainbound\x123\n" +
	"\anetwork\x18\x04 \x01(\v2\x17.yuhaiin.bypass.networkH\x00R\anetwork\x12*\n" +
	"\x04port\x18\x05 \x01(\v2\x14.yuhaiin.bypass.portH\x00R\x04port\x12-\n" +
	"\x05geoip\x18\x06 \x01(\v2\x15.yuhaiin.bypass.geoipH\x00R\x05geoipB\b\n" +
	"\x06object\"x\n" +
	"\anetwork\x12>\n" +
	"\anetwork\x18\x01 \x01(\x0e2$.yuhaiin.bypass.network.network_typeR\anetwork\"-\n" +
	"\fnetwork_type\x12\v\n" +
	"\aunknown\x10\x00\x12\a\n" +
	"\x03tcp\x10\x01\x12\a\n" +
	"\x03udp\x10\x02\"0\n" +
	"\x02or\x12*\n" +
	"\x05rules\x18\x01 \x03(\v2\x14.yuhaiin.bypass.ruleR\x05rules\"\xcf\x02\n" +
	"\x06rulev2\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12(\n" +
	"\x04mode\x18\x02 \x01(\x0e2\x14.yuhaiin.bypass.modeR\x04mode\x12\x10\n" +
	"\x03tag\x18\x03 \x01(\tR\x03tag\x12L\n" +
	"\x10resolve_strategy\x18\x04 \x01(\x0e2 .yuhaiin.bypass.resolve_strategyR\x10resolve_strategy\x12a\n" +
	"\x17udp_proxy_fqdn_strategy\x18\x05 \x01(\x0e2'.yuhaiin.bypass.udp_proxy_fqdn_strategyR\x17udp_proxy_fqdn_strategy\x12\x1a\n" +
	"\bresolver\x18\x06 \x01(\tR\bresolver\x12(\n" +
	"\x05rules\x18\a \x03(\v2\x12.yuhaiin.bypass.orR\x05rules\"\xa7\x02\n" +
	"\x04list\x12<\n" +
	"\tlist_type\x18\x01 \x01(\x0e2#.yuhaiin.bypass.list.list_type_enumR\x04type\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x122\n" +
	"\x05local\x18\x03 \x01(\v2\x1a.yuhaiin.bypass.list_localH\x00R\x05local\x125\n" +
	"\x06remote\x18\x04 \x01(\v2\x1b.yuhaiin.bypass.list_remoteH\x00R\x06remote\x12\x1e\n" +
	"\n" +
	"error_msgs\x18\x05 \x03(\tR\n" +
	"error_msgs\":\n" +
	"\x0elist_type_enum\x12\b\n" +
	"\x04host\x10\x00\x12\v\n" +
	"\aprocess\x10\x01\x12\x11\n" +
	"\rhosts_as_host\x10\x02B\x06\n" +
	"\x04list\"\"\n" +
	"\n" +
	"list_local\x12\x14\n" +
	"\x05lists\x18\x01 \x03(\tR\x05lists\"!\n" +
	"\vlist_remote\x12\x12\n" +
	"\x04urls\x18\x01 \x03(\tR\x04urls*4\n" +
	"\x04mode\x12\n" +
	"\n" +
	"\x06bypass\x10\x00\x12\n" +
	"\n" +
	"\x06direct\x10\x01\x12\t\n" +
	"\x05proxy\x10\x02\x12\t\n" +
	"\x05block\x10\x03*_\n" +
	"\x10resolve_strategy\x12\v\n" +
	"\adefault\x10\x00\x12\x0f\n" +
	"\vprefer_ipv4\x10\x01\x12\r\n" +
	"\tonly_ipv4\x10\x02\x12\x0f\n" +
	"\vprefer_ipv6\x10\x03\x12\r\n" +
	"\tonly_ipv6\x10\x04*]\n" +
	"\x17udp_proxy_fqdn_strategy\x12#\n" +
	"\x1fudp_proxy_fqdn_strategy_default\x10\x00\x12\v\n" +
	"\aresolve\x10\x01\x12\x10\n" +
	"\fskip_resolve\x10\x02B8Z.github.com/Asutorufa/yuhaiin/pkg/protos/config\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_config_bypass_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_config_bypass_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_config_bypass_proto_goTypes = []any{
	(Mode)(0),                 // 0: yuhaiin.bypass.mode
	(ResolveStrategy)(0),      // 1: yuhaiin.bypass.resolve_strategy
	(UdpProxyFqdnStrategy)(0), // 2: yuhaiin.bypass.udp_proxy_fqdn_strategy
	(NetworkNetworkType)(0),   // 3: yuhaiin.bypass.network.network_type
	(ListListTypeEnum)(0),     // 4: yuhaiin.bypass.list.list_type_enum
	(*Configv2)(nil),          // 5: yuhaiin.bypass.configv2
	(*MaxminddbGeoip)(nil),    // 6: yuhaiin.bypass.maxminddb_geoip
	(*BypassConfig)(nil),      // 7: yuhaiin.bypass.bypass_config
	(*ModeConfig)(nil),        // 8: yuhaiin.bypass.mode_config
	(*RemoteRule)(nil),        // 9: yuhaiin.bypass.remote_rule
	(*RemoteRuleFile)(nil),    // 10: yuhaiin.bypass.remote_rule_file
	(*RemoteRuleHttp)(nil),    // 11: yuhaiin.bypass.remote_rule_http
	(*Host)(nil),              // 12: yuhaiin.bypass.host
	(*Process)(nil),           // 13: yuhaiin.bypass.process
	(*Source)(nil),            // 14: yuhaiin.bypass.source
	(*Port)(nil),              // 15: yuhaiin.bypass.port
	(*Geoip)(nil),             // 16: yuhaiin.bypass.geoip
	(*Rule)(nil),              // 17: yuhaiin.bypass.rule
	(*Network)(nil),           // 18: yuhaiin.bypass.network
	(*Or)(nil),                // 19: yuhaiin.bypass.or
	(*Rulev2)(nil),            // 20: yuhaiin.bypass.rulev2
	(*List)(nil),              // 21: yuhaiin.bypass.list
	(*ListLocal)(nil),         // 22: yuhaiin.bypass.list_local
	(*ListRemote)(nil),        // 23: yuhaiin.bypass.list_remote
	nil,                       // 24: yuhaiin.bypass.bypass_config.ListsEntry
	nil,                       // 25: yuhaiin.bypass.mode_config.ErrorMsgsEntry
}
var file_config_bypass_proto_depIdxs = []int32{
	2,  // 0: yuhaiin.bypass.configv2.udp_proxy_fqdn:type_name -> yuhaiin.bypass.udp_proxy_fqdn_strategy
	2,  // 1: yuhaiin.bypass.bypass_config.udp_proxy_fqdn:type_name -> yuhaiin.bypass.udp_proxy_fqdn_strategy
	20, // 2: yuhaiin.bypass.bypass_config.rules_v2:type_name -> yuhaiin.bypass.rulev2
	24, // 3: yuhaiin.bypass.bypass_config.lists:type_name -> yuhaiin.bypass.bypass_config.ListsEntry
	6,  // 4: yuhaiin.bypass.bypass_config.maxminddb_geoip:type_name -> yuhaiin.bypass.maxminddb_geoip
	0,  // 5: yuhaiin.bypass.mode_config.mode:type_name -> yuhaiin.bypass.mode
	1,  // 6: yuhaiin.bypass.mode_config.resolve_strategy:type_name -> yuhaiin.bypass.resolve_strategy
	2,  // 7: yuhaiin.bypass.mode_config.udp_proxy_fqdn_strategy:type_name -> yuhaiin.bypass.udp_proxy_fqdn_strategy
	25, // 8: yuhaiin.bypass.mode_config.error_msgs:type_name -> yuhaiin.bypass.mode_config.ErrorMsgsEntry
	10, // 9: yuhaiin.bypass.remote_rule.file:type_name -> yuhaiin.bypass.remote_rule_file
	11, // 10: yuhaiin.bypass.remote_rule.http:type_name -> yuhaiin.bypass.remote_rule_http
	8,  // 11: yuhaiin.bypass.remote_rule.default_mode:type_name -> yuhaiin.bypass.mode_config
	12, // 12: yuhaiin.bypass.rule.host:type_name -> yuhaiin.bypass.host
	13, // 13: yuhaiin.bypass.rule.process:type_name -> yuhaiin.bypass.process
	14, // 14: yuhaiin.bypass.rule.inbound:type_name -> yuhaiin.bypass.source
	18, // 15: yuhaiin.bypass.rule.network:type_name -> yuhaiin.bypass.network
	15, // 16: yuhaiin.bypass.rule.port:type_name -> yuhaiin.bypass.port
	16, // 17: yuhaiin.bypass.rule.geoip:type_name -> yuhaiin.bypass.geoip
	3,  // 18: yuhaiin.bypass.network.network:type_name -> yuhaiin.bypass.network.network_type
	17, // 19: yuhaiin.bypass.or.rules:type_name -> yuhaiin.bypass.rule
	0,  // 20: yuhaiin.bypass.rulev2.mode:type_name -> yuhaiin.bypass.mode
	1,  // 21: yuhaiin.bypass.rulev2.resolve_strategy:type_name -> yuhaiin.bypass.resolve_strategy
	2,  // 22: yuhaiin.bypass.rulev2.udp_proxy_fqdn_strategy:type_name -> yuhaiin.bypass.udp_proxy_fqdn_strategy
	19, // 23: yuhaiin.bypass.rulev2.rules:type_name -> yuhaiin.bypass.or
	4,  // 24: yuhaiin.bypass.list.list_type:type_name -> yuhaiin.bypass.list.list_type_enum
	22, // 25: yuhaiin.bypass.list.local:type_name -> yuhaiin.bypass.list_local
	23, // 26: yuhaiin.bypass.list.remote:type_name -> yuhaiin.bypass.list_remote
	21, // 27: yuhaiin.bypass.bypass_config.ListsEntry.value:type_name -> yuhaiin.bypass.list
	28, // [28:28] is the sub-list for method output_type
	28, // [28:28] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_config_bypass_proto_init() }
func file_config_bypass_proto_init() {
	if File_config_bypass_proto != nil {
		return
	}
	file_config_bypass_proto_msgTypes[4].OneofWrappers = []any{
		(*remoteRule_File)(nil),
		(*remoteRule_Http)(nil),
	}
	file_config_bypass_proto_msgTypes[12].OneofWrappers = []any{
		(*rule_Host)(nil),
		(*rule_Process)(nil),
		(*rule_Inbound)(nil),
		(*rule_Network)(nil),
		(*rule_Port)(nil),
		(*rule_Geoip)(nil),
	}
	file_config_bypass_proto_msgTypes[16].OneofWrappers = []any{
		(*list_Local)(nil),
		(*list_Remote)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_config_bypass_proto_rawDesc), len(file_config_bypass_proto_rawDesc)),
			NumEnums:      5,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_config_bypass_proto_goTypes,
		DependencyIndexes: file_config_bypass_proto_depIdxs,
		EnumInfos:         file_config_bypass_proto_enumTypes,
		MessageInfos:      file_config_bypass_proto_msgTypes,
	}.Build()
	File_config_bypass_proto = out.File
	file_config_bypass_proto_goTypes = nil
	file_config_bypass_proto_depIdxs = nil
}
