edition = "2023";

package yuhaiin.backup;
import "google/protobuf/go_features.proto";
import "google/protobuf/empty.proto";
import "config/config.proto";
import "node/node.proto";

option go_package = "github.com/Asutorufa/yuhaiin/pkg/protos/backup";
option features.(pb.go).api_level = API_OPAQUE;

message s3 {
    bool enabled = 1 [json_name = "enabled"];
    string access_key = 2 [json_name = "access_key"];
    string secret_key = 3 [json_name = "secret_key"];
    string bucket = 4 [json_name = "bucket"];
    string region = 5 [json_name = "region"];
    string endpoint_url = 6 [json_name = "endpoint_url"];
    bool use_path_style = 7 [json_name = "use_path_style"];
}

message backup_option {
    s3 s3 = 1 [json_name = "s3"];
}

message backup_content {
    yuhaiin.config.setting config = 1 [json_name = "config"];
    yuhaiin.node.node node = 2 [json_name = "node"];
}

message restore_option {
    bool all = 1 [json_name = "all"];
    bool bypass_rule = 2 [json_name = "bypass_rule"];
    bool bypass_list = 3 [json_name = "bypass_list"];
    bool node = 4 [json_name = "node"];
    bool tag = 5 [json_name = "tag"];
    bool resolver = 6 [json_name = "resolver"];
    bool inbound = 7 [json_name = "inbound"];

    enum restore_source {
        unknown = 0;
        s3 = 1;
    }
    restore_source source = 8 [json_name = "source"];
}

service backup {
    rpc save(backup_option) returns (google.protobuf.Empty);
    rpc backup(google.protobuf.Empty) returns (google.protobuf.Empty);
    rpc restore(restore_option) returns (google.protobuf.Empty);
}