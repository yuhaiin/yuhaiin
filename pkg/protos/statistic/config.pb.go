// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v5.29.2
// source: statistic/config.proto

package statistic

import (
	bypass "github.com/Asutorufa/yuhaiin/pkg/protos/config/bypass"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// "tcp", "tcp4", "tcp6"
// "udp", "udp4", "udp6"
// "ip", "ip4", "ip6"
// "unix", "unixgram", "unixpacket"
type Type int32

const (
	Type_unknown    Type = 0
	Type_tcp        Type = 1
	Type_tcp4       Type = 2
	Type_tcp6       Type = 3
	Type_udp        Type = 4
	Type_udp4       Type = 5
	Type_udp6       Type = 6
	Type_ip         Type = 7
	Type_ip4        Type = 8
	Type_ip6        Type = 9
	Type_unix       Type = 10
	Type_unixgram   Type = 11
	Type_unixpacket Type = 12
)

// Enum value maps for Type.
var (
	Type_name = map[int32]string{
		0:  "unknown",
		1:  "tcp",
		2:  "tcp4",
		3:  "tcp6",
		4:  "udp",
		5:  "udp4",
		6:  "udp6",
		7:  "ip",
		8:  "ip4",
		9:  "ip6",
		10: "unix",
		11: "unixgram",
		12: "unixpacket",
	}
	Type_value = map[string]int32{
		"unknown":    0,
		"tcp":        1,
		"tcp4":       2,
		"tcp6":       3,
		"udp":        4,
		"udp4":       5,
		"udp6":       6,
		"ip":         7,
		"ip4":        8,
		"ip6":        9,
		"unix":       10,
		"unixgram":   11,
		"unixpacket": 12,
	}
)

func (x Type) Enum() *Type {
	p := new(Type)
	*p = x
	return p
}

func (x Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Type) Descriptor() protoreflect.EnumDescriptor {
	return file_statistic_config_proto_enumTypes[0].Descriptor()
}

func (Type) Type() protoreflect.EnumType {
	return &file_statistic_config_proto_enumTypes[0]
}

func (x Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type NetType struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ConnType       Type                   `protobuf:"varint,1,opt,name=conn_type,enum=yuhaiin.statistic.Type"`
	xxx_hidden_UnderlyingType Type                   `protobuf:"varint,2,opt,name=underlying_type,enum=yuhaiin.statistic.Type"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *NetType) Reset() {
	*x = NetType{}
	mi := &file_statistic_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetType) ProtoMessage() {}

func (x *NetType) ProtoReflect() protoreflect.Message {
	mi := &file_statistic_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NetType) GetConnType() Type {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_ConnType
		}
	}
	return Type_unknown
}

func (x *NetType) GetUnderlyingType() Type {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_UnderlyingType
		}
	}
	return Type_unknown
}

func (x *NetType) SetConnType(v Type) {
	x.xxx_hidden_ConnType = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *NetType) SetUnderlyingType(v Type) {
	x.xxx_hidden_UnderlyingType = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *NetType) HasConnType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *NetType) HasUnderlyingType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *NetType) ClearConnType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ConnType = Type_unknown
}

func (x *NetType) ClearUnderlyingType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_UnderlyingType = Type_unknown
}

type NetType_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ConnType       *Type
	UnderlyingType *Type
}

func (b0 NetType_builder) Build() *NetType {
	m0 := &NetType{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ConnType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_ConnType = *b.ConnType
	}
	if b.UnderlyingType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_UnderlyingType = *b.UnderlyingType
	}
	return m0
}

type Connection struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Addr          *string                `protobuf:"bytes,1,opt,name=addr"`
	xxx_hidden_Id            uint64                 `protobuf:"varint,2,opt,name=id"`
	xxx_hidden_Type          *NetType               `protobuf:"bytes,3,opt,name=type"`
	xxx_hidden_Source        *string                `protobuf:"bytes,5,opt,name=source"`
	xxx_hidden_Inbound       *string                `protobuf:"bytes,6,opt,name=inbound"`
	xxx_hidden_Outbound      *string                `protobuf:"bytes,24,opt,name=outbound"`
	xxx_hidden_LocalAddr     *string                `protobuf:"bytes,26,opt,name=local_addr,json=LocalAddr"`
	xxx_hidden_Destionation  *string                `protobuf:"bytes,7,opt,name=destionation"`
	xxx_hidden_FakeIp        *string                `protobuf:"bytes,8,opt,name=fake_ip"`
	xxx_hidden_Hosts         *string                `protobuf:"bytes,9,opt,name=hosts"`
	xxx_hidden_Domain        *string                `protobuf:"bytes,10,opt,name=domain"`
	xxx_hidden_Ip            *string                `protobuf:"bytes,11,opt,name=ip"`
	xxx_hidden_Tag           *string                `protobuf:"bytes,12,opt,name=tag"`
	xxx_hidden_Hash          *string                `protobuf:"bytes,13,opt,name=hash"`
	xxx_hidden_NodeName      *string                `protobuf:"bytes,25,opt,name=node_name"`
	xxx_hidden_Protocol      *string                `protobuf:"bytes,14,opt,name=protocol"`
	xxx_hidden_Process       *string                `protobuf:"bytes,15,opt,name=process"`
	xxx_hidden_Pid           uint64                 `protobuf:"varint,16,opt,name=pid"`
	xxx_hidden_Uid           uint64                 `protobuf:"varint,17,opt,name=uid"`
	xxx_hidden_TlsServerName *string                `protobuf:"bytes,18,opt,name=tls_server_name"`
	xxx_hidden_HttpHost      *string                `protobuf:"bytes,19,opt,name=http_host"`
	xxx_hidden_Component     *string                `protobuf:"bytes,20,opt,name=component"`
	xxx_hidden_UdpMigrateId  uint64                 `protobuf:"varint,21,opt,name=udp_migrate_id"`
	xxx_hidden_Mode          bypass.Mode            `protobuf:"varint,22,opt,name=mode,enum=yuhaiin.bypass.Mode"`
	xxx_hidden_ModeReason    *string                `protobuf:"bytes,23,opt,name=mode_reason"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *Connection) Reset() {
	*x = Connection{}
	mi := &file_statistic_config_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Connection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Connection) ProtoMessage() {}

func (x *Connection) ProtoReflect() protoreflect.Message {
	mi := &file_statistic_config_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Connection) GetAddr() string {
	if x != nil {
		if x.xxx_hidden_Addr != nil {
			return *x.xxx_hidden_Addr
		}
		return ""
	}
	return ""
}

func (x *Connection) GetId() uint64 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *Connection) GetType() *NetType {
	if x != nil {
		return x.xxx_hidden_Type
	}
	return nil
}

func (x *Connection) GetSource() string {
	if x != nil {
		if x.xxx_hidden_Source != nil {
			return *x.xxx_hidden_Source
		}
		return ""
	}
	return ""
}

func (x *Connection) GetInbound() string {
	if x != nil {
		if x.xxx_hidden_Inbound != nil {
			return *x.xxx_hidden_Inbound
		}
		return ""
	}
	return ""
}

func (x *Connection) GetOutbound() string {
	if x != nil {
		if x.xxx_hidden_Outbound != nil {
			return *x.xxx_hidden_Outbound
		}
		return ""
	}
	return ""
}

func (x *Connection) GetLocalAddr() string {
	if x != nil {
		if x.xxx_hidden_LocalAddr != nil {
			return *x.xxx_hidden_LocalAddr
		}
		return ""
	}
	return ""
}

func (x *Connection) GetDestionation() string {
	if x != nil {
		if x.xxx_hidden_Destionation != nil {
			return *x.xxx_hidden_Destionation
		}
		return ""
	}
	return ""
}

func (x *Connection) GetFakeIp() string {
	if x != nil {
		if x.xxx_hidden_FakeIp != nil {
			return *x.xxx_hidden_FakeIp
		}
		return ""
	}
	return ""
}

func (x *Connection) GetHosts() string {
	if x != nil {
		if x.xxx_hidden_Hosts != nil {
			return *x.xxx_hidden_Hosts
		}
		return ""
	}
	return ""
}

func (x *Connection) GetDomain() string {
	if x != nil {
		if x.xxx_hidden_Domain != nil {
			return *x.xxx_hidden_Domain
		}
		return ""
	}
	return ""
}

func (x *Connection) GetIp() string {
	if x != nil {
		if x.xxx_hidden_Ip != nil {
			return *x.xxx_hidden_Ip
		}
		return ""
	}
	return ""
}

func (x *Connection) GetTag() string {
	if x != nil {
		if x.xxx_hidden_Tag != nil {
			return *x.xxx_hidden_Tag
		}
		return ""
	}
	return ""
}

func (x *Connection) GetHash() string {
	if x != nil {
		if x.xxx_hidden_Hash != nil {
			return *x.xxx_hidden_Hash
		}
		return ""
	}
	return ""
}

func (x *Connection) GetNodeName() string {
	if x != nil {
		if x.xxx_hidden_NodeName != nil {
			return *x.xxx_hidden_NodeName
		}
		return ""
	}
	return ""
}

func (x *Connection) GetProtocol() string {
	if x != nil {
		if x.xxx_hidden_Protocol != nil {
			return *x.xxx_hidden_Protocol
		}
		return ""
	}
	return ""
}

func (x *Connection) GetProcess() string {
	if x != nil {
		if x.xxx_hidden_Process != nil {
			return *x.xxx_hidden_Process
		}
		return ""
	}
	return ""
}

func (x *Connection) GetPid() uint64 {
	if x != nil {
		return x.xxx_hidden_Pid
	}
	return 0
}

func (x *Connection) GetUid() uint64 {
	if x != nil {
		return x.xxx_hidden_Uid
	}
	return 0
}

func (x *Connection) GetTlsServerName() string {
	if x != nil {
		if x.xxx_hidden_TlsServerName != nil {
			return *x.xxx_hidden_TlsServerName
		}
		return ""
	}
	return ""
}

func (x *Connection) GetHttpHost() string {
	if x != nil {
		if x.xxx_hidden_HttpHost != nil {
			return *x.xxx_hidden_HttpHost
		}
		return ""
	}
	return ""
}

func (x *Connection) GetComponent() string {
	if x != nil {
		if x.xxx_hidden_Component != nil {
			return *x.xxx_hidden_Component
		}
		return ""
	}
	return ""
}

func (x *Connection) GetUdpMigrateId() uint64 {
	if x != nil {
		return x.xxx_hidden_UdpMigrateId
	}
	return 0
}

func (x *Connection) GetMode() bypass.Mode {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 23) {
			return x.xxx_hidden_Mode
		}
	}
	return bypass.Mode(0)
}

func (x *Connection) GetModeReason() string {
	if x != nil {
		if x.xxx_hidden_ModeReason != nil {
			return *x.xxx_hidden_ModeReason
		}
		return ""
	}
	return ""
}

func (x *Connection) SetAddr(v string) {
	x.xxx_hidden_Addr = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 25)
}

func (x *Connection) SetId(v uint64) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 25)
}

func (x *Connection) SetType(v *NetType) {
	x.xxx_hidden_Type = v
}

func (x *Connection) SetSource(v string) {
	x.xxx_hidden_Source = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 25)
}

func (x *Connection) SetInbound(v string) {
	x.xxx_hidden_Inbound = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 25)
}

func (x *Connection) SetOutbound(v string) {
	x.xxx_hidden_Outbound = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 25)
}

func (x *Connection) SetLocalAddr(v string) {
	x.xxx_hidden_LocalAddr = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 25)
}

func (x *Connection) SetDestionation(v string) {
	x.xxx_hidden_Destionation = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 25)
}

func (x *Connection) SetFakeIp(v string) {
	x.xxx_hidden_FakeIp = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 25)
}

func (x *Connection) SetHosts(v string) {
	x.xxx_hidden_Hosts = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 25)
}

func (x *Connection) SetDomain(v string) {
	x.xxx_hidden_Domain = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 10, 25)
}

func (x *Connection) SetIp(v string) {
	x.xxx_hidden_Ip = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 11, 25)
}

func (x *Connection) SetTag(v string) {
	x.xxx_hidden_Tag = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 12, 25)
}

func (x *Connection) SetHash(v string) {
	x.xxx_hidden_Hash = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 13, 25)
}

func (x *Connection) SetNodeName(v string) {
	x.xxx_hidden_NodeName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 14, 25)
}

func (x *Connection) SetProtocol(v string) {
	x.xxx_hidden_Protocol = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 15, 25)
}

func (x *Connection) SetProcess(v string) {
	x.xxx_hidden_Process = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 16, 25)
}

func (x *Connection) SetPid(v uint64) {
	x.xxx_hidden_Pid = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 17, 25)
}

func (x *Connection) SetUid(v uint64) {
	x.xxx_hidden_Uid = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 18, 25)
}

func (x *Connection) SetTlsServerName(v string) {
	x.xxx_hidden_TlsServerName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 19, 25)
}

func (x *Connection) SetHttpHost(v string) {
	x.xxx_hidden_HttpHost = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 20, 25)
}

func (x *Connection) SetComponent(v string) {
	x.xxx_hidden_Component = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 21, 25)
}

func (x *Connection) SetUdpMigrateId(v uint64) {
	x.xxx_hidden_UdpMigrateId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 22, 25)
}

func (x *Connection) SetMode(v bypass.Mode) {
	x.xxx_hidden_Mode = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 23, 25)
}

func (x *Connection) SetModeReason(v string) {
	x.xxx_hidden_ModeReason = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 24, 25)
}

func (x *Connection) HasAddr() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Connection) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Connection) HasType() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Type != nil
}

func (x *Connection) HasSource() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Connection) HasInbound() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Connection) HasOutbound() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *Connection) HasLocalAddr() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *Connection) HasDestionation() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *Connection) HasFakeIp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *Connection) HasHosts() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *Connection) HasDomain() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 10)
}

func (x *Connection) HasIp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 11)
}

func (x *Connection) HasTag() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 12)
}

func (x *Connection) HasHash() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 13)
}

func (x *Connection) HasNodeName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 14)
}

func (x *Connection) HasProtocol() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 15)
}

func (x *Connection) HasProcess() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 16)
}

func (x *Connection) HasPid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 17)
}

func (x *Connection) HasUid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 18)
}

func (x *Connection) HasTlsServerName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 19)
}

func (x *Connection) HasHttpHost() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 20)
}

func (x *Connection) HasComponent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 21)
}

func (x *Connection) HasUdpMigrateId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 22)
}

func (x *Connection) HasMode() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 23)
}

func (x *Connection) HasModeReason() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 24)
}

func (x *Connection) ClearAddr() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Addr = nil
}

func (x *Connection) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Id = 0
}

func (x *Connection) ClearType() {
	x.xxx_hidden_Type = nil
}

func (x *Connection) ClearSource() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Source = nil
}

func (x *Connection) ClearInbound() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Inbound = nil
}

func (x *Connection) ClearOutbound() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Outbound = nil
}

func (x *Connection) ClearLocalAddr() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_LocalAddr = nil
}

func (x *Connection) ClearDestionation() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_Destionation = nil
}

func (x *Connection) ClearFakeIp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_FakeIp = nil
}

func (x *Connection) ClearHosts() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_Hosts = nil
}

func (x *Connection) ClearDomain() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 10)
	x.xxx_hidden_Domain = nil
}

func (x *Connection) ClearIp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 11)
	x.xxx_hidden_Ip = nil
}

func (x *Connection) ClearTag() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 12)
	x.xxx_hidden_Tag = nil
}

func (x *Connection) ClearHash() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 13)
	x.xxx_hidden_Hash = nil
}

func (x *Connection) ClearNodeName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 14)
	x.xxx_hidden_NodeName = nil
}

func (x *Connection) ClearProtocol() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 15)
	x.xxx_hidden_Protocol = nil
}

func (x *Connection) ClearProcess() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 16)
	x.xxx_hidden_Process = nil
}

func (x *Connection) ClearPid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 17)
	x.xxx_hidden_Pid = 0
}

func (x *Connection) ClearUid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 18)
	x.xxx_hidden_Uid = 0
}

func (x *Connection) ClearTlsServerName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 19)
	x.xxx_hidden_TlsServerName = nil
}

func (x *Connection) ClearHttpHost() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 20)
	x.xxx_hidden_HttpHost = nil
}

func (x *Connection) ClearComponent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 21)
	x.xxx_hidden_Component = nil
}

func (x *Connection) ClearUdpMigrateId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 22)
	x.xxx_hidden_UdpMigrateId = 0
}

func (x *Connection) ClearMode() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 23)
	x.xxx_hidden_Mode = bypass.Mode_bypass
}

func (x *Connection) ClearModeReason() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 24)
	x.xxx_hidden_ModeReason = nil
}

type Connection_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Addr          *string
	Id            *uint64
	Type          *NetType
	Source        *string
	Inbound       *string
	Outbound      *string
	LocalAddr     *string
	Destionation  *string
	FakeIp        *string
	Hosts         *string
	Domain        *string
	Ip            *string
	Tag           *string
	Hash          *string
	NodeName      *string
	Protocol      *string
	Process       *string
	Pid           *uint64
	Uid           *uint64
	TlsServerName *string
	HttpHost      *string
	Component     *string
	UdpMigrateId  *uint64
	Mode          *bypass.Mode
	ModeReason    *string
}

func (b0 Connection_builder) Build() *Connection {
	m0 := &Connection{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Addr != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 25)
		x.xxx_hidden_Addr = b.Addr
	}
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 25)
		x.xxx_hidden_Id = *b.Id
	}
	x.xxx_hidden_Type = b.Type
	if b.Source != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 25)
		x.xxx_hidden_Source = b.Source
	}
	if b.Inbound != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 25)
		x.xxx_hidden_Inbound = b.Inbound
	}
	if b.Outbound != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 25)
		x.xxx_hidden_Outbound = b.Outbound
	}
	if b.LocalAddr != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 25)
		x.xxx_hidden_LocalAddr = b.LocalAddr
	}
	if b.Destionation != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 25)
		x.xxx_hidden_Destionation = b.Destionation
	}
	if b.FakeIp != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 25)
		x.xxx_hidden_FakeIp = b.FakeIp
	}
	if b.Hosts != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 25)
		x.xxx_hidden_Hosts = b.Hosts
	}
	if b.Domain != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 10, 25)
		x.xxx_hidden_Domain = b.Domain
	}
	if b.Ip != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 11, 25)
		x.xxx_hidden_Ip = b.Ip
	}
	if b.Tag != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 12, 25)
		x.xxx_hidden_Tag = b.Tag
	}
	if b.Hash != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 13, 25)
		x.xxx_hidden_Hash = b.Hash
	}
	if b.NodeName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 14, 25)
		x.xxx_hidden_NodeName = b.NodeName
	}
	if b.Protocol != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 15, 25)
		x.xxx_hidden_Protocol = b.Protocol
	}
	if b.Process != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 16, 25)
		x.xxx_hidden_Process = b.Process
	}
	if b.Pid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 17, 25)
		x.xxx_hidden_Pid = *b.Pid
	}
	if b.Uid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 18, 25)
		x.xxx_hidden_Uid = *b.Uid
	}
	if b.TlsServerName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 19, 25)
		x.xxx_hidden_TlsServerName = b.TlsServerName
	}
	if b.HttpHost != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 20, 25)
		x.xxx_hidden_HttpHost = b.HttpHost
	}
	if b.Component != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 21, 25)
		x.xxx_hidden_Component = b.Component
	}
	if b.UdpMigrateId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 22, 25)
		x.xxx_hidden_UdpMigrateId = *b.UdpMigrateId
	}
	if b.Mode != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 23, 25)
		x.xxx_hidden_Mode = *b.Mode
	}
	if b.ModeReason != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 24, 25)
		x.xxx_hidden_ModeReason = b.ModeReason
	}
	return m0
}

var File_statistic_config_proto protoreflect.FileDescriptor

var file_statistic_config_proto_rawDesc = string([]byte{
	0x0a, 0x16, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x2f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69,
	0x6e, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x1a, 0x21, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x6f, 0x5f,
	0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x62, 0x79, 0x70, 0x61, 0x73, 0x73, 0x2f, 0x62, 0x79,
	0x70, 0x61, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x84, 0x01, 0x0a, 0x08, 0x6e,
	0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x6e, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x79, 0x75, 0x68,
	0x61, 0x69, 0x69, 0x6e, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x41,
	0x0a, 0x0f, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69,
	0x6e, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x52, 0x0f, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x22, 0xcf, 0x05, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x61, 0x64, 0x64, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69, 0x69, 0x6e, 0x2e, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x2e, 0x6e, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x75, 0x74, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x75, 0x74, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x41, 0x64,
	0x64, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x61, 0x6b, 0x65, 0x5f, 0x69,
	0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x61, 0x6b, 0x65, 0x5f, 0x69, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x0f,
	0x74, 0x6c, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x6c, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x68,
	0x6f, 0x73, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x74, 0x74, 0x70, 0x5f,
	0x68, 0x6f, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x75, 0x64, 0x70, 0x5f, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x75, 0x64, 0x70, 0x5f,
	0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x04, 0x6d, 0x6f,
	0x64, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x79, 0x75, 0x68, 0x61, 0x69,
	0x69, 0x6e, 0x2e, 0x62, 0x79, 0x70, 0x61, 0x73, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x6d, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x65, 0x5f,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4a, 0x04, 0x08, 0x04, 0x10, 0x05, 0x52, 0x05, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x2a, 0x8f, 0x01, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07,
	0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x74, 0x63, 0x70,
	0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x74, 0x63, 0x70, 0x34, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04,
	0x74, 0x63, 0x70, 0x36, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x75, 0x64, 0x70, 0x10, 0x04, 0x12,
	0x08, 0x0a, 0x04, 0x75, 0x64, 0x70, 0x34, 0x10, 0x05, 0x12, 0x08, 0x0a, 0x04, 0x75, 0x64, 0x70,
	0x36, 0x10, 0x06, 0x12, 0x06, 0x0a, 0x02, 0x69, 0x70, 0x10, 0x07, 0x12, 0x07, 0x0a, 0x03, 0x69,
	0x70, 0x34, 0x10, 0x08, 0x12, 0x07, 0x0a, 0x03, 0x69, 0x70, 0x36, 0x10, 0x09, 0x12, 0x08, 0x0a,
	0x04, 0x75, 0x6e, 0x69, 0x78, 0x10, 0x0a, 0x12, 0x0c, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x78, 0x67,
	0x72, 0x61, 0x6d, 0x10, 0x0b, 0x12, 0x0e, 0x0a, 0x0a, 0x75, 0x6e, 0x69, 0x78, 0x70, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x10, 0x0c, 0x42, 0x3b, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x41, 0x73, 0x75, 0x74, 0x6f, 0x72, 0x75, 0x66, 0x61, 0x2f, 0x79, 0x75,
	0x68, 0x61, 0x69, 0x69, 0x6e, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x92, 0x03, 0x05, 0xd2, 0x3e, 0x02,
	0x10, 0x03, 0x62, 0x08, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x70, 0xe8, 0x07,
})

var file_statistic_config_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_statistic_config_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_statistic_config_proto_goTypes = []any{
	(Type)(0),          // 0: yuhaiin.statistic.type
	(*NetType)(nil),    // 1: yuhaiin.statistic.net_type
	(*Connection)(nil), // 2: yuhaiin.statistic.connection
	(bypass.Mode)(0),   // 3: yuhaiin.bypass.mode
}
var file_statistic_config_proto_depIdxs = []int32{
	0, // 0: yuhaiin.statistic.net_type.conn_type:type_name -> yuhaiin.statistic.type
	0, // 1: yuhaiin.statistic.net_type.underlying_type:type_name -> yuhaiin.statistic.type
	1, // 2: yuhaiin.statistic.connection.type:type_name -> yuhaiin.statistic.net_type
	3, // 3: yuhaiin.statistic.connection.mode:type_name -> yuhaiin.bypass.mode
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_statistic_config_proto_init() }
func file_statistic_config_proto_init() {
	if File_statistic_config_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_statistic_config_proto_rawDesc), len(file_statistic_config_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_statistic_config_proto_goTypes,
		DependencyIndexes: file_statistic_config_proto_depIdxs,
		EnumInfos:         file_statistic_config_proto_enumTypes,
		MessageInfos:      file_statistic_config_proto_msgTypes,
	}.Build()
	File_statistic_config_proto = out.File
	file_statistic_config_proto_goTypes = nil
	file_statistic_config_proto_depIdxs = nil
}
